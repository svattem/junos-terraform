<?xml version="1.0" encoding="UTF-8"?>
<module name="junos-conf-security"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:jc-security="http://yang.juniper.net/junos/conf/security"
        xmlns:jt="http://yang.juniper.net/junos/common/types"
        xmlns:jc="http://yang.juniper.net/junos/conf/root">
  <namespace uri="http://yang.juniper.net/junos/conf/security"/>
  <prefix value="jc-security"/>
  <import module="junos-common-types">
    <prefix value="jt"/>
    <revision-date date="2019-01-01"/>
  </import>
  <import module="junos-conf-root">
    <prefix value="jc"/>
    <revision-date date="2019-01-01"/>
  </import>
  <organization>
    <text>Juniper Networks, Inc.</text>
  </organization>
  <contact>
    <text>yang-support@juniper.net</text>
  </contact>
  <description>
    <text>Junos security configuration module</text>
  </description>
  <revision date="2019-01-01">
    <description>
      <text>Junos: 19.4R1.9</text>
    </description>
  </revision>
  <augment target-node="/jc:configuration">
    <uses name="security-group"/>
  </augment>
  <augment target-node="/jc:configuration/jc:groups">
    <uses name="security-group"/>
  </augment>
  <grouping name="security-group">
    <container name="security">
      <description>
        <text>Security configuration</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="alarms">
        <description>
          <text>Configure security alarms</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="audible">
          <presence value="enable audible"/>
          <description>
            <text>Beep when new security alarms arrive</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="continuous">
            <description>
              <text>Keep beeping until all security alarms have been cleared</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <container name="potential-violation">
          <description>
            <text>Configure potential security violations</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="authentication">
            <description>
              <text>Raise alarm for specified number of authentication failures</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="2 .. 10"/>
              </type>
            </type>
          </leaf>
          <leaf name="cryptographic-self-test">
            <description>
              <text>Raise alarm for cryptographic self test failures</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="key-generation-self-test">
            <description>
              <text>Raise alarm for key generation self test failures</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="non-cryptographic-self-test">
            <description>
              <text>Raise alarm for non-cryptographic self test failures</text>
            </description>
            <type name="empty"/>
          </leaf>
          <container name="policy">
            <description>
              <text>Raise alarm for flow policy violations</text>
            </description>
          </container>
          <container name="replay-attacks">
            <presence value="enable replay-attacks"/>
            <description>
              <text>No. of Replay attacks before which an alarm needs to be raised</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="threshold">
              <description>
                <text>Replay threshold value</text>
              </description>
              <default value="1000"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 1000000000"/>
                </type>
              </type>
            </leaf>
          </container>
          <leaf name="security-log-percent-full">
            <description>
              <text>Raise alarm when security log exceeds this percent capacity</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint8">
                <range value="0 .. 100"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="log">
        <description>
          <text>Configure auditable security logs</text>
        </description>
        <uses name="log-object"/>
      </container>
      <container name="certificates">
        <description>
          <text>X.509 certificate configuration</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="local">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Local X.509 certificate configuration</text>
          </description>
          <uses name="certificate-object"/>
        </list>
        <leaf name="path-length">
          <description>
            <text>Maximum certificate path length</text>
          </description>
          <default value="15"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 15"/>
            </type>
          </type>
        </leaf>
        <leaf name="maximum-certificates">
          <description>
            <text>Maximum number of certificates to cache</text>
          </description>
          <default value="1024"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="64 .. 4294967295"/>
            </type>
          </type>
        </leaf>
        <leaf name="cache-size">
          <description>
            <text>Maximum size of certificate cache</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
        <leaf name="cache-timeout-negative">
          <description>
            <text>Time in seconds to cache negative responses</text>
          </description>
          <default value="20"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="10 .. 4294967295"/>
            </type>
          </type>
        </leaf>
        <leaf name="enrollment-retry">
          <description>
            <text>Number of retry attempts for an enrollment request</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 1080"/>
            </type>
          </type>
        </leaf>
        <list name="certification-authority">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>CA X.509 certificate configuration</text>
          </description>
          <leaf name="name">
            <description>
              <text>CA profile name</text>
            </description>
            <type name="string"/>
          </leaf>
          <uses name="apply-advanced"/>
          <leaf name="ca-name">
            <description>
              <text>CA name</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="file">
            <description>
              <text>File to read certificate from</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="crl">
            <description>
              <text>File to read crl from</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="enrollment-url">
            <description>
              <text>URL</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="ldap-url">
            <description>
              <text>URL</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="encoding">
            <description>
              <text>Encoding to use for certificate or CRL on disk</text>
            </description>
            <default value="binary"/>
            <type name="enumeration">
              <enum name="binary">
                <description>
                  <text>DER encoding</text>
                </description>
              </enum>
              <enum name="pem">
                <description>
                  <text>Privacy-enhanced-mail encoding, base64</text>
                </description>
              </enum>
            </type>
          </leaf>
        </list>
      </container>
      <container name="authentication-key-chains">
        <description>
          <text>Authentication key chain configuration</text>
        </description>
        <uses name="security-authentication-key-chains"/>
      </container>
      <container name="ssh-known-hosts">
        <description>
          <text>SSH known host list</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="host">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>SSH known host entry</text>
          </description>
          <leaf name="name">
            <description>
              <text>Host name</text>
            </description>
            <type name="string"/>
          </leaf>
          <uses name="apply-advanced"/>
          <leaf name="rsa1-key">
            <description>
              <text>Base64 encoded RSA key (protocol version 1)</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="rsa-key">
            <description>
              <text>Base64 encoded RSA key</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="dsa-key">
            <description>
              <text>Base64 encoded DSA key</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="ecdsa-key">
            <description>
              <text>Base64 encoded ECDSA key</text>
            </description>
            <status value="deprecated"/>
            <type name="string"/>
          </leaf>
          <leaf name="ecdsa-sha2-nistp256-key">
            <description>
              <text>Base64 encoded ECDSA-SHA2-NIST256 key</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="ecdsa-sha2-nistp384-key">
            <description>
              <text>Base64 encoded ECDSA-SHA2-NIST384 key</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="ecdsa-sha2-nistp521-key">
            <description>
              <text>Base64 encoded ECDSA-SHA2-NIST521 key</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="ed25519-key">
            <description>
              <text>Base64 encoded ED25519 key</text>
            </description>
            <type name="string"/>
          </leaf>
        </list>
      </container>
      <leaf name="key-protection">
        <description>
          <text>Common-Criteria key-protection configuration</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="pki">
        <description>
          <text>PKI service configuration</text>
        </description>
        <presence value="enable pki"/>
        <uses name="security-pki"/>
      </container>
      <container name="idp">
        <description>
          <text>IDP configuration</text>
        </description>
        <list name="idp-policy">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Configure IDP policy</text>
          </description>
          <uses name="idp-policy-type"/>
        </list>
        <leaf name="active-policy">
          <description>
            <text>Set active policy</text>
          </description>
          <status value="deprecated"/>
          <type name="string"/>
        </leaf>
        <leaf name="default-policy">
          <description>
            <text>Set active policy</text>
          </description>
          <type name="string"/>
        </leaf>
        <list name="custom-attack">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Configure custom attacks</text>
          </description>
          <uses name="custom-attack-type"/>
        </list>
        <list name="custom-attack-group">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Configure custom attack groups</text>
          </description>
          <uses name="custom-attack-group-type"/>
        </list>
        <list name="dynamic-attack-group">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Configure dynamic attack groups</text>
          </description>
          <uses name="dynamic-attack-group-type"/>
        </list>
        <container name="traceoptions">
          <description>
            <text>Trace options for idp services</text>
          </description>
          <uses name="idpd-traceoptions-type"/>
        </container>
        <container name="security-package">
          <description>
            <text>Security package options</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="url">
            <description>
              <text>URL of Security package download</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="source-address">
            <description>
              <text>Source address to be used for sending download request</text>
            </description>
            <type name="jt:ipv4addr"/>
          </leaf>
          <leaf name="proxy-profile">
            <description>
              <text>Proxy profile of security package download</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <leaf name="routing-instance">
            <description>
              <text>Routing instance for security-package download</text>
            </description>
            <type name="string"/>
          </leaf>
          <container name="install">
            <presence value="enable install"/>
            <description>
              <text>Configure install command</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="ignore-version-check">
              <description>
                <text>Skip version check  when attack database gets installed</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="ignore-appid-failure">
              <description>
                <text>Continue idp installation even if appid installation fails</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <container name="automatic">
            <presence value="enable automatic"/>
            <description>
              <text>Scheduled download and update</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="start-time">
              <description>
                <text>Start time (YYYY-MM-DD.HH:MM:SS)</text>
              </description>
              <type name="jt:time"/>
            </leaf>
            <leaf name="interval">
              <description>
                <text>Interval</text>
              </description>
              <units name="hours"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 336"/>
                </type>
              </type>
            </leaf>
            <leaf name="download-timeout">
              <description>
                <text>Maximum time for download to complete</text>
              </description>
              <status value="deprecated"/>
              <default value="1"/>
              <units name="minutes"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 60"/>
                </type>
              </type>
            </leaf>
            <choice name="enable-disable">
              <case name="case_1">
                <leaf name="enable">
                  <description>
                    <text>Enable</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </container>
        <container name="sensor-configuration">
          <description>
            <text>IDP Sensor Configuration</text>
          </description>
          <container name="log">
            <description>
              <text>IDP Log Configuration</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="cache-size">
              <description>
                <text>Log cache size</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <container name="suppression">
              <presence value="enable suppression"/>
              <description>
                <text>Log suppression</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="enable-disable">
                <case name="case_1">
                  <leaf name="disable">
                    <description>
                      <text>Disable log suppression</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
              </choice>
              <choice name="include-destination-address-choice">
                <leaf name="include-destination-address">
                  <description>
                    <text>Include destination address while performing a log suppression</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-include-destination-address">
                  <description>
                    <text>Don't include destination address while performing a log suppression</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <leaf name="start-log">
                <description>
                  <text>Suppression start log</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32"/>
                </type>
              </leaf>
              <leaf name="max-logs-operate">
                <description>
                  <text>Maximum logs can be operate on</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32"/>
                </type>
              </leaf>
              <leaf name="max-time-report">
                <description>
                  <text>Time after suppressed logs will be reported</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32"/>
                </type>
              </leaf>
            </container>
          </container>
          <container name="application-identification">
            <presence value="enable application-identification"/>
            <description>
              <text>Application identification</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="enable-disable">
              <case name="case_1">
                <leaf name="disable">
                  <description>
                    <text>Disable application identification</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
            <choice name="application-system-cache-choice">
              <leaf name="application-system-cache">
                <description>
                  <text>Application system cache</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-application-system-cache">
                <description>
                  <text>Don't application system cache</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <leaf name="max-tcp-session-packet-memory">
              <description>
                <text>Max TCP session memory</text>
              </description>
              <status value="deprecated"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="max-udp-session-packet-memory">
              <description>
                <text>Max UDP session memory</text>
              </description>
              <status value="deprecated"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="max-sessions">
              <description>
                <text>Max sessions that can run AI at the same time</text>
              </description>
              <status value="deprecated"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="max-packet-memory">
              <description>
                <text>Max packet memory</text>
              </description>
              <status value="deprecated"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="max-packet-memory-ratio">
              <description>
                <text>Max packet memory ratio</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="max-reass-packet-memory-ratio">
              <description>
                <text>Max reass packet memory ratio</text>
              </description>
              <status value="deprecated"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="application-system-cache-timeout">
              <description>
                <text>Application system cache timeout</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
          </container>
          <container name="flow">
            <description>
              <text>Flow configuration</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="log-errors-choice">
              <leaf name="log-errors">
                <description>
                  <text>Flow log errors</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-log-errors">
                <description>
                  <text>Don't flow log errors</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <choice name="allow-icmp-without-flow-choice">
              <leaf name="allow-icmp-without-flow">
                <description>
                  <text>Allow icmp without flow</text>
                </description>
                <status value="deprecated"/>
                <type name="empty"/>
              </leaf>
              <leaf name="no-allow-icmp-without-flow">
                <description>
                  <text>Don't allow icmp without flow</text>
                </description>
                <status value="deprecated"/>
                <type name="empty"/>
              </leaf>
            </choice>
            <leaf name="hash-table-size">
              <description>
                <text>Flow hash table size</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="reject-timeout">
              <description>
                <text>Flow reject timeout</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="max-timers-poll-ticks">
              <description>
                <text>Maximum timers poll ticks</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="fifo-max-size">
              <description>
                <text>Maximum fifo size</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="udp-anticipated-timeout">
              <description>
                <text>Maximum udp anticipated timeout</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="allow-nonsyn-connection">
              <description>
                <text>Allow TCP non-syn connection</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf-list name="intel-inspect-protocols">
              <ordered-by value="user"/>
              <description>
                <text>Protocols to be processed in Intelligent Inspection mode</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </container>
          <container name="re-assembler">
            <description>
              <text>Re-assembler configuration</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="drop-on-syn-in-window-choice">
              <leaf name="drop-on-syn-in-window">
                <description>
                  <text>Drop session when SYN is seen in the window</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-drop-on-syn-in-window">
                <description>
                  <text>Don't drop session when SYN is seen in the window</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <choice name="ignore-memory-overflow-choice">
              <leaf name="ignore-memory-overflow">
                <description>
                  <text>Ignore memory overflow</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-ignore-memory-overflow">
                <description>
                  <text>Don't ignore memory overflow</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <choice name="ignore-reassembly-memory-overflow-choice">
              <leaf name="ignore-reassembly-memory-overflow">
                <description>
                  <text>Ignore packet reassembly memory overflow</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-ignore-reassembly-memory-overflow">
                <description>
                  <text>Don't ignore packet reassembly memory overflow</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <leaf name="ignore-reassembly-overflow">
              <description>
                <text>Ignore global reassembly overflow</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="max-packet-mem">
              <description>
                <text>Maximum packet memory</text>
              </description>
              <status value="deprecated"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="max-flow-mem">
              <description>
                <text>Maximum flow memory</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="max-packet-mem-ratio">
              <description>
                <text>Maximum packet memory ratio</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="action-on-reassembly-failure">
              <description>
                <text>Select the action on reassembly failures</text>
              </description>
              <default value="drop"/>
              <type name="enumeration">
                <enum name="ignore">
                  <description>
                    <text>No action is taken.</text>
                  </description>
                </enum>
                <enum name="drop">
                  <description>
                    <text>Drop the packet.</text>
                  </description>
                </enum>
                <enum name="drop-session">
                  <description>
                    <text>Drop the session.</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <choice name="tcp-error-logging-choice">
              <leaf name="tcp-error-logging">
                <description>
                  <text>Enable logging on tcp errors</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-tcp-error-logging">
                <description>
                  <text>Don't enable logging on tcp errors</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <leaf name="max-synacks-queued">
              <description>
                <text>Maximum syn-acks queued with different SEQ numbers </text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <choice name="force-tcp-window-checks-choice">
              <leaf name="force-tcp-window-checks">
                <description>
                  <text>Force TCP window checks if uni-directional policy is configured</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-force-tcp-window-checks">
                <description>
                  <text>Don't force TCP window checks if uni-directional policy is configured</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
          </container>
          <container name="ips">
            <description>
              <text>Ips configuration</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="process-override-choice">
              <leaf name="process-override">
                <description>
                  <text>Process override</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-process-override">
                <description>
                  <text>Don't process override</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <choice name="detect-shellcode-choice">
              <leaf name="detect-shellcode">
                <description>
                  <text>Detect shellcode</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-detect-shellcode">
                <description>
                  <text>Don't detect shellcode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <choice name="process-ignore-s2c-choice">
              <leaf name="process-ignore-s2c">
                <description>
                  <text>Process ignore s2c</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-process-ignore-s2c">
                <description>
                  <text>Don't process ignore s2c</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <choice name="ignore-regular-expression-choice">
              <leaf name="ignore-regular-expression">
                <description>
                  <text>Ignore regular expression</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-ignore-regular-expression">
                <description>
                  <text>Don't ignore regular expression</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <leaf name="process-port">
              <description>
                <text>Process port</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="fifo-max-size">
              <description>
                <text>Maximum fifo size</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="log-supercede-min">
              <description>
                <text>Minimum log supercede</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="content-decompression-max-memory-kb">
              <description>
                <text>Maximum memory usage in kilo bytes</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="content-decompression-max-ratio">
              <description>
                <text>Maximum decompression ratio supported</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
            <leaf name="session-pkt-depth">
              <description>
                <text>Session pkt scanning depth</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
          </container>
          <container name="global">
            <description>
              <text>Global configuration</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="enable-packet-pool-choice">
              <leaf name="enable-packet-pool">
                <description>
                  <text>Enable packet pool</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-enable-packet-pool">
                <description>
                  <text>Don't enable packet pool</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <leaf name="log-xff-header">
              <description>
                <text>Log xff header</text>
              </description>
              <type name="empty"/>
            </leaf>
            <choice name="enable-all-qmodules-choice">
              <leaf name="enable-all-qmodules">
                <description>
                  <text>Enable all qmodules</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-enable-all-qmodules">
                <description>
                  <text>Don't enable all qmodules</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <choice name="policy-lookup-cache-choice">
              <leaf name="policy-lookup-cache">
                <description>
                  <text>Policy lookup cache</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-policy-lookup-cache">
                <description>
                  <text>Don't policy lookup cache</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <leaf name="memory-limit-percent">
              <description>
                <text>Memory limit percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32"/>
              </type>
            </leaf>
          </container>
          <container name="detector">
            <description>
              <text>Detector Configuration</text>
            </description>
            <uses name="apply-advanced"/>
            <list name="protocol-name">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Apropriate help string</text>
              </description>
              <uses name="proto-object"/>
            </list>
          </container>
          <container name="high-availability">
            <description>
              <text>High availability configuration</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="no-policy-cold-synchronization">
              <description>
                <text>Disable policy cold synchronization</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
        </container>
        <leaf name="max-sessions">
          <description>
            <text>Max number of IDP sessions</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <list name="logical-system">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Configure max IDP sessions for the logial system</text>
          </description>
          <uses name="logical-system-type"/>
        </list>
        <list name="tenant-system">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Configure max IDP sessions for the tenant</text>
          </description>
          <uses name="tenant-system-type"/>
        </list>
      </container>
    </container>
  </grouping>
  <grouping name="apply-advanced">
    <description>
      <text>Apply advanced configuration logic</text>
    </description>
    <leaf-list name="apply-groups">
      <ordered-by value="user"/>
      <description>
        <text>Groups from which to inherit configuration data</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf-list name="apply-groups-except">
      <ordered-by value="user"/>
      <description>
        <text>Don't inherit configuration data from these groups</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <list name="apply-macro">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Macro and parameters for commit script expansion</text>
      </description>
      <uses name="apply-macro-type"/>
    </list>
  </grouping>
  <grouping name="apply-macro-type">
    <description>
      <text>Macro data for commit-script expansion</text>
    </description>
    <leaf name="name">
      <description>
        <text>Name of the macro to be expanded</text>
      </description>
      <type name="string"/>
    </leaf>
    <list name="data">
      <key value="name"/>
      <uses name="macro-data-type"/>
    </list>
  </grouping>
  <grouping name="certificate-object">
    <leaf name="name">
      <description>
        <text>Simple name to identify this certificate</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="certificate">
      <description>
        <text>Certificate and private key string</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="custom-attack-group-type">
    <description>
      <text>Define custom attack group</text>
    </description>
    <leaf name="name">
      <description>
        <text>Custom attack group name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="attack-group-description">
      <description>
        <text>Attack group description in xml format</text>
      </description>
      <status value="deprecated"/>
      <type name="string"/>
    </leaf>
    <leaf-list name="group-members">
      <ordered-by value="user"/>
      <description>
        <text>List of attacks/attack groups belonging to this group</text>
      </description>
      <type name="string"/>
    </leaf-list>
  </grouping>
  <grouping name="custom-attack-type">
    <description>
      <text>Define custom attack</text>
    </description>
    <leaf name="name">
      <description>
        <text>Custom attack name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="attack-description">
      <description>
        <text>Attack description in xml format</text>
      </description>
      <status value="deprecated"/>
      <type name="string"/>
    </leaf>
    <leaf name="recommended-action">
      <description>
        <text>Recommended Action</text>
      </description>
      <type name="enumeration">
        <enum name="none">
          <description>
            <text>No action</text>
          </description>
        </enum>
        <enum name="ignore">
          <description>
            <text>No further inspection on the flow</text>
          </description>
        </enum>
        <enum name="drop-packet">
          <description>
            <text>Drop the packet</text>
          </description>
        </enum>
        <enum name="drop">
          <description>
            <text>Drop the packet and subsequent packets of the flow</text>
          </description>
        </enum>
        <enum name="close-client">
          <description>
            <text>Reset the client side</text>
          </description>
        </enum>
        <enum name="close-server">
          <description>
            <text>Reset the server side</text>
          </description>
        </enum>
        <enum name="close">
          <description>
            <text>Reset both client and server</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="severity">
      <description>
        <text>Select the severity that matches the lethality of this attack on your network</text>
      </description>
      <type name="enumeration">
        <enum name="info">
          <description>
            <text>Provide information of attack when it matches.</text>
          </description>
        </enum>
        <enum name="warning">
          <description>
            <text>Issue a warning when attack matches.</text>
          </description>
        </enum>
        <enum name="minor">
          <description>
            <text>The attack is a  minor one.</text>
          </description>
        </enum>
        <enum name="major">
          <description>
            <text>The attack is a major one.</text>
          </description>
        </enum>
        <enum name="critical">
          <description>
            <text>The attack is a critical one.</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="time-binding">
      <description>
        <text>Time binding params</text>
      </description>
      <leaf name="count">
        <description>
          <text>Number of times this attack is to be triggered</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
      <leaf name="scope">
        <description>
          <text>Scope within which the count occurs</text>
        </description>
        <type name="enumeration">
          <enum name="peer">
            <description>
              <text>If the attack is between a single source and single destination</text>
            </description>
          </enum>
          <enum name="source">
            <description>
              <text>If the attack is from one source and multiple destination</text>
            </description>
          </enum>
          <enum name="destination">
            <description>
              <text>If the attack is from multiple sources to one destination</text>
            </description>
          </enum>
        </type>
      </leaf>
    </container>
    <container name="attack-type">
      <description>
        <text>Type of attack</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="signature">
        <description>
          <text>Signature based attack</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="protocol-binding">
          <description>
            <text>Protocol binding over which attack will be detected</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="protocol">
            <case name="case_1">
              <container name="tcp">
                <presence value="enable tcp"/>
                <description>
                  <text>Attack is for TCP packets only</text>
                </description>
                <uses name="apply-advanced"/>
                <list name="minimum-port">
                  <key value="name"/>
                  <ordered-by value="user"/>
                  <description>
                    <text>Multiple sets of (single port/port ranges) can be specified</text>
                  </description>
                  <uses name="port-range"/>
                </list>
              </container>
            </case>
            <case name="case_2">
              <container name="udp">
                <presence value="enable udp"/>
                <description>
                  <text>Attack is for UDP packets only</text>
                </description>
                <uses name="apply-advanced"/>
                <list name="minimum-port">
                  <key value="name"/>
                  <ordered-by value="user"/>
                  <description>
                    <text>Either single port or port ranges can be specified</text>
                  </description>
                  <uses name="port-range"/>
                </list>
              </container>
            </case>
            <case name="case_3">
              <container name="rpc">
                <presence value="enable rpc"/>
                <description>
                  <text>Attack is for RPC packets only</text>
                </description>
                <uses name="apply-advanced"/>
                <leaf name="program-number">
                  <description>
                    <text>RPC Program Number</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_4">
              <leaf name="icmp">
                <description>
                  <text>Attack is for ICMP packets only</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_5">
              <leaf name="icmpv6">
                <description>
                  <text>Attack is for ICMPv6 packets only</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <container name="ip">
                <presence value="enable ip"/>
                <description>
                  <text>Attack is for all IP based packets</text>
                </description>
                <uses name="apply-advanced"/>
                <leaf name="protocol-number">
                  <description>
                    <text>Transport layer protocol number</text>
                  </description>
                  <type name="union">
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                    <type name="uint32">
                      <range value="0 .. 139"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_7">
              <container name="ipv6">
                <presence value="enable ipv6"/>
                <description>
                  <text>Attack is for all IPv6 based packets</text>
                </description>
                <uses name="apply-advanced"/>
                <leaf name="protocol-number">
                  <description>
                    <text>Transport layer protocol number</text>
                  </description>
                  <type name="union">
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                    <type name="uint32">
                      <range value="0 .. 139"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_8">
              <leaf name="application">
                <description>
                  <text>Application name</text>
                </description>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_9"/>
          </choice>
        </container>
        <leaf name="context">
          <description>
            <text>Context</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="pattern">
          <description>
            <text>Pattern is the signature of the attack you want to detect</text>
          </description>
          <type name="string">
            <length value="0 .. 511"/>
          </type>
        </leaf>
        <leaf name="pattern-pcre">
          <description>
            <text>Attack signature pattern in PCRE format</text>
          </description>
          <type name="string">
            <length value="0 .. 511"/>
          </type>
        </leaf>
        <container name="content">
          <description>
            <text>Mention the match-modifire parameters to enhance pattern matching</text>
          </description>
          <leaf name="pattern">
            <description>
              <text>Specify match-modifier pattern</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="depth">
            <description>
              <text>Maximum depth to search pattern within a packet. Depth is not relative</text>
            </description>
            <type name="union">
              <type name="uint16"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="offset">
            <description>
              <text>Where to start searching for a pattern within a packet. Offset value is not relative</text>
            </description>
            <type name="union">
              <type name="uint16"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="within">
            <description>
              <text>Maximum Number of bytes present between two conjugative pattern match. within is  relative</text>
            </description>
            <type name="union">
              <type name="uint16"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="distance">
            <description>
              <text>Maximum Length to ignore before searching next pattern match. Distance is  relative</text>
            </description>
            <type name="union">
              <type name="uint16"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="optional-parameters">
          <description>
            <text>Mention the optional parameters to enhance pattern matching</text>
          </description>
          <leaf name="min-offset">
            <description>
              <text>Minimum offset in data at which pattern-match can end</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="max-offset">
            <description>
              <text>Maximum offset in data at which pattern-match can end</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="min-length">
            <description>
              <text>Minimum match length required to match the pattern</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="edit-distance">
            <description>
              <text>Match the pattern within this edit distance</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="hamming-distance">
            <description>
              <text>Match the pattern within this hamming distance</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <leaf name="regexp">
          <description>
            <text>Regular expression used for matching repetition of patterns</text>
          </description>
          <type name="string">
            <length value="0 .. 511"/>
          </type>
        </leaf>
        <leaf name="negate">
          <description>
            <text>Trigger the attack if condition is not met</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="direction">
          <description>
            <text>Connection direction of the attack</text>
          </description>
          <type name="enumeration">
            <enum name="client-to-server">
              <description>
                <text>Client to Server</text>
              </description>
            </enum>
            <enum name="server-to-client">
              <description>
                <text>Server to Client</text>
              </description>
            </enum>
            <enum name="any">
              <description>
                <text>Any direction</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="shellcode">
          <description>
            <text>Specify shellcode flag for this attack</text>
          </description>
          <type name="enumeration">
            <enum name="intel">
              <description>
                <text>Detect shellcode for intel platforms</text>
              </description>
            </enum>
            <enum name="sparc">
              <description>
                <text>Detect shellcode for sparc platforms</text>
              </description>
            </enum>
            <enum name="all">
              <description>
                <text>Detect shellcode for both intel and sparc platforms</text>
              </description>
            </enum>
            <enum name="no-shellcode">
              <description>
                <text>Do not detect shellcode</text>
              </description>
            </enum>
          </type>
        </leaf>
        <container name="protocol">
          <description>
            <text>Protocol header matches</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="ipv4">
            <description>
              <text>IPv4 protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="tos">
              <presence value="enable tos"/>
              <description>
                <text>Type of Service</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="ihl">
              <presence value="enable ihl"/>
              <description>
                <text>Header length in words</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 15"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="total-length">
              <presence value="enable total-length"/>
              <description>
                <text>Total Length of IP datagram</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="identification">
              <presence value="enable identification"/>
              <description>
                <text>Fragment Identification</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="ip-flags">
              <presence value="enable ip-flags"/>
              <description>
                <text>IP Flag bits</text>
              </description>
              <choice name="rb-choice">
                <leaf name="rb">
                  <description>
                    <text>Reserved bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-rb">
                  <description>
                    <text>Don't reserved bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="mf-choice">
                <leaf name="mf">
                  <description>
                    <text>More Fragment bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-mf">
                  <description>
                    <text>Don't more Fragment bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="df-choice">
                <leaf name="df">
                  <description>
                    <text>Don't Fragment bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-df">
                  <description>
                    <text>Don't don't Fragment bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
            </container>
            <container name="ttl">
              <presence value="enable ttl"/>
              <description>
                <text>Time to live</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="protocol">
              <presence value="enable protocol"/>
              <description>
                <text>Transport layer protocol</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="source">
              <presence value="enable source"/>
              <description>
                <text>Source IP-address/Hostname</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="jt:ipv4addr"/>
              </leaf>
            </container>
            <container name="destination">
              <presence value="enable destination"/>
              <description>
                <text>Destination IP-address/Hostname</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="jt:ipv4addr"/>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="tcp">
            <description>
              <text>TCP protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="source-port">
              <presence value="enable source-port"/>
              <description>
                <text>Source port</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="destination-port">
              <presence value="enable destination-port"/>
              <description>
                <text>Destination port</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="sequence-number">
              <presence value="enable sequence-number"/>
              <description>
                <text>Sequence Number</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 4294967295"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="ack-number">
              <presence value="enable ack-number"/>
              <description>
                <text>Acknowledgement Number</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 4294967295"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="header-length">
              <presence value="enable header-length"/>
              <description>
                <text>Header Length in words</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 15"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="reserved">
              <presence value="enable reserved"/>
              <description>
                <text>Three reserved bits</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 7"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="window-size">
              <presence value="enable window-size"/>
              <description>
                <text>Window Size</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="urgent-pointer">
              <presence value="enable urgent-pointer"/>
              <description>
                <text>Urgent Pointer</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="tcp-flags">
              <presence value="enable tcp-flags"/>
              <description>
                <text>TCP header flags</text>
              </description>
              <choice name="r1-choice">
                <leaf name="r1">
                  <description>
                    <text>Set Reserverd bit 1</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-r1">
                  <description>
                    <text>Don't set Reserverd bit 1</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="r2-choice">
                <leaf name="r2">
                  <description>
                    <text>Set Reserved bit 2</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-r2">
                  <description>
                    <text>Don't set Reserved bit 2</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="urg-choice">
                <leaf name="urg">
                  <description>
                    <text>Set Urgent bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-urg">
                  <description>
                    <text>Don't set Urgent bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="ack-choice">
                <leaf name="ack">
                  <description>
                    <text>Set Acknowledge bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-ack">
                  <description>
                    <text>Don't set Acknowledge bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="psh-choice">
                <leaf name="psh">
                  <description>
                    <text>Set Push bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-psh">
                  <description>
                    <text>Don't set Push bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="rst-choice">
                <leaf name="rst">
                  <description>
                    <text>Set Reset bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-rst">
                  <description>
                    <text>Don't set Reset bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="syn-choice">
                <leaf name="syn">
                  <description>
                    <text>Set SYN bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-syn">
                  <description>
                    <text>Don't set SYN bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="fin-choice">
                <leaf name="fin">
                  <description>
                    <text>Set FINish bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-fin">
                  <description>
                    <text>Don't set FINish bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
            </container>
            <container name="option">
              <presence value="enable option"/>
              <description>
                <text>Kind</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="data-length">
              <presence value="enable data-length"/>
              <description>
                <text>Size of IP datagram subtracted by TCP header length</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="2 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="window-scale">
              <presence value="enable window-scale"/>
              <description>
                <text>Window scale</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="mss">
              <presence value="enable mss"/>
              <description>
                <text>Maximum Segment Size</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="udp">
            <description>
              <text>UDP protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="source-port">
              <presence value="enable source-port"/>
              <description>
                <text>Source port</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="destination-port">
              <presence value="enable destination-port"/>
              <description>
                <text>Destination port</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="data-length">
              <presence value="enable data-length"/>
              <description>
                <text>Size of IP datagram subtracted by UDP header length</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="icmp">
            <description>
              <text>ICMP protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="type">
              <presence value="enable type"/>
              <description>
                <text>Type</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="code">
              <presence value="enable code"/>
              <description>
                <text>Code</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="identification">
              <presence value="enable identification"/>
              <description>
                <text>Identifier in echo request/reply</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="sequence-number">
              <presence value="enable sequence-number"/>
              <description>
                <text>Sequence Number</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="data-length">
              <presence value="enable data-length"/>
              <description>
                <text>Size of IP datagram subtracted by ICMP header length</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="icmpv6">
            <description>
              <text>ICMPv6 protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="type">
              <presence value="enable type"/>
              <description>
                <text>Type</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="code">
              <presence value="enable code"/>
              <description>
                <text>Code</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="identification">
              <presence value="enable identification"/>
              <description>
                <text>Identifier in echo request/reply</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="sequence-number">
              <presence value="enable sequence-number"/>
              <description>
                <text>Sequence number</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="data-length">
              <presence value="enable data-length"/>
              <description>
                <text>Size of IPv6 datagram subtracted by ICMPv6 header length</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
        </container>
      </container>
      <container name="anomaly">
        <description>
          <text>Protocol anomaly</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="service">
          <description>
            <text>Service name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="test">
          <description>
            <text>Protocol anomaly condition to be checked</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="direction">
          <description>
            <text>Direction</text>
          </description>
          <type name="enumeration">
            <enum name="client-to-server">
              <description>
                <text>From Client to Server</text>
              </description>
            </enum>
            <enum name="server-to-client">
              <description>
                <text>From Server to Client</text>
              </description>
            </enum>
            <enum name="any">
              <description>
                <text>Any direction</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="shellcode">
          <description>
            <text>Specify shellcode flag for this attack</text>
          </description>
          <type name="enumeration">
            <enum name="intel">
              <description>
                <text>Detect shellcode for intel platforms</text>
              </description>
            </enum>
            <enum name="sparc">
              <description>
                <text>Detect shellcode for sparc platforms</text>
              </description>
            </enum>
            <enum name="all">
              <description>
                <text>Detect shellcode for both intel and sparc platforms</text>
              </description>
            </enum>
            <enum name="no-shellcode">
              <description>
                <text>Do not detect shellcode</text>
              </description>
            </enum>
          </type>
        </leaf>
      </container>
      <container name="chain">
        <description>
          <text>Chain attack</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="protocol-binding">
          <description>
            <text>Protocol binding over which attack will be detected</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="protocol">
            <case name="case_1">
              <container name="tcp">
                <presence value="enable tcp"/>
                <description>
                  <text>Attack is for TCP packets only</text>
                </description>
                <uses name="apply-advanced"/>
                <list name="minimum-port">
                  <key value="name"/>
                  <ordered-by value="user"/>
                  <description>
                    <text>Multiple sets of (single port/port ranges) can be specified</text>
                  </description>
                  <uses name="port-range"/>
                </list>
              </container>
            </case>
            <case name="case_2">
              <container name="udp">
                <presence value="enable udp"/>
                <description>
                  <text>Attack is for UDP packets only</text>
                </description>
                <uses name="apply-advanced"/>
                <list name="minimum-port">
                  <key value="name"/>
                  <ordered-by value="user"/>
                  <description>
                    <text>Either single port or port ranges can be specified</text>
                  </description>
                  <uses name="port-range"/>
                </list>
              </container>
            </case>
            <case name="case_3">
              <container name="rpc">
                <presence value="enable rpc"/>
                <description>
                  <text>Attack is for RPC packets only</text>
                </description>
                <uses name="apply-advanced"/>
                <leaf name="program-number">
                  <description>
                    <text>RPC Program Number</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_4">
              <leaf name="icmp">
                <description>
                  <text>Attack is for ICMP packets only</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_5">
              <leaf name="icmpv6">
                <description>
                  <text>Attack is for ICMPv6 packets only</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <container name="ip">
                <presence value="enable ip"/>
                <description>
                  <text>Attack is for all IP based packets</text>
                </description>
                <uses name="apply-advanced"/>
                <leaf name="protocol-number">
                  <description>
                    <text>Transport layer protocol number</text>
                  </description>
                  <type name="union">
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                    <type name="uint32">
                      <range value="0 .. 139"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_7">
              <container name="ipv6">
                <presence value="enable ipv6"/>
                <description>
                  <text>Attack is for all IPv6 based packets</text>
                </description>
                <uses name="apply-advanced"/>
                <leaf name="protocol-number">
                  <description>
                    <text>Transport layer protocol number</text>
                  </description>
                  <type name="union">
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                    <type name="uint32">
                      <range value="0 .. 139"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_8">
              <leaf name="application">
                <description>
                  <text>Application name</text>
                </description>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_9"/>
          </choice>
        </container>
        <leaf name="scope">
          <description>
            <text>Scope of the attack</text>
          </description>
          <type name="enumeration">
            <enum name="session">
              <description>
                <text>Allow matches across transactions within the same session</text>
              </description>
            </enum>
            <enum name="transaction">
              <description>
                <text>Allow matches in single transactions within the same session</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="order">
          <description>
            <text>Attacks should match in the order in which they are defined</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="reset">
          <description>
            <text>Repeat match should generate a new alert</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="expression">
          <description>
            <text>Boolean Expression(or, and, oand). Multiple expressions can be combined using parenthesis.</text>
          </description>
          <type name="string"/>
        </leaf>
        <list name="member">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of member attacks.</text>
          </description>
          <uses name="chain-member-type"/>
        </list>
      </container>
    </container>
  </grouping>
  <grouping name="chain-member-type">
    <description>
      <text>Chain member</text>
    </description>
    <leaf name="name">
      <description>
        <text>Custom attack name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <container name="attack-type">
      <presence value="enable attack-type"/>
      <description>
        <text>Type of attack</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="signature">
        <description>
          <text>Signature based attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="context">
          <description>
            <text>Context</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="pattern">
          <description>
            <text>Pattern is the signature of the attack you want to detect</text>
          </description>
          <type name="string">
            <length value="0 .. 511"/>
          </type>
        </leaf>
        <leaf name="pattern-pcre">
          <description>
            <text>Attack signature pattern in PCRE format</text>
          </description>
          <type name="string">
            <length value="0 .. 511"/>
          </type>
        </leaf>
        <container name="content">
          <description>
            <text>Mention the match-modifire parameters to enhance pattern matching</text>
          </description>
          <leaf name="pattern">
            <description>
              <text>Specify match-modifier pattern</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="depth">
            <description>
              <text>Maximum depth to search pattern within a packet. Depth is not relative</text>
            </description>
            <type name="union">
              <type name="uint16"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="offset">
            <description>
              <text>Where to start searching for a pattern within a packet. Offset value is not relative</text>
            </description>
            <type name="union">
              <type name="uint16"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="within">
            <description>
              <text>Maximum Number of bytes present between two conjugative pattern match. within is  relative</text>
            </description>
            <type name="union">
              <type name="uint16"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="distance">
            <description>
              <text>Maximum Length to ignore before searching next pattern match. Distance is  relative</text>
            </description>
            <type name="union">
              <type name="uint16"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="optional-parameters">
          <description>
            <text>Mention the optional parameters to enhance pattern matching</text>
          </description>
          <leaf name="min-offset">
            <description>
              <text>Minimum offset in data at which pattern-match can end</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="max-offset">
            <description>
              <text>Maximum offset in data at which pattern-match can end</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="min-length">
            <description>
              <text>Minimum match length required to match the pattern</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="edit-distance">
            <description>
              <text>Match the pattern within this edit distance</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="hamming-distance">
            <description>
              <text>Match the pattern within this hamming distance</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <leaf name="regexp">
          <description>
            <text>Regular expression used for matching repetition of patterns</text>
          </description>
          <type name="string">
            <length value="0 .. 511"/>
          </type>
        </leaf>
        <leaf name="negate">
          <description>
            <text>Trigger the attack if condition is not met</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="direction">
          <description>
            <text>Connection direction of the attack</text>
          </description>
          <type name="enumeration">
            <enum name="client-to-server">
              <description>
                <text>Client to Server</text>
              </description>
            </enum>
            <enum name="server-to-client">
              <description>
                <text>Server to Client</text>
              </description>
            </enum>
            <enum name="any">
              <description>
                <text>Any direction</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="shellcode">
          <description>
            <text>Specify shellcode flag for this attack</text>
          </description>
          <type name="enumeration">
            <enum name="intel">
              <description>
                <text>Detect shellcode for intel platforms</text>
              </description>
            </enum>
            <enum name="sparc">
              <description>
                <text>Detect shellcode for sparc platforms</text>
              </description>
            </enum>
            <enum name="all">
              <description>
                <text>Detect shellcode for both intel and sparc platforms</text>
              </description>
            </enum>
            <enum name="no-shellcode">
              <description>
                <text>Do not detect shellcode</text>
              </description>
            </enum>
          </type>
        </leaf>
        <container name="protocol">
          <description>
            <text>Protocol header matches</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="ipv4">
            <description>
              <text>IPv4 protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="tos">
              <presence value="enable tos"/>
              <description>
                <text>Type of Service</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="ihl">
              <presence value="enable ihl"/>
              <description>
                <text>Header length in words</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 15"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="total-length">
              <presence value="enable total-length"/>
              <description>
                <text>Total Length of IP datagram</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="identification">
              <presence value="enable identification"/>
              <description>
                <text>Fragment Identification</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="ip-flags">
              <presence value="enable ip-flags"/>
              <description>
                <text>IP Flag bits</text>
              </description>
              <choice name="rb-choice">
                <leaf name="rb">
                  <description>
                    <text>Reserved bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-rb">
                  <description>
                    <text>Don't reserved bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="mf-choice">
                <leaf name="mf">
                  <description>
                    <text>More Fragment bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-mf">
                  <description>
                    <text>Don't more Fragment bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="df-choice">
                <leaf name="df">
                  <description>
                    <text>Don't Fragment bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-df">
                  <description>
                    <text>Don't don't Fragment bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
            </container>
            <container name="ttl">
              <presence value="enable ttl"/>
              <description>
                <text>Time to live</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="protocol">
              <presence value="enable protocol"/>
              <description>
                <text>Transport layer protocol</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="source">
              <presence value="enable source"/>
              <description>
                <text>Source IP-address/Hostname</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="jt:ipv4addr"/>
              </leaf>
            </container>
            <container name="destination">
              <presence value="enable destination"/>
              <description>
                <text>Destination IP-address/Hostname</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="jt:ipv4addr"/>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="tcp">
            <description>
              <text>TCP protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="source-port">
              <presence value="enable source-port"/>
              <description>
                <text>Source port</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="destination-port">
              <presence value="enable destination-port"/>
              <description>
                <text>Destination port</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="sequence-number">
              <presence value="enable sequence-number"/>
              <description>
                <text>Sequence Number</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 4294967295"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="ack-number">
              <presence value="enable ack-number"/>
              <description>
                <text>Acknowledgement Number</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 4294967295"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="header-length">
              <presence value="enable header-length"/>
              <description>
                <text>Header Length in words</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 15"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="reserved">
              <presence value="enable reserved"/>
              <description>
                <text>Three reserved bits</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 7"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="window-size">
              <presence value="enable window-size"/>
              <description>
                <text>Window Size</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="urgent-pointer">
              <presence value="enable urgent-pointer"/>
              <description>
                <text>Urgent Pointer</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="tcp-flags">
              <presence value="enable tcp-flags"/>
              <description>
                <text>TCP header flags</text>
              </description>
              <choice name="r1-choice">
                <leaf name="r1">
                  <description>
                    <text>Set Reserverd bit 1</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-r1">
                  <description>
                    <text>Don't set Reserverd bit 1</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="r2-choice">
                <leaf name="r2">
                  <description>
                    <text>Set Reserved bit 2</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-r2">
                  <description>
                    <text>Don't set Reserved bit 2</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="urg-choice">
                <leaf name="urg">
                  <description>
                    <text>Set Urgent bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-urg">
                  <description>
                    <text>Don't set Urgent bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="ack-choice">
                <leaf name="ack">
                  <description>
                    <text>Set Acknowledge bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-ack">
                  <description>
                    <text>Don't set Acknowledge bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="psh-choice">
                <leaf name="psh">
                  <description>
                    <text>Set Push bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-psh">
                  <description>
                    <text>Don't set Push bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="rst-choice">
                <leaf name="rst">
                  <description>
                    <text>Set Reset bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-rst">
                  <description>
                    <text>Don't set Reset bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="syn-choice">
                <leaf name="syn">
                  <description>
                    <text>Set SYN bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-syn">
                  <description>
                    <text>Don't set SYN bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
              <choice name="fin-choice">
                <leaf name="fin">
                  <description>
                    <text>Set FINish bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
                <leaf name="no-fin">
                  <description>
                    <text>Don't set FINish bit</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </choice>
            </container>
            <container name="option">
              <presence value="enable option"/>
              <description>
                <text>Kind</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="data-length">
              <presence value="enable data-length"/>
              <description>
                <text>Size of IP datagram subtracted by TCP header length</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="2 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="window-scale">
              <presence value="enable window-scale"/>
              <description>
                <text>Window scale</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="mss">
              <presence value="enable mss"/>
              <description>
                <text>Maximum Segment Size</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="udp">
            <description>
              <text>UDP protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="source-port">
              <presence value="enable source-port"/>
              <description>
                <text>Source port</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="destination-port">
              <presence value="enable destination-port"/>
              <description>
                <text>Destination port</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="data-length">
              <presence value="enable data-length"/>
              <description>
                <text>Size of IP datagram subtracted by UDP header length</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="icmp">
            <description>
              <text>ICMP protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="type">
              <presence value="enable type"/>
              <description>
                <text>Type</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="code">
              <presence value="enable code"/>
              <description>
                <text>Code</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="identification">
              <presence value="enable identification"/>
              <description>
                <text>Identifier in echo request/reply</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="sequence-number">
              <presence value="enable sequence-number"/>
              <description>
                <text>Sequence Number</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="data-length">
              <presence value="enable data-length"/>
              <description>
                <text>Size of IP datagram subtracted by ICMP header length</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="icmpv6">
            <description>
              <text>ICMPv6 protocol parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="type">
              <presence value="enable type"/>
              <description>
                <text>Type</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="code">
              <presence value="enable code"/>
              <description>
                <text>Code</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="identification">
              <presence value="enable identification"/>
              <description>
                <text>Identifier in echo request/reply</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="sequence-number">
              <presence value="enable sequence-number"/>
              <description>
                <text>Sequence number</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="data-length">
              <presence value="enable data-length"/>
              <description>
                <text>Size of IPv6 datagram subtracted by ICMPv6 header length</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when value in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when value in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when value in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when value in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 255"/>
                  </type>
                </type>
              </leaf>
            </container>
            <container name="checksum-validate">
              <presence value="enable checksum-validate"/>
              <description>
                <text>Validate checksum field against calculated checksum</text>
              </description>
              <leaf name="match">
                <description>
                  <text>Match condition</text>
                </description>
                <type name="enumeration">
                  <enum name="equal">
                    <description>
                      <text>Match when checksum field in packet is exact match</text>
                    </description>
                  </enum>
                  <enum name="greater-than">
                    <description>
                      <text>Match when checksum field in packet is greater</text>
                    </description>
                  </enum>
                  <enum name="less-than">
                    <description>
                      <text>Match when checksum field in packet is less</text>
                    </description>
                  </enum>
                  <enum name="not-equal">
                    <description>
                      <text>Match when checksum field in packet is not exact match</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="value">
                <description>
                  <text>Match value</text>
                </description>
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 65535"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
        </container>
      </container>
      <container name="anomaly">
        <description>
          <text>Protocol anomaly</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="test">
          <description>
            <text>Protocol anomaly condition to be checked</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="direction">
          <description>
            <text>Direction</text>
          </description>
          <type name="enumeration">
            <enum name="client-to-server">
              <description>
                <text>From Client to Server</text>
              </description>
            </enum>
            <enum name="server-to-client">
              <description>
                <text>From Server to Client</text>
              </description>
            </enum>
            <enum name="any">
              <description>
                <text>Any direction</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="shellcode">
          <description>
            <text>Specify shellcode flag for this attack</text>
          </description>
          <type name="enumeration">
            <enum name="intel">
              <description>
                <text>Detect shellcode for intel platforms</text>
              </description>
            </enum>
            <enum name="sparc">
              <description>
                <text>Detect shellcode for sparc platforms</text>
              </description>
            </enum>
            <enum name="all">
              <description>
                <text>Detect shellcode for both intel and sparc platforms</text>
              </description>
            </enum>
            <enum name="no-shellcode">
              <description>
                <text>Do not detect shellcode</text>
              </description>
            </enum>
          </type>
        </leaf>
      </container>
    </container>
  </grouping>
  <grouping name="dynamic-attack-group-type">
    <description>
      <text>Define dynamic attack group</text>
    </description>
    <leaf name="name">
      <description>
        <text>Name of the dynamic attack group</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="attack-group-description">
      <description>
        <text>Filter name/value in xml format</text>
      </description>
      <status value="deprecated"/>
      <type name="string"/>
    </leaf>
    <container name="filters">
      <description>
        <text>Configure filters</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="direction">
        <presence value="enable direction"/>
        <description>
          <text>Direction of attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="expression">
          <description>
            <text>Boolean AND/OR to be used for values</text>
          </description>
          <default value="or"/>
          <type name="enumeration">
            <enum name="and">
              <description>
                <text>AND values together (recommended if 'exclude-*' values are set)</text>
              </description>
            </enum>
            <enum name="or">
              <description>
                <text>OR values together</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for direction field</text>
          </description>
          <type name="enumeration">
            <enum name="client-to-server">
              <description>
                <text>Select attacks from client to server</text>
              </description>
            </enum>
            <enum name="server-to-client">
              <description>
                <text>Select attacks from server to client</text>
              </description>
            </enum>
            <enum name="any">
              <description>
                <text>Select attacks which can occur in either direction</text>
              </description>
            </enum>
            <enum name="exclude-client-to-server">
              <description>
                <text>Filter out attacks from client to server</text>
              </description>
            </enum>
            <enum name="exclude-server-to-client">
              <description>
                <text>Filter out attacks from server to client</text>
              </description>
            </enum>
            <enum name="exclude-any">
              <description>
                <text>Filter out attacks which occur in either direction</text>
              </description>
            </enum>
          </type>
        </leaf-list>
      </container>
      <container name="severity">
        <presence value="enable severity"/>
        <description>
          <text>Severity of attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for severity field</text>
          </description>
          <type name="enumeration">
            <enum name="info">
              <description>
                <text>Provide information of attack when it matches.</text>
              </description>
            </enum>
            <enum name="warning">
              <description>
                <text>Issue a warning when attack matches.</text>
              </description>
            </enum>
            <enum name="minor">
              <description>
                <text>The attack is a minor one.</text>
              </description>
            </enum>
            <enum name="major">
              <description>
                <text>The attack is a major one.</text>
              </description>
            </enum>
            <enum name="critical">
              <description>
                <text>The attack is a critical one.</text>
              </description>
            </enum>
          </type>
        </leaf-list>
      </container>
      <container name="type">
        <presence value="enable type"/>
        <description>
          <text>Type of attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for type field</text>
          </description>
          <type name="enumeration">
            <enum name="signature">
              <description>
                <text>Signature based attacks</text>
              </description>
            </enum>
            <enum name="anomaly">
              <description>
                <text>Protocol anomalies</text>
              </description>
            </enum>
          </type>
        </leaf-list>
      </container>
      <choice name="recommended-choice">
        <leaf name="recommended">
          <description>
            <text>Recommended flag</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="no-recommended">
          <description>
            <text>Don't recommended flag</text>
          </description>
          <type name="empty"/>
        </leaf>
      </choice>
      <container name="performance">
        <presence value="enable performance"/>
        <description>
          <text>Performance of attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for performance field</text>
          </description>
          <type name="enumeration">
            <enum name="unknown">
              <description>
                <text>Performance level unknown</text>
              </description>
            </enum>
            <enum name="fast">
              <description>
                <text>Fast performance</text>
              </description>
            </enum>
            <enum name="normal">
              <description>
                <text>Normal performance</text>
              </description>
            </enum>
            <enum name="slow">
              <description>
                <text>Slow performance</text>
              </description>
            </enum>
          </type>
        </leaf-list>
      </container>
      <container name="category">
        <presence value="enable category"/>
        <description>
          <text>Category of attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for category field</text>
          </description>
          <type name="string"/>
        </leaf-list>
      </container>
      <container name="service">
        <presence value="enable service"/>
        <description>
          <text>Service/Application of attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for service field</text>
          </description>
          <type name="string"/>
        </leaf-list>
      </container>
      <container name="false-positives">
        <presence value="enable false-positives"/>
        <description>
          <text>False positive field in attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for false-positives field</text>
          </description>
          <type name="enumeration">
            <enum name="unknown">
              <description>
                <text>Unknown information</text>
              </description>
            </enum>
            <enum name="rarely">
              <description>
                <text>Rare false positives occurrence</text>
              </description>
            </enum>
            <enum name="occasionally">
              <description>
                <text>Ocassional false positives occurrence</text>
              </description>
            </enum>
            <enum name="frequently">
              <description>
                <text>Frequent false positives occurrence</text>
              </description>
            </enum>
          </type>
        </leaf-list>
      </container>
      <list name="vendor">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Vendor/Product the attack belongs to</text>
        </description>
        <uses name="vendor-object"/>
      </list>
      <container name="file-type">
        <presence value="enable file-type"/>
        <description>
          <text>File type the attack is valid for</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for file-type field</text>
          </description>
          <type name="string"/>
        </leaf-list>
      </container>
      <container name="vulnerability-type">
        <presence value="enable vulnerability-type"/>
        <description>
          <text>Vulnariability type of attack</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="values">
          <ordered-by value="user"/>
          <description>
            <text>Values for vulnariability-type field</text>
          </description>
          <type name="string"/>
        </leaf-list>
      </container>
      <choice name="excluded-choice">
        <leaf name="excluded">
          <description>
            <text>Excluded Attacks</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="no-excluded">
          <description>
            <text>Don't excluded Attacks</text>
          </description>
          <type name="empty"/>
        </leaf>
      </choice>
      <list name="cvss-score">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>CVSS score of Attack </text>
        </description>
        <leaf name="name">
          <description>
            <text>Match condition of CVSS score</text>
          </description>
          <type name="enumeration">
            <enum name="greater-than">
              <description>
                <text>Match when cvss score is greater</text>
              </description>
            </enum>
            <enum name="less-than">
              <description>
                <text>Match when cvss score is less</text>
              </description>
            </enum>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="value">
          <description>
            <text>Match value</text>
          </description>
          <type name="decimal64">
            <fraction-digits value="9"/>
            <range value="0 .. 10"/>
          </type>
        </leaf>
      </list>
      <list name="age-of-attack">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Age of an Attack </text>
        </description>
        <leaf name="name">
          <description>
            <text>Match condition of Age of Attack</text>
          </description>
          <type name="enumeration">
            <enum name="greater-than">
              <description>
                <text>Match when Age of Attack is greater</text>
              </description>
            </enum>
            <enum name="less-than">
              <description>
                <text>Match when Age of Attack is less</text>
              </description>
            </enum>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="value">
          <description>
            <text>Match value</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 100"/>
            </type>
          </type>
        </leaf>
      </list>
    </container>
  </grouping>
  <grouping name="idp-policy-type">
    <leaf name="name">
      <description>
        <text>IDP policy name</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="rulebase-ips">
      <description>
        <text>IPS rulebase</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="rule">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Configure IPS rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rule name</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="description">
          <description>
            <text>Rule description</text>
          </description>
          <type name="string"/>
        </leaf>
        <container name="match">
          <description>
            <text>Rule match criteria</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="from-zone">
            <description>
              <text>Match from zone</text>
            </description>
            <default value="any"/>
            <type name="string"/>
          </leaf>
          <choice name="source">
            <case name="case_1">
              <leaf-list name="source-address">
                <ordered-by value="user"/>
                <description>
                  <text>Match source address</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="source-except">
                <ordered-by value="user"/>
                <description>
                  <text>Don't match source address</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="source-prefix">
                <ordered-by value="user"/>
                <description>
                  <text>Match source address</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="source-prefix-except">
                <ordered-by value="user"/>
                <description>
                  <text>Don't match source address</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf-list>
            </case>
          </choice>
          <leaf name="to-zone">
            <description>
              <text>Match to zone</text>
            </description>
            <default value="any"/>
            <type name="string"/>
          </leaf>
          <choice name="destination">
            <case name="case_1">
              <leaf-list name="destination-address">
                <ordered-by value="user"/>
                <description>
                  <text>Match destination address</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="destination-except">
                <ordered-by value="user"/>
                <description>
                  <text>Don't match destination address</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="destination-prefix">
                <ordered-by value="user"/>
                <description>
                  <text>Match destination address</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="destination-prefix-except">
                <ordered-by value="user"/>
                <description>
                  <text>Don't match destination address</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf-list>
            </case>
          </choice>
          <leaf name="application">
            <description>
              <text>Specify application or application-set name to match</text>
            </description>
            <type name="string"/>
          </leaf>
          <container name="attacks">
            <description>
              <text>Match attack objects</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf-list name="custom-attacks">
              <ordered-by value="user"/>
              <description>
                <text>Custom attacks</text>
              </description>
              <type name="string"/>
            </leaf-list>
            <leaf-list name="custom-attack-groups">
              <ordered-by value="user"/>
              <description>
                <text>Custom attack groups</text>
              </description>
              <type name="string"/>
            </leaf-list>
            <leaf-list name="dynamic-attack-groups">
              <ordered-by value="user"/>
              <description>
                <text>Dynamic attack groups</text>
              </description>
              <type name="string"/>
            </leaf-list>
            <leaf-list name="predefined-attacks">
              <ordered-by value="user"/>
              <description>
                <text>Predefined attacks</text>
              </description>
              <type name="string"/>
            </leaf-list>
            <leaf-list name="predefined-attack-groups">
              <ordered-by value="user"/>
              <description>
                <text>Predefined attack groups</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </container>
        </container>
        <container name="then">
          <uses name="apply-advanced"/>
          <container name="action">
            <choice name="action">
              <case name="case_1">
                <leaf name="no-action">
                  <description>
                    <text>No action</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="ignore-connection">
                  <description>
                    <text>Ignore</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_3">
                <container name="mark-diffserv">
                  <description>
                    <text>Mark differentiated services codepoint (DSCP)</text>
                  </description>
                  <uses name="apply-advanced"/>
                  <leaf name="codepoint">
                    <description>
                      <text>Codepoint value</text>
                    </description>
                    <type name="union">
                      <type name="string">
                        <pattern value="&lt;.*&gt;|$.*"/>
                      </type>
                      <type name="uint32">
                        <range value="0 .. 63"/>
                      </type>
                    </type>
                  </leaf>
                </container>
              </case>
              <case name="case_4"/>
              <case name="case_5">
                <leaf name="drop-packet">
                  <description>
                    <text>Drop packet</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="drop-connection">
                  <description>
                    <text>Drop connection</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_7">
                <leaf name="close-client">
                  <description>
                    <text>Close client</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_8">
                <leaf name="close-server">
                  <description>
                    <text>Close server</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_9">
                <leaf name="close-client-and-server">
                  <description>
                    <text>Close client and server</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_10">
                <leaf name="recommended">
                  <description>
                    <text>Recommended</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="ip-action">
            <uses name="apply-advanced"/>
            <choice name="ip-action">
              <case name="case_1">
                <leaf name="ip-notify">
                  <description>
                    <text>Notify about future traffic</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="ip-close">
                  <description>
                    <text>Close future connections</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="ip-block">
                  <description>
                    <text>Block future connections</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
            <leaf name="target">
              <type name="enumeration">
                <enum name="service">
                  <description>
                    <text>Match source, destination, dst-port and protocol</text>
                  </description>
                </enum>
                <enum name="source-zone-address">
                  <description>
                    <text>Match source-zone and source-address</text>
                  </description>
                </enum>
                <enum name="source-address">
                  <description>
                    <text>Match source</text>
                  </description>
                </enum>
                <enum name="destination-address">
                  <description>
                    <text>Match destination</text>
                  </description>
                </enum>
                <enum name="zone-service">
                  <description>
                    <text>Match source-zone, destination, dst-port, protocol</text>
                  </description>
                </enum>
                <enum name="source-zone">
                  <description>
                    <text>Match source-zone</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="log">
              <description>
                <text>Log IP action taken</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="log-create">
              <description>
                <text>Log IP action creation</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="timeout">
              <description>
                <text>Number of seconds IP action should remain effective</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 64800"/>
                </type>
              </type>
            </leaf>
            <leaf name="refresh-timeout">
              <description>
                <text>Refresh timeout when future connections match installed ip-action filter</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <container name="notification">
            <presence value="enable notification"/>
            <description>
              <text>Configure notification/logging options</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="log-attacks">
              <presence value="enable log-attacks"/>
              <description>
                <text>Enable attack logging</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="alert">
                <description>
                  <text>Set alert flag in attack log</text>
                </description>
                <type name="empty"/>
              </leaf>
            </container>
          </container>
          <leaf name="severity">
            <description>
              <text>Set rule severity level</text>
            </description>
            <type name="enumeration">
              <enum name="info"/>
              <enum name="warning"/>
              <enum name="minor"/>
              <enum name="major"/>
              <enum name="critical"/>
            </type>
          </leaf>
        </container>
        <leaf name="terminal">
          <description>
            <text>Set/Unset terminal flag</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
    </container>
    <container name="rulebase-exempt">
      <description>
        <text>Exempt rulebase</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="rule">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Configure exempt rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rule name</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="description">
          <description>
            <text>Rule description</text>
          </description>
          <type name="string"/>
        </leaf>
        <container name="match">
          <description>
            <text>Rule match criteria</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="from-zone">
            <description>
              <text>Match from zone</text>
            </description>
            <default value="any"/>
            <type name="string"/>
          </leaf>
          <choice name="source">
            <case name="case_1">
              <leaf-list name="source-address">
                <ordered-by value="user"/>
                <description>
                  <text>Match source address</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="source-except">
                <ordered-by value="user"/>
                <description>
                  <text>Don't match source address</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="source-prefix">
                <ordered-by value="user"/>
                <description>
                  <text>Match source address</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="source-prefix-except">
                <ordered-by value="user"/>
                <description>
                  <text>Don't match source address</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf-list>
            </case>
          </choice>
          <leaf name="to-zone">
            <description>
              <text>Match to zone</text>
            </description>
            <default value="any"/>
            <type name="string"/>
          </leaf>
          <choice name="destination">
            <case name="case_1">
              <leaf-list name="destination-address">
                <ordered-by value="user"/>
                <description>
                  <text>Match destination address</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="destination-except">
                <ordered-by value="user"/>
                <description>
                  <text>Don't match destination address</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="destination-prefix">
                <ordered-by value="user"/>
                <description>
                  <text>Match destination address</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="destination-prefix-except">
                <ordered-by value="user"/>
                <description>
                  <text>Don't match destination address</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf-list>
            </case>
          </choice>
          <container name="attacks">
            <description>
              <text>Match attack objects</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf-list name="custom-attacks">
              <ordered-by value="user"/>
              <description>
                <text>Custom attacks</text>
              </description>
              <type name="string"/>
            </leaf-list>
            <leaf-list name="custom-attack-groups">
              <ordered-by value="user"/>
              <description>
                <text>Custom attack groups</text>
              </description>
              <type name="string"/>
            </leaf-list>
            <leaf-list name="dynamic-attack-groups">
              <ordered-by value="user"/>
              <description>
                <text>Dynamic attack groups</text>
              </description>
              <type name="string"/>
            </leaf-list>
            <leaf-list name="predefined-attacks">
              <ordered-by value="user"/>
              <description>
                <text>Predefined attacks</text>
              </description>
              <type name="string"/>
            </leaf-list>
            <leaf-list name="predefined-attack-groups">
              <ordered-by value="user"/>
              <description>
                <text>Predefined attack groups</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </container>
        </container>
      </list>
    </container>
  </grouping>
  <grouping name="idpd-traceoptions-type">
    <description>
      <text>Trace options for idpd</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="no-remote-trace">
      <description>
        <text>Disable remote tracing</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="file">
      <description>
        <text>Trace file information</text>
      </description>
      <leaf name="filename">
        <description>
          <text>Name of file in which to write trace information</text>
        </description>
        <type name="string">
          <length value="1 .. 1024"/>
        </type>
      </leaf>
      <leaf name="size">
        <description>
          <text>Maximum trace file size</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="files">
        <description>
          <text>Maximum number of trace files</text>
        </description>
        <default value="3"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="2 .. 1000"/>
          </type>
        </type>
      </leaf>
      <choice name="world-readable-choice">
        <leaf name="world-readable">
          <description>
            <text>Allow any user to read the log file</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="no-world-readable">
          <description>
            <text>Don't allow any user to read the log file</text>
          </description>
          <type name="empty"/>
        </leaf>
      </choice>
      <leaf name="match">
        <description>
          <text>Regular expression for lines to be logged</text>
        </description>
        <type name="jt:regular-expression"/>
      </leaf>
    </container>
    <list name="flag">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Events and other information to include in trace output</text>
      </description>
      <leaf name="name">
        <description>
          <text>Flag name to include in trace output</text>
        </description>
        <type name="enumeration">
          <enum name="all">
            <description>
              <text>All events</text>
            </description>
          </enum>
        </type>
      </leaf>
    </list>
    <leaf name="level">
      <description>
        <text>Level of debugging output</text>
      </description>
      <default value="error"/>
      <type name="enumeration">
        <enum name="error">
          <description>
            <text>Match error conditions</text>
          </description>
        </enum>
        <enum name="warning">
          <description>
            <text>Match warning messages</text>
          </description>
        </enum>
        <enum name="notice">
          <description>
            <text>Match conditions that should be handled specially</text>
          </description>
        </enum>
        <enum name="info">
          <description>
            <text>Match informational messages</text>
          </description>
        </enum>
        <enum name="verbose">
          <description>
            <text>Match verbose messages</text>
          </description>
        </enum>
        <enum name="all">
          <description>
            <text>Match all levels</text>
          </description>
        </enum>
      </type>
    </leaf>
  </grouping>
  <grouping name="log-object">
    <description>
      <text>Configure auditable security logs</text>
    </description>
    <uses name="apply-advanced"/>
    <list name="exclude">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>List of security log criteria to exclude from the audit log</text>
      </description>
      <status value="deprecated"/>
      <leaf name="name">
        <description>
          <text>Exclude criteria name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="destination-address">
        <description>
          <text>Destination address</text>
        </description>
        <type name="jt:ipaddr"/>
      </leaf>
      <leaf name="destination-port">
        <description>
          <text>Destination port</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
      <leaf name="event-id">
        <description>
          <text>Event ID filter</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="failure">
        <description>
          <text>Event was a failure</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="interface-name">
        <description>
          <text>Name of interface</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="policy-name">
        <description>
          <text>Policy name filter</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="process">
        <description>
          <text>Process that generated the event</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="protocol">
        <description>
          <text>Protocol filter</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="source-address">
        <description>
          <text>Source address</text>
        </description>
        <type name="jt:ipaddr"/>
      </leaf>
      <leaf name="source-port">
        <description>
          <text>Source port</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
      <leaf name="success">
        <description>
          <text>Event was successful</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="username">
        <description>
          <text>Username filter</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <leaf name="limit">
      <description>
        <text>Limit number of security log entries to keep in memory</text>
      </description>
      <status value="deprecated"/>
      <default value="10000"/>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <container name="cache">
      <presence value="enable cache"/>
      <description>
        <text>Cache security log events in the audit log buffer</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="exclude">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>List of security log criteria to exclude from the audit log</text>
        </description>
        <leaf name="name">
          <description>
            <text>Exclude criteria name</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="destination-address">
          <description>
            <text>Destination address</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf>
        <leaf name="destination-port">
          <description>
            <text>Destination port</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="event-id">
          <description>
            <text>Event ID filter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="failure">
          <description>
            <text>Event was a failure</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="interface-name">
          <description>
            <text>Name of interface</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="policy-name">
          <description>
            <text>Policy name filter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="process">
          <description>
            <text>Process that generated the event</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="protocol">
          <description>
            <text>Protocol filter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="source-address">
          <description>
            <text>Source address</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf>
        <leaf name="source-port">
          <description>
            <text>Source port</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="success">
          <description>
            <text>Event was successful</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="username">
          <description>
            <text>Username filter</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <leaf name="limit">
        <description>
          <text>Limit number of security log entries to keep in memory</text>
        </description>
        <default value="10000"/>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <list name="host">
      <key value="name"/>
      <ordered-by value="user"/>
      <max-elements value="10"/>
      <leaf name="name">
        <description>
          <text>Name of host to notify</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="contents">
        <key value="name"/>
        <leaf name="name">
          <description>
            <text>Facility type</text>
          </description>
          <type name="enumeration">
            <enum name="services">
              <description>
                <text>Adaptive Services PIC</text>
              </description>
            </enum>
          </type>
        </leaf>
        <choice name="level">
          <case name="case_1">
            <leaf name="any">
              <description>
                <text>All levels</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="emergency">
              <description>
                <text>Panic conditions</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="alert">
              <description>
                <text>Conditions that should be corrected immediately</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_4">
            <leaf name="critical">
              <description>
                <text>Critical conditions</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_5">
            <leaf name="error">
              <description>
                <text>Error conditions</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="warning">
              <description>
                <text>Warning messages</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_7">
            <leaf name="notice">
              <description>
                <text>Conditions that should be handled specially</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_8">
            <leaf name="info">
              <description>
                <text>Informational messages</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_9">
            <leaf name="none">
              <description>
                <text>No messages</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </list>
      <leaf name="facility-override">
        <description>
          <text>Alternate facility for logging to remote host</text>
        </description>
        <type name="enumeration">
          <enum name="authorization">
            <description>
              <text>Authorization system</text>
            </description>
          </enum>
          <enum name="daemon">
            <description>
              <text>Various system processes</text>
            </description>
          </enum>
          <enum name="ftp">
            <description>
              <text>FTP process</text>
            </description>
          </enum>
          <enum name="kernel">
            <description>
              <text>Kernel</text>
            </description>
          </enum>
          <enum name="user">
            <description>
              <text>User processes</text>
            </description>
          </enum>
          <enum name="local0">
            <description>
              <text>Local logging option number 0</text>
            </description>
          </enum>
          <enum name="local1">
            <description>
              <text>Local logging option number 1</text>
            </description>
          </enum>
          <enum name="local2">
            <description>
              <text>Local logging option number 2</text>
            </description>
          </enum>
          <enum name="local3">
            <description>
              <text>Local logging option number 3</text>
            </description>
          </enum>
          <enum name="local4">
            <description>
              <text>Local logging option number 4</text>
            </description>
          </enum>
          <enum name="local5">
            <description>
              <text>Local logging option number 5</text>
            </description>
          </enum>
          <enum name="local6">
            <description>
              <text>Local logging option number 6</text>
            </description>
          </enum>
          <enum name="local7">
            <description>
              <text>Local logging option number 7</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="log-prefix">
        <description>
          <text>Prefix for all logging to this host</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="port">
        <description>
          <text>UDP port for syslogd on the host</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint16">
            <range value="1 .. 65535"/>
          </type>
        </type>
      </leaf>
      <container name="class">
        <description>
          <text>Syslog messages classes</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="session-logs">
          <presence value="enable session-logs"/>
          <description>
            <text>Allow syslog messages for session events</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="open">
            <presence value="enable open"/>
            <description>
              <text>Allow syslog messages for session open events</text>
            </description>
          </container>
          <container name="close">
            <presence value="enable close"/>
            <description>
              <text>Allow syslog messages for session close events</text>
            </description>
          </container>
        </container>
        <container name="packet-logs">
          <presence value="enable packet-logs"/>
          <description>
            <text>Allow syslog messages for packet related events</text>
          </description>
        </container>
        <container name="stateful-firewall-logs">
          <presence value="enable stateful-firewall-logs"/>
          <description>
            <text>Allow syslog messages for stateful firewall events</text>
          </description>
        </container>
        <container name="alg-logs">
          <presence value="enable alg-logs"/>
          <description>
            <text>Allow syslog messages for ALG events</text>
          </description>
        </container>
        <container name="nat-logs">
          <presence value="enable nat-logs"/>
          <description>
            <text>Allow syslog messages for NAT events</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="deterministic-nat-configuration-log">
            <presence value="enable deterministic-nat-configuration-log"/>
            <description>
              <text>Allow syslog messages for Determinisitic NAT config events</text>
            </description>
          </container>
        </container>
        <container name="ids-logs">
          <presence value="enable ids-logs"/>
          <description>
            <text>Allow syslog messages for IDS events</text>
          </description>
        </container>
        <container name="pcp-logs">
          <presence value="enable pcp-logs"/>
          <description>
            <text>PCP logs</text>
          </description>
          <container name="map">
            <presence value="enable map"/>
            <description>
              <text>Allow syslog messages for PCP</text>
            </description>
          </container>
          <container name="debug">
            <presence value="enable debug"/>
            <description>
              <text>Allow PCP debug syslogs</text>
            </description>
          </container>
        </container>
        <container name="ha-logs">
          <description>
            <text>Stateful high availability logs</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="open-synchronized">
            <presence value="enable open-synchronized"/>
            <description>
              <text>Allow syslog message for session open events</text>
            </description>
          </container>
          <container name="close-synchronized">
            <presence value="enable close-synchronized"/>
            <description>
              <text>Allow syslog message for session close events</text>
            </description>
          </container>
        </container>
        <container name="urlf-logs">
          <presence value="enable urlf-logs"/>
          <description>
            <text>Allow syslog messages for URLF events</text>
          </description>
        </container>
      </container>
      <leaf name="source-address">
        <description>
          <text>Use specified address as source address</text>
        </description>
        <type name="jt:ipv4addr"/>
      </leaf>
      <container name="tcp-log">
        <presence value="enable tcp-log"/>
        <description>
          <text>Enable tcp log for this service-set</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="source-address">
          <description>
            <text>Source address for tcp logging</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf>
        <leaf name="vrf-name">
          <description>
            <text>Routing instance name for tcp logging</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="ssl-profile">
          <description>
            <text>SSL profile name for tcp logging</text>
          </description>
          <type name="string">
            <length value="1 .. 63"/>
          </type>
        </leaf>
      </container>
    </list>
    <leaf name="message-rate-limit">
      <description>
        <text>Maximum syslog messages per second allowed from this interface. Applies per member if set at aggregate level</text>
      </description>
      <units name="messages per second"/>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 2147483647"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="logical-system-type">
    <description>
      <text>Logical system name</text>
    </description>
    <leaf name="name">
      <description>
        <text>Logical system name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="max-sessions">
      <description>
        <text>Max number of IDP sessions</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="macro-data-type">
    <leaf name="name">
      <description>
        <text>Keyword part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="value">
      <description>
        <text>Value part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="port-range">
    <description>
      <text>Port ranges</text>
    </description>
    <leaf name="name">
      <description>
        <text>Single port/minimum port in the port range</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 65535"/>
        </type>
      </type>
    </leaf>
    <leaf name="maximum-port">
      <description>
        <text>Maximum port in the port range</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 65535"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="proto-object">
    <leaf name="name">
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <list name="tunable-name">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Protocol tunable name</text>
      </description>
      <uses name="tunable-object"/>
    </list>
  </grouping>
  <grouping name="security-authentication-key-chains">
    <uses name="apply-advanced"/>
    <list name="key-chain">
      <key value="name"/>
      <description>
        <text>Key chain configuration</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name of authentication key chain</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="description">
        <description>
          <text>Text description of this authentication-key-chain</text>
        </description>
        <type name="string">
          <length value="1 .. 80"/>
        </type>
      </leaf>
      <leaf name="tolerance">
        <description>
          <text>Clock skew tolerance</text>
        </description>
        <default value="3600"/>
        <units name="seconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 4294967295"/>
          </type>
        </type>
      </leaf>
      <list name="key">
        <key value="name"/>
        <description>
          <text>Authentication element configuration</text>
        </description>
        <leaf name="name">
          <description>
            <text>Authentication element identifier</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 63"/>
            </type>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="secret">
          <description>
            <text>Authentication key</text>
          </description>
          <type name="string">
            <length value="1 .. 126"/>
          </type>
        </leaf>
        <leaf name="key-name">
          <description>
            <text>Key name in hexadecimal format used for macsec</text>
          </description>
          <type name="string">
            <length value="2 .. 64"/>
          </type>
        </leaf>
        <leaf name="start-time">
          <description>
            <text>Start time for key transmission (YYYY-MM-DD.HH:MM)</text>
          </description>
          <type name="jt:time"/>
        </leaf>
        <leaf name="algorithm">
          <description>
            <text>Authentication algorithm</text>
          </description>
          <default value="md5"/>
          <type name="enumeration">
            <enum name="md5">
              <description>
                <text>Message Digest 5</text>
              </description>
            </enum>
            <enum name="hmac-sha-1">
              <description>
                <text>Hash-based Message Authentication Code (SHA1) (96 bits)</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="options">
          <description>
            <text>Protocol's transmission encoding format</text>
          </description>
          <default value="basic"/>
          <type name="enumeration">
            <enum name="basic">
              <description>
                <text>Rudimentary encoding format</text>
              </description>
            </enum>
            <enum name="isis-enhanced">
              <description>
                <text>RFC 5310 based encoding</text>
              </description>
            </enum>
          </type>
        </leaf>
      </list>
    </list>
  </grouping>
  <grouping name="security-pki">
    <uses name="apply-advanced"/>
    <list name="ca-profile">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Certificate authority profile configuration</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name of certificate authority profile</text>
        </description>
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="ca-identity">
        <description>
          <text>Certificate authority identifier</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="source-address">
        <description>
          <text>Use specified address as source address</text>
        </description>
        <type name="jt:ipaddr"/>
      </leaf>
      <leaf name="proxy-profile">
        <description>
          <text>Use specified proxy server</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="routing-instance">
        <description>
          <text>Use specified routing instance</text>
        </description>
        <type name="string"/>
      </leaf>
      <container name="enrollment">
        <description>
          <text>Enrollment parameters for certificate authority</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="url">
          <description>
            <text>Enrollment URL of certificate authority</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="retry">
          <description>
            <text>Number of enrollment retry attempts before aborting</text>
          </description>
          <default value="1000"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 1080"/>
            </type>
          </type>
        </leaf>
        <leaf name="retry-interval">
          <description>
            <text>Interval in seconds between the enrollment retries</text>
          </description>
          <default value="600"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 3600"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="revocation-check">
        <description>
          <text>Method for checking certificate revocations</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="revocation-check-options">
          <case name="case_1">
            <leaf name="use-crl">
              <description>
                <text>Use CRL for revocation check</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="use-ocsp">
              <description>
                <text>Use OCSP for revocation check</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="disable">
              <description>
                <text>Disable revocation check</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="ocsp">
          <presence value="enable ocsp"/>
          <description>
            <text>Online Certificate Status Protocol (OCSP) configuration</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="url">
            <key value="name"/>
            <ordered-by value="user"/>
            <leaf name="name">
              <description>
                <text>HTTP URL for OCSP access location</text>
              </description>
              <type name="string">
                <length value="1 .. 500"/>
              </type>
            </leaf>
            <uses name="apply-advanced"/>
          </list>
          <leaf name="nonce-payload">
            <description>
              <text>Include nonce payload in OCSP requests</text>
            </description>
            <type name="enumeration">
              <enum name="enable">
                <description>
                  <text>Send nonce paylod in OCSP request</text>
                </description>
              </enum>
              <enum name="disable">
                <description>
                  <text>Do not send nonce payload in OCSP request</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="disable-responder-revocation-check">
            <description>
              <text>Disable OCSP responder certificate revocation check</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="accept-unknown-status">
            <description>
              <text>Accept certificates with unknown status</text>
            </description>
            <type name="empty"/>
          </leaf>
          <container name="connection-failure">
            <presence value="enable connection-failure"/>
            <description>
              <text>Actions on failure to connect to OCSP Responder</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="connection-failure-options">
              <case name="case_1">
                <leaf name="fallback-crl">
                  <description>
                    <text>Use CRL for revocation check</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="disable">
                  <description>
                    <text>Disable OCSP check on connection failure</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </container>
        <container name="crl">
          <description>
            <text>Certificate revocation list configuration</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="disable">
            <leaf name="on-download-failure">
              <description>
                <text>Check revocation status with existing CRL file if present, otherwise skip. This feature must be enabled for manual CRL download.</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <list name="url">
            <key value="name"/>
            <ordered-by value="user"/>
            <leaf name="name">
              <description>
                <text>URL of CRL distribution point for certificate authority</text>
              </description>
              <type name="string">
                <length value="1 .. 500"/>
              </type>
            </leaf>
            <uses name="apply-advanced"/>
            <leaf name="password">
              <description>
                <text>Password for authentication with the server</text>
              </description>
              <type name="jt:unreadable"/>
            </leaf>
          </list>
          <leaf name="refresh-interval">
            <description>
              <text>CRL refresh interval</text>
            </description>
            <units name="hours"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 8784"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="administrator">
        <description>
          <text>Administrator information</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="email-address">
          <description>
            <text>Administrator e-mail to which to send certificate requests</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
    </list>
    <list name="trusted-ca-group">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Trusted Certificate Authority group configuration</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name of the trusted CA group</text>
        </description>
        <type name="string">
          <length value="1 .. 63"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf-list name="ca-profiles">
        <ordered-by value="user"/>
        <description>
          <text>Name of the CA profiles (maximum 20)</text>
        </description>
        <type name="string">
          <length value="1 .. 63"/>
        </type>
        <max-elements value="20"/>
      </leaf-list>
    </list>
    <container name="auto-re-enrollment">
      <description>
        <text>Auto re-enroll of certificate</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="cmpv2">
        <presence value="enable cmpv2"/>
        <description>
          <text>CMPv2 auto re-enrollment configuration</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="certificate-id">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>CMPv2 auto re-enrollment configuration for certificate-id</text>
          </description>
          <leaf name="name">
            <description>
              <text>Certificate identifier that needs auto re-enrollment</text>
            </description>
            <type name="string"/>
          </leaf>
          <uses name="apply-advanced"/>
          <leaf name="ca-profile-name">
            <description>
              <text>Name of certificate authority profile</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="re-enroll-trigger-time-percentage">
            <description>
              <text>Re-enrollment trigger time before expiration as percentage</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 99"/>
              </type>
            </type>
          </leaf>
          <leaf name="re-generate-keypair">
            <description>
              <text>Generate new key-pair for auto-re-enrollment</text>
            </description>
            <type name="empty"/>
          </leaf>
        </list>
      </container>
      <container name="scep">
        <presence value="enable scep"/>
        <description>
          <text>SCEP auto re-enrollment configuration</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="certificate-id">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>SCEP auto re-enrollment configuration for certificate-id</text>
          </description>
          <leaf name="name">
            <description>
              <text>Certificate identifier that needs auto re-enrollment</text>
            </description>
            <type name="string"/>
          </leaf>
          <uses name="apply-advanced"/>
          <leaf name="ca-profile-name">
            <description>
              <text>Name of certificate authority profile</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="re-generate-keypair">
            <description>
              <text>Generate new key-pair for auto-re-enrollment</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="re-enroll-trigger-time-percentage">
            <description>
              <text>Re-enrollment trigger time before expiration as percentage</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 99"/>
              </type>
            </type>
          </leaf>
          <leaf name="challenge-password">
            <description>
              <text>Password used by CA for enrollment and revocation</text>
            </description>
            <type name="jt:unreadable"/>
          </leaf>
          <container name="scep-encryption-algorithm">
            <presence value="enable scep-encryption-algorithm"/>
            <description>
              <text>SCEP encryption algorithm</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="scep-encryption-algorithm-options">
              <case name="case_1">
                <leaf name="des">
                  <description>
                    <text>Use DES as SCEP encryption algorithm</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="des3">
                  <description>
                    <text>Use DES3 as SCEP encryption algorithm</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="scep-digest-algorithm">
            <presence value="enable scep-digest-algorithm"/>
            <description>
              <text>SCEP digest algorithm</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="scep-digest-algorithm-options">
              <case name="case_1">
                <leaf name="md5">
                  <description>
                    <text>Use MD5 as SCEP digest algorithm</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="sha1">
                  <description>
                    <text>Use SHA1 as SCEP digest algorithm</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </list>
      </container>
      <list name="certificate-id">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Auto re-enrollment configuration for certificate-id</text>
        </description>
        <leaf name="name">
          <description>
            <text>Certificate identifier that needs auto re-enrollment</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="ca-profile-name">
          <description>
            <text>Name of certificate authority profile</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="re-generate-keypair">
          <description>
            <text>Generate new key-pair for auto-re-enrollment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="re-enroll-trigger-time-percentage">
          <description>
            <text>Re-enrollment trigger time before expiration as percentage</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 99"/>
            </type>
          </type>
        </leaf>
        <leaf name="challenge-password">
          <description>
            <text>Password used by CA for enrollment and revocation</text>
          </description>
          <type name="jt:unreadable"/>
        </leaf>
        <container name="scep-encryption-algorithm">
          <presence value="enable scep-encryption-algorithm"/>
          <description>
            <text>SCEP encryption algorithm</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="scep-encryption-algorithm-options">
            <case name="case_1">
              <leaf name="des">
                <description>
                  <text>Use DES as SCEP encryption algorithm</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="des3">
                <description>
                  <text>Use DES3 as SCEP encryption algorithm</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="scep-digest-algorithm">
          <presence value="enable scep-digest-algorithm"/>
          <description>
            <text>SCEP digest algorithm</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="scep-digest-algorithm-options">
            <case name="case_1">
              <leaf name="md5">
                <description>
                  <text>Use MD5 as SCEP digest algorithm</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="sha1">
                <description>
                  <text>Use SHA1 as SCEP digest algorithm</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <leaf name="validity-period">
          <description>
            <text>Certificate validity period in days from enrollment start date</text>
          </description>
          <status value="deprecated"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 4095"/>
            </type>
          </type>
        </leaf>
      </list>
    </container>
    <container name="traceoptions">
      <description>
        <text>PKI trace options</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-remote-trace">
        <description>
          <text>Disable remote tracing</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="file">
        <description>
          <text>Trace file information</text>
        </description>
        <leaf name="filename">
          <description>
            <text>Name of file in which to write trace information</text>
          </description>
          <type name="string">
            <length value="1 .. 1024"/>
          </type>
        </leaf>
        <leaf name="size">
          <description>
            <text>Maximum trace file size</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="files">
          <description>
            <text>Maximum number of trace files</text>
          </description>
          <default value="3"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="2 .. 1000"/>
            </type>
          </type>
        </leaf>
        <choice name="world-readable-choice">
          <leaf name="world-readable">
            <description>
              <text>Allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-world-readable">
            <description>
              <text>Don't allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <leaf name="match">
          <description>
            <text>Regular expression for lines to be logged</text>
          </description>
          <type name="jt:regular-expression"/>
        </leaf>
      </container>
      <list name="flag">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Tracing parameters</text>
        </description>
        <leaf name="name">
          <type name="enumeration">
            <enum name="certificate-verification">
              <description>
                <text>PKI certificate verification tracing</text>
              </description>
            </enum>
            <enum name="online-crl-check">
              <description>
                <text>PKI online crl tracing</text>
              </description>
            </enum>
            <enum name="enrollment">
              <description>
                <text>PKI certificate enrollment tracing</text>
              </description>
            </enum>
            <enum name="all">
              <description>
                <text>Trace with all flags enabled</text>
              </description>
            </enum>
          </type>
        </leaf>
      </list>
    </container>
  </grouping>
  <grouping name="tenant-system-type">
    <description>
      <text>Tenant name</text>
    </description>
    <leaf name="name">
      <description>
        <text>Tenant name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="max-sessions">
      <description>
        <text>Max number of IDP sessions</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="tunable-object">
    <leaf name="name">
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="tunable-value">
      <description>
        <text>Protocol tunable value</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="vendor-object">
    <leaf name="name">
      <description>
        <text>Values for vendor field</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="product-name">
      <description>
        <text>Values for product field</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
</module>
