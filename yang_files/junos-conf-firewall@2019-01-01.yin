<?xml version="1.0" encoding="UTF-8"?>
<module name="junos-conf-firewall"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:jc-firewall="http://yang.juniper.net/junos/conf/firewall"
        xmlns:jt="http://yang.juniper.net/junos/common/types"
        xmlns:jc="http://yang.juniper.net/junos/conf/root">
  <namespace uri="http://yang.juniper.net/junos/conf/firewall"/>
  <prefix value="jc-firewall"/>
  <import module="junos-common-types">
    <prefix value="jt"/>
    <revision-date date="2019-01-01"/>
  </import>
  <import module="junos-conf-root">
    <prefix value="jc"/>
    <revision-date date="2019-01-01"/>
  </import>
  <organization>
    <text>Juniper Networks, Inc.</text>
  </organization>
  <contact>
    <text>yang-support@juniper.net</text>
  </contact>
  <description>
    <text>Junos firewall configuration module</text>
  </description>
  <revision date="2019-01-01">
    <description>
      <text>Junos: 19.4R1.9</text>
    </description>
  </revision>
  <augment target-node="/jc:configuration">
    <uses name="firewall-group"/>
  </augment>
  <augment target-node="/jc:configuration/jc:groups">
    <uses name="firewall-group"/>
  </augment>
  <grouping name="firewall-group">
    <container name="firewall">
      <description>
        <text>Define a firewall configuration</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="family">
        <description>
          <text>Protocol family</text>
        </description>
        <container name="inet">
          <description>
            <text>Protocol family IPv4 for firewall filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="dialer-filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define an IPv4 dialer filter</text>
            </description>
            <uses name="inet_dialer_filter"/>
          </list>
          <list name="prefix-action">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define a prefix action</text>
            </description>
            <uses name="prefix_action"/>
          </list>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define an IPv4 firewall filter</text>
            </description>
            <uses name="inet_filter"/>
          </list>
          <list name="simple-filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define an IPv4 firewall simple filter</text>
            </description>
            <uses name="inet_simple_filter"/>
          </list>
          <list name="service-filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>One or more IPv4 service filters</text>
            </description>
            <uses name="inet_service_filter"/>
          </list>
          <list name="fast-update-filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>One or more fast update filters</text>
            </description>
            <uses name="inet_fuf"/>
          </list>
        </container>
        <container name="inet6">
          <description>
            <text>Protocol family IPv6 for firewall filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="dialer-filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define an IPv6 dialer filter</text>
            </description>
            <uses name="inet6_dialer_filter"/>
          </list>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define an IPv6 firewall filter</text>
            </description>
            <uses name="inet6_filter"/>
          </list>
          <list name="service-filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>One or more IPv6 service filters</text>
            </description>
            <uses name="inet6_service_filter"/>
          </list>
          <list name="fast-update-filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>One or more fast update filters</text>
            </description>
            <uses name="inet6_fuf"/>
          </list>
        </container>
        <container name="mpls">
          <description>
            <text>Protocol family MPLS for firewall filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="dialer-filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define an mpls dialer filter</text>
            </description>
            <uses name="mpls_dialer_filter"/>
          </list>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <uses name="mpls_filter"/>
          </list>
        </container>
        <container name="vpls">
          <description>
            <text>Protocol family VPLS for firewall filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <uses name="vpls_filter"/>
          </list>
        </container>
        <container name="evpn">
          <description>
            <text>Protocol family EVPN for firewall filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <uses name="vpls_filter"/>
          </list>
        </container>
        <container name="bridge">
          <description>
            <text>Protocol family BRIDGE for firewall filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <uses name="bridge_filter"/>
          </list>
        </container>
        <container name="ccc">
          <description>
            <text>Protocol family CCC for firewall filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <uses name="ccc_filter"/>
          </list>
        </container>
        <container name="any">
          <description>
            <text>Protocol-independent filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define a protocol independent filter</text>
            </description>
            <uses name="any_filter"/>
          </list>
        </container>
        <container name="ethernet-switching">
          <description>
            <text>Protocol family Ethernet Switching for firewall filter</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="filter">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define an Ethernet Switching firewall filter</text>
            </description>
            <uses name="es_filter"/>
          </list>
        </container>
      </container>
      <list name="policer">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Policer template definition</text>
        </description>
        <uses name="firewall_policer"/>
      </list>
      <list name="flexible-match">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Flexible packet match template definition</text>
        </description>
        <uses name="firewall_flexible_match"/>
      </list>
      <list name="tunnel-end-point">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Tunnel end-point template definition</text>
        </description>
        <uses name="tunnel_end_point"/>
      </list>
      <list name="hierarchical-policer">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Hierarchical policer template definition</text>
        </description>
        <uses name="firewall_hierpolicer"/>
      </list>
      <list name="interface-set">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Interface set definition</text>
        </description>
        <uses name="interface_set_type"/>
      </list>
      <list name="load-balance-group">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Load-balance group definition</text>
        </description>
        <uses name="firewall_load_balance_group"/>
      </list>
      <list name="atm-policer">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Atm policer</text>
        </description>
        <uses name="atm-policer-type"/>
      </list>
      <list name="three-color-policer">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Three-color policer</text>
        </description>
        <uses name="three-color-policer-type"/>
      </list>
      <list name="filter">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Define an IPv4 firewall filter</text>
        </description>
        <uses name="inet_filter"/>
      </list>
    </container>
  </grouping>
  <grouping name="any_filter">
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="interface-shared">
      <description>
        <text>Filter is interface-shared</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="interface">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface name</text>
          </description>
          <uses name="match_interface_object_oam"/>
        </list>
        <list name="interface-set">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface in set</text>
          </description>
          <uses name="match_interface_set_object"/>
        </list>
        <choice name="packet-length_choice">
          <case name="case_1">
            <leaf-list name="packet-length">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="packet-length-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="policy-map_choice">
          <case name="case_1">
            <leaf-list name="policy-map">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="policy-map-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
        </choice>
        <leaf name="service-filter-hit">
          <description>
            <text>Match if service-filter-hit is set</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="single-packet-rate">
                    <description>
                      <text>Name of single-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="two-packet-rate">
                    <description>
                      <text>Name of two-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_3">
            <leaf name="hierarchical-policer">
              <description>
                <text>Name of hierarchical policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="policy-map-choice">
          <case name="case_1">
            <leaf name="clear-policy-map">
              <description>
                <text>Clear the policy marking</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="policy-map">
              <description>
                <text>Policy map action</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="service-accounting">
          <description>
            <text>Count the packets for service accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="service-accounting-deferred">
          <description>
            <text>Count the packets for deferred service accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="service-filter-hit">
          <description>
            <text>Signal subsequent filters in the chain that packet was processed</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="force-premium">
          <description>
            <text>Process packets as premium traffic by subsequent hierarchical policers</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Classify packet to loss-priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="port-mirror-instance">
          <description>
            <text>Port-mirror the packet to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <container name="encapsulate">
              <presence value="enable encapsulate"/>
              <description>
                <text>Send to a tunnel</text>
              </description>
              <leaf name="tunnel-end-point">
                <description>
                  <text>Name of the tunnel end point</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
          <case name="case_2">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_4">
            <leaf name="next">
              <description>
                <text>Continue to next term in a filter</text>
              </description>
              <type name="enumeration">
                <enum name="term">
                  <description>
                    <text>Continue to next term in a filter</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="apply-advanced">
    <description>
      <text>Apply advanced configuration logic</text>
    </description>
    <leaf-list name="apply-groups">
      <ordered-by value="user"/>
      <description>
        <text>Groups from which to inherit configuration data</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf-list name="apply-groups-except">
      <ordered-by value="user"/>
      <description>
        <text>Don't inherit configuration data from these groups</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <list name="apply-macro">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Macro and parameters for commit script expansion</text>
      </description>
      <uses name="apply-macro-type"/>
    </list>
  </grouping>
  <grouping name="apply-macro-type">
    <description>
      <text>Macro data for commit-script expansion</text>
    </description>
    <leaf name="name">
      <description>
        <text>Name of the macro to be expanded</text>
      </description>
      <type name="string"/>
    </leaf>
    <list name="data">
      <key value="name"/>
      <uses name="macro-data-type"/>
    </list>
  </grouping>
  <grouping name="atm-policer-type">
    <description>
      <text>Atm policer</text>
    </description>
    <leaf name="name">
      <description>
        <text>Policer name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="logical-interface-policer">
      <description>
        <text>Policer is logical interface policer</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="atm-service">
      <description>
        <text>ATM service category</text>
      </description>
      <type name="enumeration">
        <enum name="cbr">
          <description>
            <text>Constant bit rate</text>
          </description>
        </enum>
        <enum name="rtvbr">
          <description>
            <text>Real-time variable bit rate</text>
          </description>
        </enum>
        <enum name="nrtvbr">
          <description>
            <text>Non-real-time variable bit rate</text>
          </description>
        </enum>
        <enum name="ubr">
          <description>
            <text>Unspecified bit rate</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="peak-rate">
      <description>
        <text>ATM Peak Cell Rate (PCR)</text>
      </description>
      <units name="cps"/>
      <type name="string"/>
    </leaf>
    <leaf name="sustained-rate">
      <description>
        <text>ATM Sustained Cell Rate (SCR)</text>
      </description>
      <units name="cps"/>
      <type name="string"/>
    </leaf>
    <leaf name="max-burst-size">
      <description>
        <text>ATM Maximum Burst Size (MBS)</text>
      </description>
      <units name="cells"/>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint64">
          <range value="1 .. 4000"/>
        </type>
      </type>
    </leaf>
    <leaf name="cdvt">
      <description>
        <text>Cell Delay Variation Tolerance</text>
      </description>
      <units name="microseconds"/>
      <type name="string"/>
    </leaf>
    <leaf name="policing-action">
      <description>
        <text>Policing action</text>
      </description>
      <type name="enumeration">
        <enum name="count">
          <description>
            <text>Update counters</text>
          </description>
        </enum>
        <enum name="discard">
          <description>
            <text>Discard non-conforming cells (CBR.1/VBR.1/UBR.1)</text>
          </description>
        </enum>
        <enum name="discard-tag">
          <description>
            <text>Discard PCR non-conforming and tag SCR non-conforming cells (VBR.3/UBR.2)</text>
          </description>
        </enum>
      </type>
    </leaf>
  </grouping>
  <grouping name="bridge_filter">
    <description>
      <text>Define a BRIDGE firewall filter</text>
    </description>
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-filter">
      <description>
        <text>Filter is physical interface filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="instance-shared">
      <description>
        <text>Filter is routing-instance shared</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="filter">
        <description>
          <text>Filter to include</text>
        </description>
        <type name="string"/>
      </leaf>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ether-type_choice">
          <case name="case_1">
            <leaf-list name="ether-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ether-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="vlan-ether-type_choice">
          <case name="case_1">
            <leaf-list name="vlan-ether-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="vlan-ether-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="destination-mac-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Destination MAC address</text>
          </description>
          <uses name="firewall_mac_addr_object"/>
        </list>
        <list name="source-mac-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Source MAC address</text>
          </description>
          <uses name="firewall_mac_addr_object"/>
        </list>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-id_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-id">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-id-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-1p-priority_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-1p-priority">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-1p-priority-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="user-vlan-id_choice">
          <case name="case_1">
            <leaf-list name="user-vlan-id">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="user-vlan-id-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="user-vlan-1p-priority_choice">
          <case name="case_1">
            <leaf-list name="user-vlan-1p-priority">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="user-vlan-1p-priority-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-dei_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-dei">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-dei-except">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="traffic-type_choice">
          <case name="case_1">
            <leaf-list name="traffic-type">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="broadcast">
                  <description>
                    <text>Packets with broadcast ethernet address</text>
                  </description>
                </enum>
                <enum name="multicast">
                  <description>
                    <text>Packets with multicast ethernet address</text>
                  </description>
                </enum>
                <enum name="unknown-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has not been learnt</text>
                  </description>
                </enum>
                <enum name="known-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has been learnt</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="traffic-type-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="broadcast">
                  <description>
                    <text>Packets with broadcast ethernet address</text>
                  </description>
                </enum>
                <enum name="multicast">
                  <description>
                    <text>Packets with multicast ethernet address</text>
                  </description>
                </enum>
                <enum name="unknown-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has not been learnt</text>
                  </description>
                </enum>
                <enum name="known-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has been learnt</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <list name="ip-source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="ip-destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="ip-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <choice name="ip-protocol_choice">
          <case name="case_1">
            <leaf-list name="ip-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="dscp_choice">
          <case name="case_1">
            <leaf-list name="dscp">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="dscp-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-precedence_choice">
          <case name="case_1">
            <leaf-list name="ip-precedence">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-precedence-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="tcp-flags">
          <description>
            <text>Match TCP flags</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="icmp-type_choice">
          <case name="case_1">
            <leaf-list name="icmp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-code_choice">
          <case name="case_1">
            <leaf-list name="icmp-code">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-code-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="interface">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface name</text>
          </description>
          <uses name="match_interface_object"/>
        </list>
        <list name="interface-set">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface in set</text>
          </description>
          <uses name="match_interface_set_object"/>
        </list>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ipv6-destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="ipv6-source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 source address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="ipv6-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <choice name="ipv6-next-header_choice">
          <case name="case_1">
            <leaf-list name="ipv6-next-header">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-next-header-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ipv6-payload-protocol_choice">
          <case name="case_1">
            <leaf-list name="ipv6-payload-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-payload-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ipv6-traffic-class_choice">
          <case name="case_1">
            <leaf-list name="ipv6-traffic-class">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-traffic-class-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="ipv6-source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPV6 source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ipv6-destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPV6 destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ipv6-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="flex-mask_choice">
          <case name="case_1">
            <container name="flexible-match-mask">
              <description>
                <text>Match flexible mask</text>
              </description>
              <presence value="enable flexible-match-mask"/>
              <uses name="match_L2_flexible_mask"/>
            </container>
          </case>
        </choice>
        <choice name="flex-range_choice">
          <case name="case_1">
            <container name="flexible-match-range">
              <description>
                <text>Match flexible range</text>
              </description>
              <presence value="enable flexible-match-range"/>
              <uses name="match_L2_flexible_range"/>
            </container>
          </case>
        </choice>
        <choice name="policy-map_choice">
          <case name="case_1">
            <leaf-list name="policy-map">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="policy-map-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="isid_choice">
          <case name="case_1">
            <leaf-list name="isid">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="isid-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="isid-priority-code-point_choice">
          <case name="case_1">
            <leaf-list name="isid-priority-code-point">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="isid-priority-code-point-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="isid-dei_choice">
          <case name="case_1">
            <leaf-list name="isid-dei">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="isid-dei-except">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="single-packet-rate">
                    <description>
                      <text>Name of single-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="two-packet-rate">
                    <description>
                      <text>Name of two-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_3">
            <leaf name="hierarchical-policer">
              <description>
                <text>Name of hierarchical policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="policy-map-choice">
          <case name="case_1">
            <leaf name="clear-policy-map">
              <description>
                <text>Clear the policy marking</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="policy-map">
              <description>
                <text>Policy map action</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="next">
              <description>
                <text>Continue to next term in a filter</text>
              </description>
              <type name="enumeration">
                <enum name="term">
                  <description>
                    <text>Continue to next term in a filter</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="port-mirror-instance">
          <description>
            <text>Port-mirror the packet to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="next-hop-group">
          <description>
            <text>Use specified next-hop group</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="forwarding-policy">
          <description>
            <text>Specify forwarding policy for extended port</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="uplink-select">
            <description>
              <text>Specify port group for uplink selection</text>
            </description>
            <type name="string"/>
          </leaf>
        </container>
      </container>
    </list>
  </grouping>
  <grouping name="ccc_filter">
    <description>
      <text>Define a CCC firewall filter</text>
    </description>
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="interface-specific">
      <description>
        <text>Any counters defined will be interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-filter">
      <description>
        <text>Filter is physical interface filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="filter">
        <description>
          <text>Filter to include</text>
        </description>
        <type name="string"/>
      </leaf>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-1p-priority_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-1p-priority">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-1p-priority-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="user-vlan-1p-priority_choice">
          <case name="case_1">
            <leaf-list name="user-vlan-1p-priority">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="user-vlan-1p-priority-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <list name="destination-mac-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Destination MAC address</text>
          </description>
          <uses name="firewall_mac_addr_object"/>
        </list>
        <leaf name="is-host-packet">
          <description>
            <text>Match if packet is host generated</text>
          </description>
          <type name="empty"/>
        </leaf>
        <list name="source-mac-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Source MAC address</text>
          </description>
          <uses name="firewall_mac_addr_object"/>
        </list>
        <list name="ip-source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="ip-destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <choice name="dscp_choice">
          <case name="case_1">
            <leaf-list name="dscp">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="dscp-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-precedence_choice">
          <case name="case_1">
            <leaf-list name="ip-precedence">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-precedence-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-protocol_choice">
          <case name="case_1">
            <leaf-list name="ip-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-type_choice">
          <case name="case_1">
            <leaf-list name="icmp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-code_choice">
          <case name="case_1">
            <leaf-list name="icmp-code">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-code-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="policy-map_choice">
          <case name="case_1">
            <leaf-list name="policy-map">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="policy-map-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="flex-mask_choice">
          <case name="case_1">
            <container name="flexible-match-mask">
              <description>
                <text>Match flexible mask</text>
              </description>
              <presence value="enable flexible-match-mask"/>
              <uses name="match_L2_flexible_mask"/>
            </container>
          </case>
        </choice>
        <choice name="flex-range_choice">
          <case name="case_1">
            <container name="flexible-match-range">
              <description>
                <text>Match flexible range</text>
              </description>
              <presence value="enable flexible-match-range"/>
              <uses name="match_L2_flexible_range"/>
            </container>
          </case>
        </choice>
        <choice name="user-vlan-id_choice">
          <case name="case_1"/>
          <case name="case_2">
            <leaf-list name="user-vlan-id-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="single-packet-rate">
                    <description>
                      <text>Name of single-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="two-packet-rate">
                    <description>
                      <text>Name of two-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_3">
            <leaf name="hierarchical-policer">
              <description>
                <text>Name of hierarchical policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="policy-map-choice">
          <case name="case_1">
            <leaf name="clear-policy-map">
              <description>
                <text>Clear the policy marking</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="policy-map">
              <description>
                <text>Policy map action</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror-instance">
          <description>
            <text>Port-mirror the packet to the specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="next-hop-group">
          <description>
            <text>Use specified next-hop group</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="packet-mode">
          <description>
            <text>Bypass flow mode for the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="force-premium">
          <description>
            <text>Convert traffic-class to premium</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <container name="encapsulate">
              <presence value="enable encapsulate"/>
              <description>
                <text>Send to a tunnel</text>
              </description>
              <leaf name="tunnel-end-point">
                <description>
                  <text>Name of the tunnel end point</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
          <case name="case_2">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_4">
            <leaf name="next">
              <description>
                <text>Continue to next term in a filter</text>
              </description>
              <type name="enumeration">
                <enum name="term">
                  <description>
                    <text>Continue to next term in a filter</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="es_filter">
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-filter">
      <description>
        <text>Filter is physical interface filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="interface">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface name</text>
          </description>
          <uses name="match_interface_object"/>
        </list>
        <list name="source-mac-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match MAC source address</text>
          </description>
          <uses name="firewall_mac_addr_object"/>
        </list>
        <list name="destination-mac-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match MAC destination address</text>
          </description>
          <uses name="firewall_mac_addr_object"/>
        </list>
        <choice name="ether-type_choice">
          <case name="case_1">
            <leaf-list name="ether-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ether-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="l2-encap-type_choice">
          <case name="case_1">
            <leaf-list name="l2-encap-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="l2-encap-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="vlan_choice">
          <case name="case_1">
            <leaf-list name="vlan">
              <ordered-by value="user"/>
              <description>
                <text>VLAN name or ID</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="vlan-except">
              <ordered-by value="user"/>
              <description>
                <text>VLAN name or ID</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="dot1q-tag_choice">
          <case name="case_1">
            <leaf-list name="dot1q-tag">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="dot1q-tag-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="dot1q-user-priority_choice">
          <case name="case_1">
            <leaf-list name="dot1q-user-priority">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="dot1q-user-priority-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <choice name="dscp_choice">
          <case name="case_1">
            <leaf-list name="dscp">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="dscp-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="precedence_choice">
          <case name="case_1">
            <leaf-list name="precedence">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="precedence-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-options_choice">
          <case name="case_1">
            <leaf-list name="ip-options">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="any">
                  <description>
                    <text>Any IP option</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-options-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="any">
                  <description>
                    <text>Any IP option</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <leaf name="fragment-flags">
          <description>
            <text>Match fragment flags (in symbolic or hex formats) - (Ingress only)</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="is-fragment">
          <description>
            <text>Match if packet is a fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="protocol_choice">
          <case name="case_1">
            <leaf-list name="protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="tcp-flags">
          <description>
            <text>Match TCP flags (in symbolic or hex formats)</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="tcp-initial">
          <description>
            <text>Match initial packet of a TCP connection</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="tcp-established">
          <description>
            <text>Match packet of an established TCP connection</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="icmp-type_choice">
          <case name="case_1">
            <leaf-list name="icmp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-code_choice">
          <case name="case_1">
            <leaf-list name="icmp-code">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-code-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ip-source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="ip-destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <choice name="ip-protocol_choice">
          <case name="case_1">
            <leaf-list name="ip-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-precedence_choice">
          <case name="case_1">
            <leaf-list name="ip-precedence">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-precedence-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="ipv6-destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="ipv6-source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 source address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="ipv6-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <choice name="ipv6-next-header_choice">
          <case name="case_1">
            <leaf-list name="ipv6-next-header">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-next-header-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ipv6-payload-protocol_choice">
          <case name="case_1">
            <leaf-list name="ipv6-payload-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-payload-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ipv6-traffic-class_choice">
          <case name="case_1">
            <leaf-list name="ipv6-traffic-class">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-traffic-class-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="ipv6-source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPV6 source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ipv6-destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPV6 destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ipv6-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="vlan-ether-type_choice">
          <case name="case_1">
            <leaf-list name="vlan-ether-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="vlan-ether-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-id_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-id">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-id-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-1p-priority_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-1p-priority">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-1p-priority-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-dei_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-dei">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-dei-except">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="user-vlan-id_choice">
          <case name="case_1">
            <leaf-list name="user-vlan-id">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="user-vlan-id-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="user-vlan-1p-priority_choice">
          <case name="case_1">
            <leaf-list name="user-vlan-1p-priority">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="user-vlan-1p-priority-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="traffic-type_choice">
          <case name="case_1">
            <leaf-list name="traffic-type">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="broadcast">
                  <description>
                    <text>Packets with broadcast ethernet address</text>
                  </description>
                </enum>
                <enum name="multicast">
                  <description>
                    <text>Packets with multicast ethernet address</text>
                  </description>
                </enum>
                <enum name="unknown-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has not been learnt</text>
                  </description>
                </enum>
                <enum name="known-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has been learnt</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="traffic-type-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="broadcast">
                  <description>
                    <text>Packets with broadcast ethernet address</text>
                  </description>
                </enum>
                <enum name="multicast">
                  <description>
                    <text>Packets with multicast ethernet address</text>
                  </description>
                </enum>
                <enum name="unknown-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has not been learnt</text>
                  </description>
                </enum>
                <enum name="known-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has been learnt</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <list name="ip-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="interface-set">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface in set</text>
          </description>
          <uses name="match_interface_set_object"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="isid_choice">
          <case name="case_1">
            <leaf-list name="isid">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="isid-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="isid-priority-code-point_choice">
          <case name="case_1">
            <leaf-list name="isid-priority-code-point">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="isid-priority-code-point-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="isid-dei_choice">
          <case name="case_1">
            <leaf-list name="isid-dei">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="isid-dei-except">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="arp-type_choice">
          <case name="case_1">
            <leaf-list name="arp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="flex-mask_choice">
          <case name="case_1">
            <container name="flexible-match-mask">
              <description>
                <text>Match flexible mask</text>
              </description>
              <presence value="enable flexible-match-mask"/>
              <uses name="match_L2_flexible_mask"/>
            </container>
          </case>
        </choice>
        <choice name="flex-range_choice">
          <case name="case_1">
            <container name="flexible-match-range">
              <description>
                <text>Match flexible range</text>
              </description>
              <presence value="enable flexible-match-range"/>
              <uses name="match_L2_flexible_range"/>
            </container>
          </case>
        </choice>
        <container name="ip-version">
          <description>
            <text>Define IP version</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="ipv4">
            <description>
              <text>Define L3/L4 match items to match IPv4 packets</text>
            </description>
            <uses name="apply-advanced"/>
            <list name="address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IP source or destination address</text>
              </description>
              <uses name="firewall_addr_object"/>
            </list>
            <choice name="dscp_choice">
              <case name="case_1">
                <leaf-list name="dscp">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="dscp-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="precedence_choice">
              <case name="case_1"/>
              <case name="case_2">
                <leaf-list name="precedence-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="ip-options_choice">
              <case name="case_1">
                <leaf-list name="ip-options">
                  <ordered-by value="user"/>
                  <type name="enumeration">
                    <enum name="any">
                      <description>
                        <text>Any IP option</text>
                      </description>
                    </enum>
                  </type>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="ip-options-except">
                  <ordered-by value="user"/>
                  <type name="enumeration">
                    <enum name="any">
                      <description>
                        <text>Any IP option</text>
                      </description>
                    </enum>
                  </type>
                </leaf-list>
              </case>
            </choice>
            <leaf name="fragment-flags">
              <description>
                <text>Match fragment flags (in symbolic or hex formats) - (Ingress only)</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="is-fragment">
              <description>
                <text>Match if packet is a fragment</text>
              </description>
              <type name="empty"/>
            </leaf>
            <choice name="protocol_choice">
              <case name="case_1"/>
              <case name="case_2">
                <leaf-list name="protocol-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="source-port_choice">
              <case name="case_1">
                <leaf-list name="source-port">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="source-port-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="destination-port_choice">
              <case name="case_1">
                <leaf-list name="destination-port">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="destination-port-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="port_choice">
              <case name="case_1">
                <leaf-list name="port">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="port-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <leaf name="tcp-flags">
              <description>
                <text>Match TCP flags (in symbolic or hex formats) - (Ingress only)</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="tcp-initial">
              <description>
                <text>Match initial packet of a TCP connection - (Ingress only)</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="tcp-established">
              <description>
                <text>Match packet of an established TCP connection</text>
              </description>
              <type name="empty"/>
            </leaf>
            <choice name="icmp-type_choice">
              <case name="case_1">
                <leaf-list name="icmp-type">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="icmp-type-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="icmp-code_choice">
              <case name="case_1">
                <leaf-list name="icmp-code">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="icmp-code-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <list name="source-prefix-list">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IP source prefixes in named list</text>
              </description>
              <uses name="firewall_prefix_list"/>
            </list>
            <list name="destination-prefix-list">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IP destination prefixes in named list</text>
              </description>
              <uses name="firewall_prefix_list"/>
            </list>
            <list name="ip-source-address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IP source address</text>
              </description>
              <uses name="firewall_addr_object"/>
            </list>
            <list name="ip-destination-address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IP destination address</text>
              </description>
              <uses name="firewall_addr_object"/>
            </list>
            <choice name="ip-protocol_choice">
              <case name="case_1">
                <leaf-list name="ip-protocol">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="ip-protocol-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="ip-precedence_choice">
              <case name="case_1">
                <leaf-list name="ip-precedence">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="ip-precedence-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
          </container>
          <container name="ipv6">
            <description>
              <text>Define L3/L4 match items to match IPv6 packets</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="traffic-class_choice">
              <case name="case_1">
                <leaf-list name="traffic-class">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="traffic-class-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="next-header_choice">
              <case name="case_1">
                <leaf-list name="next-header">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="next-header-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="payload-protocol_choice">
              <case name="case_1">
                <leaf-list name="payload-protocol">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="payload-protocol-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="source-port_choice">
              <case name="case_1">
                <leaf-list name="source-port">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="source-port-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="destination-port_choice">
              <case name="case_1">
                <leaf-list name="destination-port">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="destination-port-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="port_choice">
              <case name="case_1">
                <leaf-list name="port">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="port-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="extension-header_choice">
              <case name="case_1">
                <leaf-list name="extension-header">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="extension-header-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <leaf name="tcp-flags">
              <description>
                <text>Match TCP flags (in symbolic or hex formats)</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="tcp-initial">
              <description>
                <text>Match initial packet of a TCP connection</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="tcp-established">
              <description>
                <text>Match packet of an established TCP connection</text>
              </description>
              <type name="empty"/>
            </leaf>
            <choice name="icmp-type_choice">
              <case name="case_1">
                <leaf-list name="icmp-type">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="icmp-type-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <choice name="icmp-code_choice">
              <case name="case_1">
                <leaf-list name="icmp-code">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="icmp-code-except">
                  <ordered-by value="user"/>
                  <type name="string"/>
                </leaf-list>
              </case>
            </choice>
            <list name="source-prefix-list">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IP source prefixes in named list</text>
              </description>
              <uses name="firewall_prefix_list"/>
            </list>
            <list name="destination-prefix-list">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IP destination prefixes in named list</text>
              </description>
              <uses name="firewall_prefix_list"/>
            </list>
            <list name="ip6-source-address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match source address</text>
              </description>
              <uses name="firewall_addr6_object"/>
            </list>
            <list name="ip6-destination-address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match destination address</text>
              </description>
              <uses name="firewall_addr6_object"/>
            </list>
          </container>
        </container>
        <container name="vxlan">
          <description>
            <text>Define vxlan match items</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="vni_choice">
            <case name="case_1">
              <leaf-list name="vni">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="vni-except">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
          </choice>
          <choice name="rsvd1_choice">
            <case name="case_1">
              <leaf-list name="rsvd1">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="rsvd1-except">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
          </choice>
          <choice name="rsvd2_choice">
            <case name="case_1">
              <leaf-list name="rsvd2">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="rsvd2-except">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
          </choice>
          <container name="flags">
            <description>
              <text>Match VXlan flag field</text>
            </description>
            <uses name="match_flags_value"/>
          </container>
        </container>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="designation">
          <case name="case_1">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="next">
              <description>
                <text>Continue to next term in a filter</text>
              </description>
              <type name="enumeration">
                <enum name="term">
                  <description>
                    <text>Continue to next term in a filter</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="pkt-trace">
          <description>
            <text>Trace the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="analyzer">
          <description>
            <text>Name of analyzer - (Ingress only)</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror-instance">
          <description>
            <text>Port-mirror the packet to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="next-hop-group">
          <description>
            <text>Use specified next-hop group</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="single-packet-rate">
                    <description>
                      <text>Name of single-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="two-packet-rate">
                    <description>
                      <text>Name of two-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_3">
            <leaf name="hierarchical-policer">
              <description>
                <text>Name of hierarchical policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="vlan">
          <description>
            <text>Name of VLAN - (Ingress only)</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="interface">
          <description>
            <text>Switch traffic to the specified interface by-passing switching lookup - (Ingress only)</text>
          </description>
          <type name="union">
            <type name="jt:interface-unit"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <container name="vxlan">
          <description>
            <text>Vxlan related data</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="flags">
            <description>
              <text>Set vxlan flags value (8..255 or 0x08..0xFF)</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="rsvd1">
            <description>
              <text>Set vxlan reserved-1 value</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="rsvd2">
            <description>
              <text>Set vxlan reserved-2 value</text>
            </description>
            <type name="string"/>
          </leaf>
        </container>
      </container>
    </list>
  </grouping>
  <grouping name="firewall_addr6_object">
    <leaf name="name">
      <description>
        <text>Prefix to match</text>
      </description>
      <type name="jt:ipv6prefix"/>
    </leaf>
    <leaf name="except">
      <description>
        <text>Match address not in this prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="firewall_addr_object">
    <leaf name="name">
      <description>
        <text>Prefix to match</text>
      </description>
      <type name="jt:ipv4prefix"/>
    </leaf>
    <leaf name="except">
      <description>
        <text>Match address not in this prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="firewall_flexible_match">
    <description>
      <text>Define a flexible match</text>
    </description>
    <leaf name="name">
      <description>
        <text>Flex match template name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="match-start">
      <description>
        <text>Start point to match in packet</text>
      </description>
      <type name="enumeration">
        <enum name="layer-2">
          <description>
            <text>Layer-2 match start</text>
          </description>
        </enum>
        <enum name="layer-3">
          <description>
            <text>Layer-3 match start</text>
          </description>
        </enum>
        <enum name="layer-4">
          <description>
            <text>Layer-4 match start</text>
          </description>
        </enum>
        <enum name="payload">
          <description>
            <text>Payload match start</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="byte-offset">
      <description>
        <text>Byte offset after the match start point</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-offset">
      <description>
        <text>Bit offset after the (match-start + byte) offset</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 7"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-length">
      <description>
        <text>Length of integer input (1..32 bits), Optional length of string input (1..128 bits)</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="firewall_hierpolicer">
    <description>
      <text>Define a hierarchical policer</text>
    </description>
    <leaf name="name">
      <description>
        <text>Hierarchical Policer name</text>
      </description>
      <type name="string"/>
    </leaf>
    <choice name="sharing">
      <case name="case_1">
        <leaf name="logical-interface-policer">
          <description>
            <text>Hierarchical policer is a logical interface policer</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="physical-interface-policer">
          <description>
            <text>Hierarchical policer is a physical interface policer</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <leaf name="shared-bandwidth-policer">
      <description>
        <text>Share policer bandwidth among bundle links</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="filter-specific">
      <description>
        <text>Hierarchical policer is filter-specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="aggregate">
      <description>
        <text>Aggregate definition</text>
      </description>
      <presence value="enable aggregate"/>
      <uses name="hierarchical-policer-aggregate-bucket"/>
    </container>
    <container name="premium">
      <description>
        <text>Premium definition</text>
      </description>
      <presence value="enable premium"/>
      <uses name="hierarchical-policer-premium-bucket"/>
    </container>
  </grouping>
  <grouping name="firewall_load_balance_group">
    <description>
      <text>Define group of destinations for load balancing</text>
    </description>
    <leaf name="name">
      <description>
        <text>Load balance group name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf-list name="next-hop-group">
      <ordered-by value="user"/>
      <description>
        <text>Use specified next-hop group</text>
      </description>
      <type name="string"/>
    </leaf-list>
  </grouping>
  <grouping name="firewall_mac_addr_object">
    <leaf name="name">
      <description>
        <text>MAC address to match</text>
      </description>
      <type name="jt:mac-addr-prefix"/>
    </leaf>
    <leaf name="except">
      <description>
        <text>Match MAC address not in this range</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="firewall_policer">
    <description>
      <text>Define a policer</text>
    </description>
    <leaf name="name">
      <description>
        <text>Policer name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="filter-specific">
      <description>
        <text>Policer is filter-specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="logical-interface-policer">
      <description>
        <text>Policer is logical interface policer</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-policer">
      <description>
        <text>Policer is physical interface policer</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="logical-bandwidth-policer">
      <description>
        <text>Policer uses logical interface bandwidth</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="shared-bandwidth-policer">
      <description>
        <text>Share policer bandwidth among bundle links</text>
      </description>
      <type name="empty"/>
    </leaf>
    <choice name="exceeding">
      <case name="case_1">
        <container name="if-exceeding">
          <presence value="enable if-exceeding"/>
          <description>
            <text>Define rate limits</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="bandwidth">
            <case name="case_1">
              <leaf name="bandwidth-limit">
                <description>
                  <text>Bandwidth limit</text>
                </description>
                <units name="bits per second"/>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="bandwidth-percent">
                <description>
                  <text>Bandwidth limit in percentage</text>
                </description>
                <units name="percent"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="1 .. 100"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
          <leaf name="burst-size-limit">
            <description>
              <text>Burst size limit</text>
            </description>
            <units name="bytes"/>
            <type name="string"/>
          </leaf>
          <container name="aggregate-policing">
            <presence value="enable aggregate-policing"/>
            <description>
              <text>Configure Aggregate Policer</text>
            </description>
            <uses name="apply-advanced"/>
            <list name="policer">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Two-color policer to be used as aggregate</text>
              </description>
              <max-elements value="1"/>
              <leaf name="name">
                <description>
                  <text>Name of two-color policer to use to aggregate police</text>
                </description>
                <type name="string"/>
              </leaf>
              <uses name="apply-advanced"/>
              <leaf name="aggregate-sharing-mode">
                <description>
                  <text>Hierarchical Metering model</text>
                </description>
                <type name="enumeration">
                  <enum name="guarantee">
                    <description>
                      <text>Child policer rates are guaranteed rates for member flow</text>
                    </description>
                  </enum>
                  <enum name="peak">
                    <description>
                      <text>Child policer rates are peak rates for member flow</text>
                    </description>
                  </enum>
                </type>
              </leaf>
            </list>
          </container>
        </container>
      </case>
      <case name="case_2">
        <container name="if-exceeding-pps">
          <presence value="enable if-exceeding-pps"/>
          <description>
            <text>Define pps limits</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="pps">
            <case name="case_1">
              <leaf name="pps-limit">
                <description>
                  <text>PPS limit</text>
                </description>
                <units name="packets per second"/>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
          <leaf name="packet-burst">
            <description>
              <text>PPS burst size limit</text>
            </description>
            <units name="packets"/>
            <type name="string"/>
          </leaf>
        </container>
      </case>
    </choice>
    <container name="then">
      <description>
        <text>Action to take if the rate limits are exceeded</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="discard">
        <description>
          <text>Discard the packet</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="loss-priority">
        <description>
          <text>Packet's loss priority</text>
        </description>
        <type name="enumeration">
          <enum name="low">
            <description>
              <text>Loss priority low</text>
            </description>
          </enum>
          <enum name="high">
            <description>
              <text>Loss priority high</text>
            </description>
          </enum>
          <enum name="medium-low">
            <description>
              <text>Loss priority medium-low</text>
            </description>
          </enum>
          <enum name="medium-high">
            <description>
              <text>Loss priority medium-high</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="forwarding-class">
        <description>
          <text>Classify packet to forwarding class</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="out-of-profile">
        <description>
          <text>Discard packets only if both congested and over threshold</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="aggregate">
      <presence value="enable aggregate"/>
      <description>
        <text>Aggregate policer used in Extended Hierarchical Policers</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="instantiation">
        <description>
          <text>Specify instantiation semantics of aggregate policer</text>
        </description>
        <type name="enumeration">
          <enum name="global">
            <description>
              <text>Single global instance of aggregate policer</text>
            </description>
          </enum>
        </type>
      </leaf>
    </container>
  </grouping>
  <grouping name="firewall_prefix_list">
    <leaf name="name">
      <description>
        <text>Prefix list to match</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="except">
      <description>
        <text>Match addresses not in this prefix list</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="hierarchical-policer-aggregate-bucket">
    <uses name="apply-advanced"/>
    <choice name="hp-aggregate-exceeding">
      <case name="case_1">
        <container name="if-exceeding">
          <presence value="enable if-exceeding"/>
          <description>
            <text>Define rate limits</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="bandwidth">
            <case name="case_1">
              <leaf name="bandwidth-limit">
                <description>
                  <text>Bandwidth limit</text>
                </description>
                <units name="bits per second"/>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
          <leaf name="burst-size-limit">
            <description>
              <text>Burst size limit</text>
            </description>
            <units name="bytes"/>
            <type name="string"/>
          </leaf>
        </container>
      </case>
      <case name="case_2">
        <container name="if-exceeding-pps">
          <presence value="enable if-exceeding-pps"/>
          <description>
            <text>Define pps limits</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="pps">
            <case name="case_1">
              <leaf name="pps-limit">
                <description>
                  <text>PPS limit</text>
                </description>
                <units name="packets per second"/>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
          <leaf name="packet-burst">
            <description>
              <text>PPS burst size limit</text>
            </description>
            <units name="packets"/>
            <type name="string"/>
          </leaf>
        </container>
      </case>
    </choice>
    <container name="then">
      <description>
        <text>Action to take if the rate limits are exceeded</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="hierarchical-policer-action">
        <case name="case_1">
          <leaf name="discard">
            <description>
              <text>Discard the packet</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="loss-priority">
            <description>
              <text>Packet's loss priority</text>
            </description>
            <type name="enumeration">
              <enum name="low">
                <description>
                  <text>Loss priority low</text>
                </description>
              </enum>
              <enum name="high">
                <description>
                  <text>Loss priority high</text>
                </description>
              </enum>
              <enum name="medium-low">
                <description>
                  <text>Loss priority medium-low</text>
                </description>
              </enum>
              <enum name="medium-high">
                <description>
                  <text>Loss priority medium-high</text>
                </description>
              </enum>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="forwarding-class">
            <description>
              <text>Classify packet to forwarding class</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
  </grouping>
  <grouping name="hierarchical-policer-premium-bucket">
    <uses name="apply-advanced"/>
    <choice name="hp-premium-exceeding">
      <case name="case_1">
        <container name="if-exceeding">
          <presence value="enable if-exceeding"/>
          <description>
            <text>Define rate limits</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="bandwidth">
            <case name="case_1">
              <leaf name="bandwidth-limit">
                <description>
                  <text>Bandwidth limit</text>
                </description>
                <units name="bits per second"/>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
          <leaf name="burst-size-limit">
            <description>
              <text>Burst size limit</text>
            </description>
            <units name="bytes"/>
            <type name="string"/>
          </leaf>
        </container>
      </case>
      <case name="case_2">
        <container name="if-exceeding-pps">
          <presence value="enable if-exceeding-pps"/>
          <description>
            <text>Define pps limits</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="pps">
            <case name="case_1">
              <leaf name="pps-limit">
                <description>
                  <text>PPS limit</text>
                </description>
                <units name="packets per second"/>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
          <leaf name="packet-burst">
            <description>
              <text>PPS burst size limit</text>
            </description>
            <units name="packets"/>
            <type name="string"/>
          </leaf>
        </container>
      </case>
    </choice>
    <container name="then">
      <description>
        <text>Action to take if the rate limits are exceeded</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="hierarchical-policer-action">
        <case name="case_1">
          <leaf name="discard">
            <description>
              <text>Discard the packet</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
  </grouping>
  <grouping name="inet6_dialer_filter">
    <description>
      <text>Define an IPv6 dialer filter</text>
    </description>
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source or destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="packet-length_choice">
          <case name="case_1">
            <leaf-list name="packet-length">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="packet-length-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="next-header_choice">
          <case name="case_1">
            <leaf-list name="next-header">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="next-header-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-type_choice">
          <case name="case_1">
            <leaf-list name="icmp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-code_choice">
          <case name="case_1">
            <leaf-list name="icmp-code">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-code-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="note">
              <description>
                <text>Interested ISDN packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="ignore">
              <description>
                <text>Non-interested ISDN packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="inet6_filter">
    <description>
      <text>Define an IPv6 firewall filter</text>
    </description>
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="promote">
      <description>
        <text>Promote a firewall match to PFM</text>
      </description>
      <type name="enumeration">
        <enum name="gre-key">
          <description>
            <text>Promote GRE Key to PFM</text>
          </description>
        </enum>
        <enum name="traffic-class">
          <description>
            <text>Promote traffic-class to PFM</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="scale-optimized">
      <description>
        <text>Improve filter prefix scale</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="enhanced-mode">
      <description>
        <text>Define filter for chassis network-services enhanced mode</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="interface-shared">
      <description>
        <text>Filter is interface-shared</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="enhanced-mode-override">
      <description>
        <text>Override the default chassis network-services enhanced mode for dynamic filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-filter">
      <description>
        <text>Filter is physical interface filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="fast-lookup-filter">
      <description>
        <text>Configure filter in the fast lookup hardware block</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="instance-shared">
      <description>
        <text>Filter is routing-instance shared</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="filter">
        <description>
          <text>Filter to include</text>
        </description>
        <type name="string"/>
      </leaf>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="destination-class_choice">
          <case name="case_1">
            <leaf-list name="destination-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-class_choice">
          <case name="case_1">
            <leaf-list name="source-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match  source address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source or destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="next-header_choice">
          <case name="case_1">
            <leaf-list name="next-header">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="next-header-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="payload-protocol_choice">
          <case name="case_1">
            <leaf-list name="payload-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="payload-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="extension-header_choice">
          <case name="case_1">
            <leaf-list name="extension-header">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="extension-header-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="packet-length_choice">
          <case name="case_1">
            <leaf-list name="packet-length">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="packet-length-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="traffic-class_choice">
          <case name="case_1">
            <leaf-list name="traffic-class">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="traffic-class-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-type_choice">
          <case name="case_1">
            <leaf-list name="icmp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-code_choice">
          <case name="case_1">
            <leaf-list name="icmp-code">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-code-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="tcp-initial">
          <description>
            <text>Match initial packet of a TCP connection</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="tcp-established">
          <description>
            <text>Match packet of an established TCP connection</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="tcp-flags">
          <description>
            <text>Match TCP flags (in symbolic or hex formats)</text>
          </description>
          <type name="string"/>
        </leaf>
        <list name="interface">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface name</text>
          </description>
          <uses name="match_interface_object"/>
        </list>
        <list name="interface-set">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface in set</text>
          </description>
          <uses name="match_interface_set_object"/>
        </list>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <leaf name="service-filter-hit">
          <description>
            <text>Match if service-filter-hit is set</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="hop-limit_choice">
          <case name="case_1">
            <leaf-list name="hop-limit">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="hop-limit-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="is-fragment">
          <description>
            <text>Match if packet is a fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="first-fragment">
          <description>
            <text>Match if packet is first fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="last-fragment">
          <description>
            <text>Match if packet is last fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="flex-mask_choice">
          <case name="case_1">
            <container name="flexible-match-mask">
              <description>
                <text>Match flexible mask</text>
              </description>
              <presence value="enable flexible-match-mask"/>
              <uses name="match_L3_flexible_mask"/>
            </container>
          </case>
        </choice>
        <choice name="flex-range_choice">
          <case name="case_1">
            <container name="flexible-match-range">
              <description>
                <text>Match flexible range</text>
              </description>
              <presence value="enable flexible-match-range"/>
              <uses name="match_L3_flexible_range"/>
            </container>
          </case>
        </choice>
        <choice name="gre-key_choice">
          <case name="case_1">
            <leaf-list name="gre-key">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="gre-key-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="policy-map_choice">
          <case name="case_1">
            <leaf-list name="policy-map">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="policy-map-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="single-packet-rate">
                    <description>
                      <text>Name of single-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="two-packet-rate">
                    <description>
                      <text>Name of two-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_3">
            <leaf name="hierarchical-policer">
              <description>
                <text>Name of hierarchical policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="policy-map-choice">
          <case name="case_1">
            <leaf name="clear-policy-map">
              <description>
                <text>Clear the policy marking</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="policy-map">
              <description>
                <text>Policy map action</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="inet6cnt">
          <case name="case_1">
            <leaf name="traffic-class-count">
              <description>
                <text>Count the packet in the named traffic-class counter</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="count">
              <description>
                <text>Count the packet in the named counter</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="service-accounting">
          <description>
            <text>Count the packets for service accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="service-accounting-deferred">
          <description>
            <text>Count the packets for deferred service accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="packet-mode">
          <description>
            <text>Bypass flow mode for the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="port-mirror-instance">
          <description>
            <text>Port-mirror the packet to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="inline-monitoring-instance">
          <description>
            <text>Inline monitoring to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="l2-mirror">
          <description>
            <text>L2 mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="traffic-class">
          <description>
            <text>Set traffic-class code point</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="skip-services">
          <description>
            <text>Skip the services</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="service-filter-hit">
          <description>
            <text>Marked when packet processing by the current type of chained filters is done, the packet is directed to the next type of filters</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="force-premium">
          <description>
            <text>When this bit is marked, traffic is considered as premium by the following hierarchical policer</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="exclude-accounting">
          <description>
            <text>When this is marked, traffic is excluded from accurate accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <container name="decapsulate">
              <presence value="enable decapsulate"/>
              <description>
                <text>Terminate a tunnel</text>
              </description>
              <choice name="tunnel-protocol">
                <case name="case_1">
                  <container name="gre">
                    <presence value="enable gre"/>
                    <description>
                      <text>GRE protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <choice name="destination">
                      <case name="case_1">
                        <container name="routing-instance">
                          <description>
                            <text>Packets are directed to specified routing instance</text>
                          </description>
                          <leaf name="routing-instance-name">
                            <description>
                              <text>Name of routing instance</text>
                            </description>
                            <type name="string"/>
                          </leaf>
                        </container>
                      </case>
                    </choice>
                  </container>
                </case>
                <case name="case_2">
                  <container name="gre-in-udp">
                    <presence value="enable gre-in-udp"/>
                    <description>
                      <text>GRE-in-UDP protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <choice name="destination">
                      <case name="case_1">
                        <container name="routing-instance">
                          <description>
                            <text>Packets are directed to specified routing instance</text>
                          </description>
                          <leaf name="routing-instance-name">
                            <description>
                              <text>Name of routing instance</text>
                            </description>
                            <type name="string"/>
                          </leaf>
                        </container>
                      </case>
                    </choice>
                  </container>
                </case>
                <case name="case_3">
                  <container name="mpls-in-udp">
                    <presence value="enable mpls-in-udp"/>
                    <description>
                      <text>MPLS-in-UDP protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <choice name="destination">
                      <case name="case_1">
                        <container name="routing-instance">
                          <description>
                            <text>Packets are directed to specified routing instance</text>
                          </description>
                          <leaf name="routing-instance-name">
                            <description>
                              <text>Name of routing instance</text>
                            </description>
                            <type name="string"/>
                          </leaf>
                        </container>
                      </case>
                    </choice>
                  </container>
                </case>
                <case name="case_4">
                  <container name="l2tp">
                    <description>
                      <text>L2TP protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <leaf-list name="cookie">
                      <ordered-by value="user"/>
                      <description>
                        <text>L2TPv3 cookie</text>
                      </description>
                      <type name="string">
                        <length value="1 .. 32"/>
                      </type>
                    </leaf-list>
                    <choice name="destination">
                      <case name="case_1">
                        <leaf name="output-interface">
                          <description>
                            <text>Interface name</text>
                          </description>
                          <type name="union">
                            <type name="jt:interface-unit"/>
                            <type name="string">
                              <pattern value="&lt;.*&gt;|$.*"/>
                            </type>
                          </type>
                        </leaf>
                      </case>
                    </choice>
                  </container>
                </case>
                <case name="case_5">
                  <container name="ipip">
                    <presence value="enable ipip"/>
                    <description>
                      <text>IPIP protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <choice name="destination">
                      <case name="case_1">
                        <container name="routing-instance">
                          <description>
                            <text>Packets are directed to specified routing instance</text>
                          </description>
                          <leaf name="routing-instance-name">
                            <description>
                              <text>Name of routing instance</text>
                            </description>
                            <type name="string"/>
                          </leaf>
                        </container>
                      </case>
                    </choice>
                  </container>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_2">
            <container name="encapsulate">
              <presence value="enable encapsulate"/>
              <description>
                <text>Send to a tunnel</text>
              </description>
              <leaf name="tunnel-end-point">
                <description>
                  <text>Name of the tunnel end point</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
          <case name="case_3">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_4">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_5">
            <leaf name="next">
              <description>
                <text>Continue to next term in a filter</text>
              </description>
              <type name="enumeration">
                <enum name="term">
                  <description>
                    <text>Continue to next term in a filter</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="next-hop-group">
              <description>
                <text>Use specified next-hop group</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_7">
            <list name="logical-system">
              <key value="logical-system-name"/>
              <ordered-by value="user"/>
              <description>
                <text>Packets are directed to specified logical system</text>
              </description>
              <max-elements value="1"/>
              <leaf name="logical-system-name">
                <description>
                  <text>Name of logical system</text>
                </description>
                <type name="string"/>
              </leaf>
              <container name="routing-instance">
                <description>
                  <text>Packets are directed to specified routing instance</text>
                </description>
                <leaf name="routing-instance-name">
                  <description>
                    <text>Name of routing instance</text>
                  </description>
                  <type name="string"/>
                </leaf>
                <leaf name="topology">
                  <description>
                    <text>Packets are directed to specified topology</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </container>
              <leaf name="topology">
                <description>
                  <text>Packets are directed to specified topology</text>
                </description>
                <type name="string"/>
              </leaf>
            </list>
          </case>
          <case name="case_8">
            <container name="routing-instance">
              <description>
                <text>Packets are directed to specified routing instance</text>
              </description>
              <leaf name="routing-instance-name">
                <description>
                  <text>Name of routing instance</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="topology">
                <description>
                  <text>Packets are directed to specified topology</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
          <case name="case_9">
            <leaf name="topology">
              <description>
                <text>Packets are directed to specified topology</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_10">
            <container name="next-ip6">
              <description>
                <text>Packets are directed to specified the specified ipv6 address</text>
              </description>
              <leaf name="address">
                <description>
                  <text>Address to route</text>
                </description>
                <type name="jt:ipv6prefix"/>
              </leaf>
              <container name="routing-instance">
                <description>
                  <text>Packets are directed to specified routing instance</text>
                </description>
                <leaf name="routing-instance-name">
                  <description>
                    <text>Name of routing instance</text>
                  </description>
                  <type name="string"/>
                </leaf>
                <leaf name="topology">
                  <description>
                    <text>Packets are directed to specified topology</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </container>
            </container>
          </case>
          <case name="case_11">
            <container name="next-interface">
              <presence value="enable next-interface"/>
              <description>
                <text>Packets are to be routed through the specified interface</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="interface-name">
                <description>
                  <text>Interface name</text>
                </description>
                <type name="string">
                  <length value="1 .. 127"/>
                </type>
              </leaf>
              <container name="routing-instance">
                <description>
                  <text>Packets are directed to specified routing instance</text>
                </description>
                <leaf name="routing-instance-name">
                  <description>
                    <text>Name of routing instance</text>
                  </description>
                  <type name="string"/>
                </leaf>
                <leaf name="topology">
                  <description>
                    <text>Packets are directed to specified topology</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </container>
              <choice name="designation">
                <case name="case_1">
                  <leaf name="accept">
                    <description>
                      <text>Accept the packet</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="next">
                    <description>
                      <text>Continue to next term in a filter</text>
                    </description>
                    <type name="enumeration">
                      <enum name="term">
                        <description>
                          <text>Continue to next term in a filter</text>
                        </description>
                      </enum>
                    </type>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_12">
            <container name="reject">
              <presence value="enable reject"/>
              <description>
                <text>Reject the packet</text>
              </description>
              <choice name="style">
                <case name="case_1">
                  <leaf name="no-route">
                    <description>
                      <text>Send ICMPv6 No Route message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="administratively-prohibited">
                    <description>
                      <text>Send ICMPv6 Administratively Prohibited message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="beyond-scope">
                    <description>
                      <text>Send ICMPv6 Beyond Scope of Source Address message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="address-unreachable">
                    <description>
                      <text>Send ICMPv6 Address Unreachable message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_5">
                  <leaf name="port-unreachable">
                    <description>
                      <text>Send ICMPv6 Port Unreachable message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_6">
                  <leaf name="policy-failed">
                    <description>
                      <text>Source address failed ingress/egress policy</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_7">
                  <leaf name="reject-route">
                    <description>
                      <text>Reject route to destination</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_8">
                  <leaf name="tcp-reset">
                    <description>
                      <text>Send TCP Reset message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_9">
                  <leaf name="network-unreachable">
                    <description>
                      <text>Send ICMPv4 Network Unreachable message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_10">
                  <leaf name="host-unreachable">
                    <description>
                      <text>Send ICMPv4 Host Unreachable message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_11">
                  <leaf name="protocol-unreachable">
                    <description>
                      <text>Send ICMPv4 Protocol Unreachable message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_12">
                  <leaf name="source-route-failed">
                    <description>
                      <text>Send ICMPv4 Source Route Failed message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_13">
                  <leaf name="network-unknown">
                    <description>
                      <text>Send ICMPv4 Network Unknown message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_14">
                  <leaf name="host-unknown">
                    <description>
                      <text>Send ICMPv4 Host Unknown message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_15">
                  <leaf name="source-host-isolated">
                    <description>
                      <text>Send ICMPv4 Source Host Isolated message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_16">
                  <leaf name="network-prohibited">
                    <description>
                      <text>Send ICMPv4 Network Prohibited message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_17">
                  <leaf name="host-prohibited">
                    <description>
                      <text>Send ICMPv4 Host Prohibited message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_18">
                  <leaf name="bad-network-tos">
                    <description>
                      <text>Send ICMPv4 Bad Network ToS message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_19">
                  <leaf name="bad-host-tos">
                    <description>
                      <text>Send ICMPv4 Bad Host ToS message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_20">
                  <leaf name="precedence-violation">
                    <description>
                      <text>Send ICMPv4 Precedence Violation message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_21">
                  <leaf name="precedence-cutoff">
                    <description>
                      <text>Send ICMPv4 Precedence Cutoff message</text>
                    </description>
                    <status value="deprecated"/>
                    <type name="empty"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="inet6_fuf">
    <leaf name="name">
      <description>
        <text>Name of fast update filter</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf-list name="match-order">
      <ordered-by value="user"/>
      <type name="enumeration">
        <enum name="next-header">
          <description>
            <text>Include next header protocol in match set</text>
          </description>
        </enum>
        <enum name="payload-protocol">
          <description>
            <text>Include payload protocol in match set</text>
          </description>
        </enum>
        <enum name="source-address">
          <description>
            <text>Include source-address in match set</text>
          </description>
        </enum>
        <enum name="destination-address">
          <description>
            <text>Include destination-address in match set</text>
          </description>
        </enum>
        <enum name="source-port">
          <description>
            <text>Include source-port in match set</text>
          </description>
        </enum>
        <enum name="destination-port">
          <description>
            <text>Include destination-port in match set</text>
          </description>
        </enum>
        <enum name="traffic-class">
          <description>
            <text>Include traffic-class (DSCP) in match set</text>
          </description>
        </enum>
      </type>
    </leaf-list>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>One or more firewall terms</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="only-at-create">
        <description>
          <text>Add term only when filter is first created.</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="from">
        <description>
          <text>Match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="source-address">
          <description>
            <text>Match source IP address</text>
          </description>
          <uses name="firewall_addr6_simple_object"/>
        </container>
        <container name="destination-address">
          <description>
            <text>Match destination IP address</text>
          </description>
          <uses name="firewall_addr6_simple_object"/>
        </container>
        <choice name="source-port_choice">
          <case name="case_1">
            <container name="source-port">
              <description>
                <text>Match TCP/UDP source port</text>
              </description>
              <uses name="match_simple_port_value"/>
            </container>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <container name="destination-port">
              <description>
                <text>Match TCP/UDP destination port</text>
              </description>
              <uses name="match_simple_port_value"/>
            </container>
          </case>
        </choice>
        <choice name="next-header_choice">
          <case name="case_1">
            <container name="next-header">
              <description>
                <text>Match next header protocol type</text>
              </description>
              <uses name="match_simple_protocol_value"/>
            </container>
          </case>
        </choice>
        <choice name="payload-protocol_choice">
          <case name="case_1">
            <container name="payload-protocol">
              <description>
                <text>Match payload protocol type</text>
              </description>
              <uses name="match_simple_payload_protocol_value"/>
            </container>
          </case>
        </choice>
        <choice name="traffic-class_choice">
          <case name="case_1">
            <container name="traffic-class">
              <description>
                <text>Match Differentiated Services (DiffServ) code point</text>
              </description>
              <uses name="match_simple_dscp_value"/>
            </container>
          </case>
        </choice>
        <leaf name="match-terms">
          <description>
            <text>Dynamically supplied list of match criteria</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="service-accounting">
          <description>
            <text>Count the packets for service accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="action-terms">
          <description>
            <text>Dynamically supplied list of actions</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <container name="routing-instance">
              <description>
                <text>Packets are directed to specified routing instance</text>
              </description>
              <leaf name="routing-instance-name">
                <description>
                  <text>Name of routing instance</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="topology">
                <description>
                  <text>Packets are directed to specified topology</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="firewall_addr6_simple_object">
    <uses name="apply-advanced"/>
    <leaf name="address">
      <description>
        <text>Prefix to match</text>
      </description>
      <type name="jt:ipv6prefix"/>
    </leaf>
  </grouping>
  <grouping name="inet6_service_filter">
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Service filter term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match  source address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source or destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="next-header_choice">
          <case name="case_1">
            <leaf-list name="next-header">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="next-header-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="payload-protocol_choice">
          <case name="case_1">
            <leaf-list name="payload-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="payload-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="extension-header_choice">
          <case name="case_1">
            <leaf-list name="extension-header">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="extension-header-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="esp-spi_choice">
          <case name="case_1">
            <leaf-list name="esp-spi">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="esp-spi-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ah-spi_choice">
          <case name="case_1">
            <leaf-list name="ah-spi">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ah-spi-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="tcp-flags">
          <description>
            <text>Match TCP flags (in symbolic or hex formats)</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="service">
              <description>
                <text>Forward packets to service processing</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="skip">
              <description>
                <text>Skip service processing</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="inet_dialer_filter">
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="packet-length_choice">
          <case name="case_1">
            <leaf-list name="packet-length">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="packet-length-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="precedence_choice">
          <case name="case_1">
            <leaf-list name="precedence">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="precedence-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="dscp_choice">
          <case name="case_1">
            <leaf-list name="dscp">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="dscp-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-options_choice">
          <case name="case_1">
            <leaf-list name="ip-options">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-options-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="is-fragment">
          <description>
            <text>Match if packet is a fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="first-fragment">
          <description>
            <text>Match if packet is the first fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="fragment-offset_choice">
          <case name="case_1">
            <leaf-list name="fragment-offset">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="fragment-offset-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="fragment-flags">
          <description>
            <text>Match fragment flags</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="protocol_choice">
          <case name="case_1">
            <leaf-list name="protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ttl_choice">
          <case name="case_1">
            <leaf-list name="ttl">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ttl-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-type_choice">
          <case name="case_1">
            <leaf-list name="icmp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-code_choice">
          <case name="case_1">
            <leaf-list name="icmp-code">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-code-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="tcp-initial">
          <description>
            <text>Match initial packet of a TCP connection</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="tcp-established">
          <description>
            <text>Match packet of an established TCP connection</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="tcp-flags">
          <description>
            <text>Match TCP flags (in symbolic or hex formats)</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="esp-spi_choice">
          <case name="case_1">
            <leaf-list name="esp-spi">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="esp-spi-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ah-spi_choice">
          <case name="case_1">
            <leaf-list name="ah-spi">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ah-spi-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="note">
              <description>
                <text>Interested ISDN packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="ignore">
              <description>
                <text>Non-interested ISDN packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="inet_filter">
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="promote">
      <description>
        <text>Promote a firewall match to PFM</text>
      </description>
      <type name="enumeration">
        <enum name="gre-key">
          <description>
            <text>Promote GRE Key to PFM</text>
          </description>
        </enum>
        <enum name="dscp">
          <description>
            <text>Promote DSCP to PFM</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="scale-optimized">
      <description>
        <text>Improve filter prefix scale</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-filter">
      <description>
        <text>Filter is physical interface filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="enhanced-mode">
      <description>
        <text>Define filter for chassis network-services enhanced mode</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="interface-shared">
      <description>
        <text>Filter is interface-shared</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="enhanced-mode-override">
      <description>
        <text>Override the default chassis network-services enhanced mode for dynamic filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="instance-shared">
      <description>
        <text>Filter is routing-instance shared</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="fast-lookup-filter">
      <description>
        <text>Configure filter in the fast lookup hardware block</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="filter">
        <description>
          <text>Filter to include</text>
        </description>
        <type name="string"/>
      </leaf>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="destination-class_choice">
          <case name="case_1">
            <leaf-list name="destination-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-class_choice">
          <case name="case_1">
            <leaf-list name="source-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="packet-length_choice">
          <case name="case_1">
            <leaf-list name="packet-length">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="packet-length-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="dscp_choice">
          <case name="case_1">
            <leaf-list name="dscp">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="dscp-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="precedence_choice">
          <case name="case_1">
            <leaf-list name="precedence">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="precedence-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-options_choice">
          <case name="case_1">
            <leaf-list name="ip-options">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-options-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="is-fragment">
          <description>
            <text>Match if packet is a fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="first-fragment">
          <description>
            <text>Match if packet is the first fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="service-filter-hit">
          <description>
            <text>Match if service-filter-hit is set</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="fragment-offset_choice">
          <case name="case_1">
            <leaf-list name="fragment-offset">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="fragment-offset-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="fragment-flags">
          <description>
            <text>Match fragment flags (in symbolic or hex formats) - (Ingress only)</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="protocol_choice">
          <case name="case_1">
            <leaf-list name="protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ttl_choice">
          <case name="case_1">
            <leaf-list name="ttl">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ttl-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-type_choice">
          <case name="case_1">
            <leaf-list name="icmp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-code_choice">
          <case name="case_1">
            <leaf-list name="icmp-code">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-code-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="tcp-initial">
          <description>
            <text>Match initial packet of a TCP connection</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="tcp-established">
          <description>
            <text>Match packet of an established TCP connection</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="tcp-flags">
          <description>
            <text>Match TCP flags (in symbolic or hex formats)</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="esp-spi_choice">
          <case name="case_1">
            <leaf-list name="esp-spi">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="esp-spi-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ah-spi_choice">
          <case name="case_1">
            <leaf-list name="ah-spi">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ah-spi-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="interface">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface name</text>
          </description>
          <uses name="match_interface_object"/>
        </list>
        <list name="interface-set">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface in set</text>
          </description>
          <uses name="match_interface_set_object"/>
        </list>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="rat-type_choice">
          <case name="case_1">
            <leaf-list name="rat-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="rat-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="redirect-reason_choice">
          <case name="case_1">
            <leaf-list name="redirect-reason">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="aoc">
                  <description>
                    <text>Advice of Charge</text>
                  </description>
                </enum>
                <enum name="aolb">
                  <description>
                    <text>Advice of Low Balance</text>
                  </description>
                </enum>
                <enum name="dpi">
                  <description>
                    <text>Layer7 match required</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="redirect-reason-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="aoc">
                  <description>
                    <text>Advice of Charge</text>
                  </description>
                </enum>
                <enum name="aolb">
                  <description>
                    <text>Advice of Low Balance</text>
                  </description>
                </enum>
                <enum name="dpi">
                  <description>
                    <text>Layer7 match required</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="gre-key_choice">
          <case name="case_1">
            <leaf-list name="gre-key">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="gre-key-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="flex-mask_choice">
          <case name="case_1">
            <container name="flexible-match-mask">
              <description>
                <text>Match flexible mask</text>
              </description>
              <presence value="enable flexible-match-mask"/>
              <uses name="match_L3_flexible_mask"/>
            </container>
          </case>
        </choice>
        <choice name="flex-range_choice">
          <case name="case_1">
            <container name="flexible-match-range">
              <description>
                <text>Match flexible range</text>
              </description>
              <presence value="enable flexible-match-range"/>
              <uses name="match_L3_flexible_range"/>
            </container>
          </case>
        </choice>
        <choice name="policy-map_choice">
          <case name="case_1">
            <leaf-list name="policy-map">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="policy-map-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
        </choice>
        <container name="vxlan">
          <description>
            <text>Define vxlan match items</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="vni_choice">
            <case name="case_1">
              <leaf-list name="vni">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="vni-except">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
          </choice>
          <choice name="rsvd1_choice">
            <case name="case_1">
              <leaf-list name="rsvd1">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="rsvd1-except">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
          </choice>
          <choice name="rsvd2_choice">
            <case name="case_1">
              <leaf-list name="rsvd2">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="rsvd2-except">
                <ordered-by value="user"/>
                <description>
                  <text>Range of values</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
          </choice>
          <container name="flags">
            <description>
              <text>Match VXlan flag field</text>
            </description>
            <uses name="match_flags_value"/>
          </container>
        </container>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="single-packet-rate">
                    <description>
                      <text>Name of single-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="two-packet-rate">
                    <description>
                      <text>Name of two-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_3">
            <leaf name="hierarchical-policer">
              <description>
                <text>Name of hierarchical policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="policy-map-choice">
          <case name="case_1">
            <leaf name="clear-policy-map">
              <description>
                <text>Clear the policy marking</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="policy-map">
              <description>
                <text>Policy map action</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="inetcnt">
          <case name="case_1">
            <leaf name="traffic-class-count">
              <description>
                <text>Count the packet in the named traffic-class counter</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="count">
              <description>
                <text>Count the packet in the named counter</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="service-accounting">
          <description>
            <text>Count the packets for service accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="skip-services">
          <description>
            <text>Skip the services</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="service-accounting-deferred">
          <description>
            <text>Count the packets for deferred service accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="packet-mode">
          <description>
            <text>Bypass flow mode for the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="port-mirror-instance">
          <description>
            <text>Port-mirror the packet to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="inline-monitoring-instance">
          <description>
            <text>Inline monitoring to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="l2-mirror">
          <description>
            <text>L2 mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="service-filter-hit">
          <description>
            <text>Marked when packet processing by the current type of chained filters is done, the packet is directed to the next type of filters</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="force-premium">
          <description>
            <text>When this bit is marked, traffic is considered as premium by the following hierarchical policer</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="exclude-accounting">
          <description>
            <text>When this is marked, traffic is excluded from accurate accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="virtual-channel">
          <description>
            <text>Set the output interface virtual channel</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="discard">
              <presence value="enable discard"/>
              <description>
                <text>Discard the packet</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="accounting">
                <description>
                  <text>Named discard collector for packet</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
          <case name="case_3">
            <leaf name="next">
              <description>
                <text>Continue to next term in a filter</text>
              </description>
              <type name="enumeration">
                <enum name="term">
                  <description>
                    <text>Continue to next term in a filter</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </case>
          <case name="case_4">
            <list name="logical-system">
              <key value="logical-system-name"/>
              <ordered-by value="user"/>
              <description>
                <text>Packets are directed to specified logical system</text>
              </description>
              <max-elements value="1"/>
              <leaf name="logical-system-name">
                <description>
                  <text>Name of logical system</text>
                </description>
                <type name="string"/>
              </leaf>
              <container name="routing-instance">
                <description>
                  <text>Packets are directed to specified routing instance</text>
                </description>
                <leaf name="routing-instance-name">
                  <description>
                    <text>Name of routing instance</text>
                  </description>
                  <type name="string"/>
                </leaf>
                <leaf name="topology">
                  <description>
                    <text>Packets are directed to specified topology</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </container>
              <leaf name="topology">
                <description>
                  <text>Packets are directed to specified topology</text>
                </description>
                <type name="string"/>
              </leaf>
            </list>
          </case>
          <case name="case_5">
            <container name="routing-instance">
              <description>
                <text>Packets are directed to specified routing instance</text>
              </description>
              <leaf name="routing-instance-name">
                <description>
                  <text>Name of routing instance</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="topology">
                <description>
                  <text>Packets are directed to specified topology</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
          <case name="case_6">
            <leaf name="topology">
              <description>
                <text>Packets are directed to specified topology</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_7">
            <container name="next-ip">
              <description>
                <text>Packets are directed to specified the specified ipv4 address</text>
              </description>
              <leaf name="address">
                <description>
                  <text>Address to route</text>
                </description>
                <type name="jt:ipv4prefix"/>
              </leaf>
              <container name="routing-instance">
                <description>
                  <text>Packets are directed to specified routing instance</text>
                </description>
                <leaf name="routing-instance-name">
                  <description>
                    <text>Name of routing instance</text>
                  </description>
                  <type name="string"/>
                </leaf>
                <leaf name="topology">
                  <description>
                    <text>Packets are directed to specified topology</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </container>
            </container>
          </case>
          <case name="case_8">
            <container name="next-interface">
              <presence value="enable next-interface"/>
              <description>
                <text>Packets are to be routed through the specified interface</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="interface-name">
                <description>
                  <text>Interface name</text>
                </description>
                <type name="string">
                  <length value="1 .. 127"/>
                </type>
              </leaf>
              <container name="routing-instance">
                <description>
                  <text>Packets are directed to specified routing instance</text>
                </description>
                <leaf name="routing-instance-name">
                  <description>
                    <text>Name of routing instance</text>
                  </description>
                  <type name="string"/>
                </leaf>
                <leaf name="topology">
                  <description>
                    <text>Packets are directed to specified topology</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </container>
              <choice name="designation">
                <case name="case_1">
                  <leaf name="accept">
                    <description>
                      <text>Accept the packet</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="next">
                    <description>
                      <text>Continue to next term in a filter</text>
                    </description>
                    <type name="enumeration">
                      <enum name="term">
                        <description>
                          <text>Continue to next term in a filter</text>
                        </description>
                      </enum>
                    </type>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_9">
            <leaf name="ipsec-sa">
              <description>
                <text>Use specified IPSec security association</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_10">
            <leaf name="next-hop-group">
              <description>
                <text>Use specified next-hop group</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_11">
            <container name="decapsulate">
              <presence value="enable decapsulate"/>
              <description>
                <text>Terminate a tunnel</text>
              </description>
              <choice name="tunnel-protocol">
                <case name="case_1">
                  <container name="gre">
                    <presence value="enable gre"/>
                    <description>
                      <text>GRE protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <choice name="destination">
                      <case name="case_1">
                        <container name="routing-instance">
                          <description>
                            <text>Packets are directed to specified routing instance</text>
                          </description>
                          <leaf name="routing-instance-name">
                            <description>
                              <text>Name of routing instance</text>
                            </description>
                            <type name="string"/>
                          </leaf>
                        </container>
                      </case>
                    </choice>
                  </container>
                </case>
                <case name="case_2">
                  <container name="gre-in-udp">
                    <presence value="enable gre-in-udp"/>
                    <description>
                      <text>GRE-in-UDP protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <choice name="destination">
                      <case name="case_1">
                        <container name="routing-instance">
                          <description>
                            <text>Packets are directed to specified routing instance</text>
                          </description>
                          <leaf name="routing-instance-name">
                            <description>
                              <text>Name of routing instance</text>
                            </description>
                            <type name="string"/>
                          </leaf>
                        </container>
                      </case>
                    </choice>
                  </container>
                </case>
                <case name="case_3">
                  <container name="mpls-in-udp">
                    <presence value="enable mpls-in-udp"/>
                    <description>
                      <text>MPLS-in-UDP protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <choice name="destination">
                      <case name="case_1">
                        <container name="routing-instance">
                          <description>
                            <text>Packets are directed to specified routing instance</text>
                          </description>
                          <leaf name="routing-instance-name">
                            <description>
                              <text>Name of routing instance</text>
                            </description>
                            <type name="string"/>
                          </leaf>
                        </container>
                      </case>
                    </choice>
                  </container>
                </case>
                <case name="case_4">
                  <container name="l2tp">
                    <description>
                      <text>L2TP protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <leaf-list name="cookie">
                      <ordered-by value="user"/>
                      <description>
                        <text>L2TPv3 cookie</text>
                      </description>
                      <type name="string">
                        <length value="1 .. 32"/>
                      </type>
                    </leaf-list>
                    <choice name="destination">
                      <case name="case_1">
                        <leaf name="output-interface">
                          <description>
                            <text>Interface name</text>
                          </description>
                          <type name="union">
                            <type name="jt:interface-unit"/>
                            <type name="string">
                              <pattern value="&lt;.*&gt;|$.*"/>
                            </type>
                          </type>
                        </leaf>
                      </case>
                    </choice>
                  </container>
                </case>
                <case name="case_5">
                  <container name="ipip">
                    <presence value="enable ipip"/>
                    <description>
                      <text>IPIP protocol</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf-list name="sample">
                      <ordered-by value="user"/>
                      <description>
                        <text>Sample the packet</text>
                      </description>
                      <type name="enumeration">
                        <enum name="inet">
                          <description>
                            <text>IPV4 protocol</text>
                          </description>
                        </enum>
                        <enum name="inet6">
                          <description>
                            <text>IPV6 protocol</text>
                          </description>
                        </enum>
                        <enum name="mpls">
                          <description>
                            <text>MPLS protocol</text>
                          </description>
                        </enum>
                      </type>
                    </leaf-list>
                    <leaf name="no-decrement-ttl">
                      <description>
                        <text>Do not decrement TTL</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="forwarding-class">
                      <description>
                        <text>Classify packet to forwarding class</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="interface-group">
                      <description>
                        <text>Set the interface group</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 255"/>
                        </type>
                      </type>
                    </leaf>
                    <choice name="destination">
                      <case name="case_1">
                        <container name="routing-instance">
                          <description>
                            <text>Packets are directed to specified routing instance</text>
                          </description>
                          <leaf name="routing-instance-name">
                            <description>
                              <text>Name of routing instance</text>
                            </description>
                            <type name="string"/>
                          </leaf>
                        </container>
                      </case>
                    </choice>
                  </container>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_12">
            <container name="encapsulate">
              <presence value="enable encapsulate"/>
              <description>
                <text>Send to a tunnel</text>
              </description>
              <leaf name="tunnel-end-point">
                <description>
                  <text>Name of the tunnel end point</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
          <case name="case_13">
            <container name="reject">
              <presence value="enable reject"/>
              <description>
                <text>Reject the packet</text>
              </description>
              <choice name="style">
                <case name="case_1">
                  <leaf name="network-unreachable">
                    <description>
                      <text>Send ICMP Network Unreachable message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="host-unreachable">
                    <description>
                      <text>Send ICMP Host Unreachable message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="protocol-unreachable">
                    <description>
                      <text>Send ICMP Protocol Unreachable message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="port-unreachable">
                    <description>
                      <text>Send ICMP Port Unreachable message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_5">
                  <leaf name="fragmentation-needed">
                    <description>
                      <text>Send ICMP Fragmentation Needed message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_6">
                  <leaf name="source-route-failed">
                    <description>
                      <text>Send ICMP Source Route Failed message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_7">
                  <leaf name="network-unknown">
                    <description>
                      <text>Send ICMP Network Unknown message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_8">
                  <leaf name="host-unknown">
                    <description>
                      <text>Send ICMP Host Unknown message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_9">
                  <leaf name="source-host-isolated">
                    <description>
                      <text>Send ICMP Source Host Isolated message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_10">
                  <leaf name="network-prohibited">
                    <description>
                      <text>Send ICMP Network Prohibited message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_11">
                  <leaf name="host-prohibited">
                    <description>
                      <text>Send ICMP Host Prohibited message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_12">
                  <leaf name="bad-network-tos">
                    <description>
                      <text>Send ICMP Bad Network ToS message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_13">
                  <leaf name="bad-host-tos">
                    <description>
                      <text>Send ICMP Bad Host ToS message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_14">
                  <leaf name="administratively-prohibited">
                    <description>
                      <text>Send ICMP Administratively Prohibited message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_15">
                  <leaf name="precedence-violation">
                    <description>
                      <text>Send ICMP Precedence Violation message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_16">
                  <leaf name="precedence-cutoff">
                    <description>
                      <text>Send ICMP Precedence Cutoff message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_17">
                  <leaf name="tcp-reset">
                    <description>
                      <text>Send TCP Reset message</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_14">
            <leaf name="load-balance">
              <description>
                <text>Use specified load balancing group</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="dscp">
          <description>
            <text>Set Differentiated Services (DiffServ) code point</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="dont-fragment">
          <description>
            <text>Set or clear the DF bit flag of the IP header (ingress only)</text>
          </description>
          <type name="enumeration">
            <enum name="clear">
              <description>
                <text>Clear DF bit flag</text>
              </description>
            </enum>
            <enum name="set">
              <description>
                <text>Set DF bit flag</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="prefix-action">
          <description>
            <text>Police or count packets using named prefix action</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
    </list>
  </grouping>
  <grouping name="inet_fuf">
    <leaf name="name">
      <description>
        <text>Name of fast update filter</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf-list name="match-order">
      <ordered-by value="user"/>
      <type name="enumeration">
        <enum name="protocol">
          <description>
            <text>Include IP protocol in match set</text>
          </description>
        </enum>
        <enum name="source-address">
          <description>
            <text>Include source-address in match set</text>
          </description>
        </enum>
        <enum name="destination-address">
          <description>
            <text>Include destination-address in match set</text>
          </description>
        </enum>
        <enum name="source-port">
          <description>
            <text>Include source-port in match set</text>
          </description>
        </enum>
        <enum name="destination-port">
          <description>
            <text>Include destination-port in match set</text>
          </description>
        </enum>
        <enum name="dscp">
          <description>
            <text>Include Differentiated Services (DiffServ) code point in match set</text>
          </description>
        </enum>
      </type>
    </leaf-list>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>One or more firewall terms</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="only-at-create">
        <description>
          <text>Add term only when filter is first created.</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="from">
        <description>
          <text>Match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="source-address">
          <description>
            <text>Match source IP address</text>
          </description>
          <uses name="firewall_addr_simple_object"/>
        </container>
        <container name="destination-address">
          <description>
            <text>Match destination IP address</text>
          </description>
          <uses name="firewall_addr_simple_object"/>
        </container>
        <choice name="source-port_choice">
          <case name="case_1">
            <container name="source-port">
              <description>
                <text>Match TCP/UDP source port</text>
              </description>
              <uses name="match_simple_port_value"/>
            </container>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <container name="destination-port">
              <description>
                <text>Match TCP/UDP destination port</text>
              </description>
              <uses name="match_simple_port_value"/>
            </container>
          </case>
        </choice>
        <choice name="protocol_choice">
          <case name="case_1">
            <container name="protocol">
              <description>
                <text>Match IP protocol type</text>
              </description>
              <uses name="match_simple_protocol_value"/>
            </container>
          </case>
        </choice>
        <choice name="dscp_choice">
          <case name="case_1">
            <container name="dscp">
              <description>
                <text>Match Differentiated Services (DiffServ) code point</text>
              </description>
              <uses name="match_simple_dscp_value"/>
            </container>
          </case>
        </choice>
        <leaf name="match-terms">
          <description>
            <text>Dynamically supplied list of match criteria</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="service-accounting">
          <description>
            <text>Count the packets for service accounting</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="action-terms">
          <description>
            <text>Dynamically supplied list of actions</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <container name="routing-instance">
              <description>
                <text>Packets are directed to specified routing instance</text>
              </description>
              <leaf name="routing-instance-name">
                <description>
                  <text>Name of routing instance</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="topology">
                <description>
                  <text>Packets are directed to specified topology</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="firewall_addr_simple_object">
    <uses name="apply-advanced"/>
    <leaf name="address">
      <description>
        <text>Prefix to match</text>
      </description>
      <type name="jt:ipv4prefix"/>
    </leaf>
  </grouping>
  <grouping name="inet_service_filter">
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Service filter term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="protocol_choice">
          <case name="case_1">
            <leaf-list name="protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-options_choice">
          <case name="case_1">
            <leaf-list name="ip-options">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="any">
                  <description>
                    <text>Any IP option</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-options-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="any">
                  <description>
                    <text>Any IP option</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="esp-spi_choice">
          <case name="case_1">
            <leaf-list name="esp-spi">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="esp-spi-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="is-fragment">
          <description>
            <text>Match if packet is a fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="first-fragment">
          <description>
            <text>Match if packet is the first fragment</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="fragment-offset_choice">
          <case name="case_1">
            <leaf-list name="fragment-offset">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="fragment-offset-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="fragment-flags">
          <description>
            <text>Match fragment flags</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="tcp-flags">
          <description>
            <text>Match TCP flags (in symbolic or hex formats)</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="ah-spi_choice">
          <case name="case_1">
            <leaf-list name="ah-spi">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ah-spi-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="redirect-reason_choice">
          <case name="case_1">
            <leaf-list name="redirect-reason">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="aoc">
                  <description>
                    <text>Advice of Charge</text>
                  </description>
                </enum>
                <enum name="aolb">
                  <description>
                    <text>Advice of Low Balance</text>
                  </description>
                </enum>
                <enum name="dpi">
                  <description>
                    <text>Layer7 match required</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="redirect-reason-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="aoc">
                  <description>
                    <text>Advice of Charge</text>
                  </description>
                </enum>
                <enum name="aolb">
                  <description>
                    <text>Advice of Low Balance</text>
                  </description>
                </enum>
                <enum name="dpi">
                  <description>
                    <text>Layer7 match required</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="service">
              <description>
                <text>Forward packets to service processing</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="skip">
              <description>
                <text>Skip service processing</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="inet_simple_filter">
    <leaf name="name">
      <description>
        <text>Name of simple filter</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <status value="deprecated"/>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>One or more firewall terms</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="source-address">
          <description>
            <text>Source IP address</text>
          </description>
          <uses name="firewall_addr_simple_object"/>
        </container>
        <container name="destination-address">
          <description>
            <text>Destination IP address</text>
          </description>
          <uses name="firewall_addr_simple_object"/>
        </container>
        <choice name="protocol_choice">
          <case name="case_1">
            <container name="protocol">
              <description>
                <text>Match IP protocol type</text>
              </description>
              <uses name="match_simple_protocol_value"/>
            </container>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <container name="source-port">
              <description>
                <text>Match TCP/UDP source port</text>
              </description>
              <uses name="match_simple_port_value"/>
            </container>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <container name="destination-port">
              <description>
                <text>Match TCP/UDP destination port</text>
              </description>
              <uses name="match_simple_port_value"/>
            </container>
          </case>
        </choice>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
        </choice>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Low loss priority</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Medium-high loss priority</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Medium-low loss priority</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>High loss priority</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="discard">
          <description>
            <text>Discard the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="accept">
          <description>
            <text>Accept the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
    </list>
  </grouping>
  <grouping name="interface_set_type">
    <leaf name="name">
      <description>
        <text>Interface set name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <list name="interface-list">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Interface list</text>
      </description>
      <leaf name="name">
        <description>
          <text>Interface name</text>
        </description>
        <type name="union">
          <type name="jt:interface-wildcard"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
    </list>
  </grouping>
  <grouping name="macro-data-type">
    <leaf name="name">
      <description>
        <text>Keyword part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="value">
      <description>
        <text>Value part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_L2_flexible_mask">
    <description>
      <text>Define a flexible match</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="match-start">
      <description>
        <text>Start point to match in packet</text>
      </description>
      <type name="enumeration">
        <enum name="layer-2">
          <description>
            <text>Layer-2 match start</text>
          </description>
        </enum>
        <enum name="layer-3">
          <description>
            <text>Layer-3 match start</text>
          </description>
        </enum>
        <enum name="layer-4">
          <description>
            <text>Layer-4 match start</text>
          </description>
        </enum>
        <enum name="payload">
          <description>
            <text>Payload match start</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="byte-offset">
      <description>
        <text>Byte offset after the match start point</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-offset">
      <description>
        <text>Bit offset after the (match-start + byte) offset</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 7"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-length">
      <description>
        <text>Length of integer input (1..32 bits), Optional length of string input (1..128 bits)</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="mask-in-hex">
      <description>
        <text>Mask out bits in the packet data to be matched</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="prefix">
      <description>
        <text>Value data/string to be matched</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="flexible-mask-name">
      <description>
        <text>Select a flexible match from predefined template field</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_L2_flexible_range">
    <description>
      <text>Define a flexible match</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="match-start">
      <description>
        <text>Start point to match in packet</text>
      </description>
      <type name="enumeration">
        <enum name="layer-2">
          <description>
            <text>Layer-2 match start</text>
          </description>
        </enum>
        <enum name="layer-3">
          <description>
            <text>Layer-3 match start</text>
          </description>
        </enum>
        <enum name="layer-4">
          <description>
            <text>Layer-4 match start</text>
          </description>
        </enum>
        <enum name="payload">
          <description>
            <text>Payload match start</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="byte-offset">
      <description>
        <text>Byte offset after the match start point</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-offset">
      <description>
        <text>Bit offset after the (match-start + byte) offset</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 7"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-length">
      <description>
        <text>Length of the data to be matched in bits</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="1 .. 32"/>
        </type>
      </type>
    </leaf>
    <choice name="range_choice">
      <case name="case_1">
        <leaf name="range">
          <description>
            <text>Range of values to be matched</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="range-except">
          <description>
            <text>Range of values to be not matched</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
    </choice>
    <leaf name="flexible-range-name">
      <description>
        <text>Select a flexible match from predefined template field</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_L3_flexible_mask">
    <description>
      <text>Define a flexible match</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="match-start">
      <description>
        <text>Start point to match in packet</text>
      </description>
      <type name="enumeration">
        <enum name="layer-3">
          <description>
            <text>Layer-3 match start</text>
          </description>
        </enum>
        <enum name="layer-4">
          <description>
            <text>Layer-4 match start</text>
          </description>
        </enum>
        <enum name="payload">
          <description>
            <text>Payload match start</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="byte-offset">
      <description>
        <text>Byte offset after the match start point</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-offset">
      <description>
        <text>Bit offset after the (match-start + byte) offset</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 7"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-length">
      <description>
        <text>Length of integer input (1..32 bits), Optional length of string input (1..128 bits)</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="mask-in-hex">
      <description>
        <text>Mask out bits in the packet data to be matched</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="prefix">
      <description>
        <text>Value data/string to be matched</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="flexible-mask-name">
      <description>
        <text>Select a flexible match from predefined template field</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_L3_flexible_range">
    <description>
      <text>Define a flexible match</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="match-start">
      <description>
        <text>Start point to match in packet</text>
      </description>
      <type name="enumeration">
        <enum name="layer-3">
          <description>
            <text>Layer-3 match start</text>
          </description>
        </enum>
        <enum name="layer-4">
          <description>
            <text>Layer-4 match start</text>
          </description>
        </enum>
        <enum name="payload">
          <description>
            <text>Payload match start</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="byte-offset">
      <description>
        <text>Byte offset after the match start point</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-offset">
      <description>
        <text>Bit offset after the (match-start + byte) offset</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 7"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-length">
      <description>
        <text>Length of the data to be matched in bits</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="1 .. 32"/>
        </type>
      </type>
    </leaf>
    <choice name="range_choice">
      <case name="case_1">
        <leaf name="range">
          <description>
            <text>Range of values to be matched</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="range-except">
          <description>
            <text>Range of values to be not matched</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
    </choice>
    <leaf name="flexible-range-name">
      <description>
        <text>Select a flexible match from predefined template field</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_flags_value">
    <description>
      <text>Define a vxlan flag</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="value">
      <description>
        <text>Value data to be matched</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="mask-in-hex">
      <description>
        <text>Mask out bits in the packet data to be matched</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_interface_object">
    <leaf name="name">
      <description>
        <text>Interface to match</text>
      </description>
      <type name="union">
        <type name="jt:interface-wildcard"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="match_interface_object_oam">
    <leaf name="name">
      <description>
        <text>Interface to match</text>
      </description>
      <type name="union">
        <type name="jt:interface-wildcard"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="match_interface_set_object">
    <leaf name="name">
      <description>
        <text>Interface set to match</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_simple_dscp_value">
    <uses name="apply-advanced"/>
    <leaf name="value_keyword">
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_simple_payload_protocol_value">
    <uses name="apply-advanced"/>
    <leaf name="value_keyword">
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_simple_port_value">
    <uses name="apply-advanced"/>
    <leaf name="value_keyword">
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_simple_protocol_value">
    <uses name="apply-advanced"/>
    <leaf name="value_keyword">
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="mpls_dialer_filter">
    <description>
      <text>Define an MPLS DIALER filter</text>
    </description>
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="exp_choice">
          <case name="case_1">
            <leaf-list name="exp">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="exp-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="note">
              <description>
                <text>Interested ISDN packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="ignore">
              <description>
                <text>Non-interested ISDN packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="mpls_filter">
    <description>
      <text>Define an MPLS firewall filter</text>
    </description>
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-filter">
      <description>
        <text>Filter is physical interface filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="instance-shared">
      <description>
        <text>Filter is routing-instance shared</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="filter">
        <description>
          <text>Filter to include</text>
        </description>
        <type name="string"/>
      </leaf>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <container name="ip-version">
          <description>
            <text>Specify inner IP version</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="ipv4">
            <presence value="enable ipv4"/>
            <description>
              <text>Define L4 match items to match IPv4 packets</text>
            </description>
            <uses name="apply-advanced"/>
            <list name="protocol">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Specify inner IPv4 protocol</text>
              </description>
              <max-elements value="1"/>
              <leaf name="name">
                <description>
                  <text>IP protocol choices</text>
                </description>
                <type name="string"/>
              </leaf>
              <uses name="apply-advanced"/>
              <choice name="source-port_choice">
                <case name="case_1">
                  <leaf-list name="source-port">
                    <ordered-by value="user"/>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_2">
                  <leaf-list name="source-port-except">
                    <ordered-by value="user"/>
                    <type name="string"/>
                  </leaf-list>
                </case>
              </choice>
              <choice name="destination-port_choice">
                <case name="case_1">
                  <leaf-list name="destination-port">
                    <ordered-by value="user"/>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_2">
                  <leaf-list name="destination-port-except">
                    <ordered-by value="user"/>
                    <type name="string"/>
                  </leaf-list>
                </case>
              </choice>
            </list>
            <list name="source-address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IPv4 source address</text>
              </description>
              <uses name="firewall_addr_object"/>
            </list>
            <list name="destination-address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IPv4 destination address</text>
              </description>
              <uses name="firewall_addr_object"/>
            </list>
            <list name="source-prefix-list">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IPv4 source prefixes in named list</text>
              </description>
              <uses name="firewall_prefix_list"/>
            </list>
            <list name="destination-prefix-list">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IPv4 destination prefixes in named list</text>
              </description>
              <uses name="firewall_prefix_list"/>
            </list>
          </container>
          <container name="ipv6">
            <presence value="enable ipv6"/>
            <description>
              <text>Define L3/L4 match items to match IPv6 packets</text>
            </description>
            <uses name="apply-advanced"/>
            <list name="protocol">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Specify inner IPv6 next-header</text>
              </description>
              <max-elements value="1"/>
              <leaf name="name">
                <description>
                  <text>IP protocol choices</text>
                </description>
                <type name="string"/>
              </leaf>
              <uses name="apply-advanced"/>
              <choice name="source-port_choice">
                <case name="case_1">
                  <leaf-list name="source-port">
                    <ordered-by value="user"/>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_2">
                  <leaf-list name="source-port-except">
                    <ordered-by value="user"/>
                    <type name="string"/>
                  </leaf-list>
                </case>
              </choice>
              <choice name="destination-port_choice">
                <case name="case_1">
                  <leaf-list name="destination-port">
                    <ordered-by value="user"/>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_2">
                  <leaf-list name="destination-port-except">
                    <ordered-by value="user"/>
                    <type name="string"/>
                  </leaf-list>
                </case>
              </choice>
            </list>
            <list name="source-address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IPv6 source address</text>
              </description>
              <uses name="firewall_addr6_object"/>
            </list>
            <list name="destination-address">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IPv6 destination address</text>
              </description>
              <uses name="firewall_addr6_object"/>
            </list>
            <list name="source-prefix-list">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IPv6 source prefixes in named list</text>
              </description>
              <uses name="firewall_prefix_list"/>
            </list>
            <list name="destination-prefix-list">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Match IPv6 destination prefixes in named list</text>
              </description>
              <uses name="firewall_prefix_list"/>
            </list>
          </container>
        </container>
        <list name="label">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>MPLS label bits</text>
          </description>
          <leaf name="name">
            <description>
              <text>Range of values between 0 and 1048575 in decimal or hexadecimal</text>
            </description>
            <type name="string"/>
          </leaf>
          <uses name="apply-advanced"/>
        </list>
        <choice name="exp_choice">
          <case name="case_1">
            <leaf-list name="exp">
              <ordered-by value="user"/>
              <description>
                <text>Range of values between 0 and 7 in decimal, binary or hex</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="exp-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values between 0 and 7 in decimal, binary or hex</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="interface">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface name</text>
          </description>
          <uses name="match_interface_object"/>
        </list>
        <list name="interface-set">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface in set</text>
          </description>
          <uses name="match_interface_set_object"/>
        </list>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ttl_choice">
          <case name="case_1"/>
          <case name="case_2">
            <leaf-list name="ttl-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="flex-mask_choice">
          <case name="case_1">
            <container name="flexible-match-mask">
              <description>
                <text>Match flexible mask</text>
              </description>
              <presence value="enable flexible-match-mask"/>
              <uses name="match_mpls_flexible_mask"/>
            </container>
          </case>
        </choice>
        <choice name="flex-range_choice">
          <case name="case_1">
            <container name="flexible-match-range">
              <description>
                <text>Match flexible range</text>
              </description>
              <presence value="enable flexible-match-range"/>
              <uses name="match_mpls_flexible_range"/>
            </container>
          </case>
        </choice>
        <choice name="policy-map_choice">
          <case name="case_1">
            <leaf-list name="policy-map">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="policy-map-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="single-packet-rate">
                    <description>
                      <text>Name of single-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="two-packet-rate">
                    <description>
                      <text>Name of two-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_3">
            <leaf name="hierarchical-policer">
              <description>
                <text>Name of hierarchical policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="policy-map-choice">
          <case name="case_1">
            <leaf name="clear-policy-map">
              <description>
                <text>Clear the policy marking</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="policy-map">
              <description>
                <text>Policy map action</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="mplscnt">
          <case name="case_1">
            <leaf name="traffic-class-count">
              <description>
                <text>Count the packet in the named traffic-class counter</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="count">
              <description>
                <text>Count the packet in the named counter</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Classify packet to loss-priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror-instance">
          <description>
            <text>Port-mirror the packet to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="packet-mode">
          <description>
            <text>Bypass flow mode for the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <container name="encapsulate">
              <presence value="enable encapsulate"/>
              <description>
                <text>Send to a tunnel</text>
              </description>
              <leaf name="tunnel-end-point">
                <description>
                  <text>Name of the tunnel end point</text>
                </description>
                <type name="string"/>
              </leaf>
            </container>
          </case>
          <case name="case_2">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_4">
            <leaf name="next">
              <description>
                <text>Continue to next term in a filter</text>
              </description>
              <type name="enumeration">
                <enum name="term">
                  <description>
                    <text>Continue to next term in a filter</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
    </list>
  </grouping>
  <grouping name="match_mpls_flexible_mask">
    <description>
      <text>Define a flexible match</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="match-start">
      <description>
        <text>Start point to match in packet</text>
      </description>
      <type name="enumeration">
        <enum name="layer-3">
          <description>
            <text>Layer-3 match start</text>
          </description>
        </enum>
        <enum name="payload">
          <description>
            <text>Payload match start</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="byte-offset">
      <description>
        <text>Byte offset after the match start point</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-offset">
      <description>
        <text>Bit offset after the (match-start + byte) offset</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 7"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-length">
      <description>
        <text>Length of integer input (1..32 bits), Optional length of string input (1..128 bits)</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="mask-in-hex">
      <description>
        <text>Mask out bits in the packet data to be matched</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="prefix">
      <description>
        <text>Value data/string to be matched</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="flexible-mask-name">
      <description>
        <text>Select a flexible match from predefined template field</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="match_mpls_flexible_range">
    <description>
      <text>Define a flexible match</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="match-start">
      <description>
        <text>Start point to match in packet</text>
      </description>
      <type name="enumeration">
        <enum name="layer-3">
          <description>
            <text>Layer-3 match start</text>
          </description>
        </enum>
        <enum name="payload">
          <description>
            <text>Payload match start</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="byte-offset">
      <description>
        <text>Byte offset after the match start point</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-offset">
      <description>
        <text>Bit offset after the (match-start + byte) offset</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 7"/>
        </type>
      </type>
    </leaf>
    <leaf name="bit-length">
      <description>
        <text>Length of the data to be matched in bits</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="1 .. 32"/>
        </type>
      </type>
    </leaf>
    <choice name="range_choice">
      <case name="case_1">
        <leaf name="range">
          <description>
            <text>Range of values to be matched</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="range-except">
          <description>
            <text>Range of values to be not matched</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
    </choice>
    <leaf name="flexible-range-name">
      <description>
        <text>Select a flexible match from predefined template field</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="prefix_action">
    <leaf name="name">
      <description>
        <text>Prefix action name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="policer">
      <description>
        <text>Police the packet using a set of named policer</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="count">
      <description>
        <text>Enable counters</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="filter-specific">
      <description>
        <text>Filter specific, else term specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="subnet-prefix-length">
      <description>
        <text>Prefix length for the total address range</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 32"/>
        </type>
      </type>
    </leaf>
    <choice name="source_or_dest">
      <case name="case_1">
        <leaf name="source-prefix-length">
          <description>
            <text>Source prefix range</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 32"/>
            </type>
          </type>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="destination-prefix-length">
          <description>
            <text>Destination prefix range</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 32"/>
            </type>
          </type>
        </leaf>
      </case>
    </choice>
  </grouping>
  <grouping name="three-color-policer-type">
    <description>
      <text>Three-color policer</text>
    </description>
    <leaf name="name">
      <description>
        <text>Policer name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="filter-specific">
      <description>
        <text>Three color policer is filter-specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="logical-interface-policer">
      <description>
        <text>Policer is logical interface policer</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-policer">
      <description>
        <text>Policer is physical interface policer</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="shared-bandwidth-policer">
      <description>
        <text>Share policer bandwidth among bundle links</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="action">
      <description>
        <text>Action for three-color policer</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="loss-priority">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Loss priority for packet</text>
        </description>
        <uses name="three-color-policer-action"/>
      </list>
    </container>
    <choice name="rate-type-choice">
      <case name="case_1">
        <container name="single-rate">
          <description>
            <text>Single-rate policer</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="mode-choice">
            <case name="case_1">
              <leaf name="color-blind">
                <description>
                  <text>Color-blind mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="color-aware">
                <description>
                  <text>Color-aware mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <leaf name="committed-information-rate">
            <description>
              <text>Bandwidth allowed for committed traffic</text>
            </description>
            <units name="bits per second"/>
            <type name="string"/>
          </leaf>
          <leaf name="committed-burst-size">
            <description>
              <text>Burst size allowed for committed traffic</text>
            </description>
            <units name="bytes"/>
            <type name="string"/>
          </leaf>
          <leaf name="excess-burst-size">
            <description>
              <text>Burst size allowed for excess traffic</text>
            </description>
            <units name="bytes"/>
            <type name="string"/>
          </leaf>
        </container>
      </case>
      <case name="case_2">
        <container name="single-packet-rate">
          <presence value="enable single-packet-rate"/>
          <description>
            <text>Single-rate packet policer</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="mode-choice">
            <case name="case_1">
              <leaf name="color-blind">
                <description>
                  <text>Color-blind mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="color-aware">
                <description>
                  <text>Color-aware mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <leaf name="committed-information-pps">
            <description>
              <text>PPS allowed for committed traffic</text>
            </description>
            <units name="packets per second"/>
            <type name="string"/>
          </leaf>
          <leaf name="committed-packet-burst">
            <description>
              <text>Packet burst allowed for committed traffic</text>
            </description>
            <units name="packets"/>
            <type name="string"/>
          </leaf>
          <leaf name="excess-packet-burst">
            <description>
              <text>Packet burst allowed for excess traffic</text>
            </description>
            <units name="packets"/>
            <type name="string"/>
          </leaf>
        </container>
      </case>
      <case name="case_3">
        <container name="two-rate">
          <presence value="enable two-rate"/>
          <description>
            <text>Two-rate policer</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="mode-choice">
            <case name="case_1">
              <leaf name="color-blind">
                <description>
                  <text>Color-blind mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="color-aware">
                <description>
                  <text>Color-aware mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <leaf name="committed-information-rate">
            <description>
              <text>Bandwidth allowed for committed traffic</text>
            </description>
            <units name="bits per second"/>
            <type name="string"/>
          </leaf>
          <leaf name="committed-burst-size">
            <description>
              <text>Burst size allowed for committed traffic  </text>
            </description>
            <units name="bytes"/>
            <type name="string"/>
          </leaf>
          <leaf name="peak-information-rate">
            <description>
              <text>Bandwidth allowed for peak traffic</text>
            </description>
            <units name="bits per second"/>
            <type name="string"/>
          </leaf>
          <leaf name="peak-burst-size">
            <description>
              <text>Burst size allowed for peak traffic  </text>
            </description>
            <units name="bytes"/>
            <type name="string"/>
          </leaf>
          <container name="aggregate-policing">
            <presence value="enable aggregate-policing"/>
            <description>
              <text>Configure Aggregate Policer</text>
            </description>
            <uses name="apply-advanced"/>
            <list name="policer">
              <key value="name"/>
              <ordered-by value="user"/>
              <description>
                <text>Two-color policer to be used as aggregate</text>
              </description>
              <max-elements value="1"/>
              <leaf name="name">
                <description>
                  <text>Name of two-color policer to use to aggregate police</text>
                </description>
                <type name="string"/>
              </leaf>
              <uses name="apply-advanced"/>
              <leaf name="aggregate-sharing-mode">
                <description>
                  <text>Hierarchical Metering model</text>
                </description>
                <type name="enumeration">
                  <enum name="hybrid">
                    <description>
                      <text>Child policer CIR rates are guaranteed rates and PIR rate are peak rates for member flow</text>
                    </description>
                  </enum>
                </type>
              </leaf>
            </list>
          </container>
        </container>
      </case>
      <case name="case_4">
        <container name="two-packet-rate">
          <presence value="enable two-packet-rate"/>
          <description>
            <text>Two-rate packet policer</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="mode-choice">
            <case name="case_1">
              <leaf name="color-blind">
                <description>
                  <text>Color-blind mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="color-aware">
                <description>
                  <text>Color-aware mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <leaf name="committed-information-pps">
            <description>
              <text>PPS allowed for committed traffic</text>
            </description>
            <units name="packets per second"/>
            <type name="string"/>
          </leaf>
          <leaf name="committed-packet-burst">
            <description>
              <text>Packet burst allowed for committed traffic  </text>
            </description>
            <units name="packets"/>
            <type name="string"/>
          </leaf>
          <leaf name="peak-information-pps">
            <description>
              <text>PPS allowed for peak traffic</text>
            </description>
            <units name="packets per second"/>
            <type name="string"/>
          </leaf>
          <leaf name="peak-packet-burst">
            <description>
              <text>Packet burst allowed for peak traffic  </text>
            </description>
            <units name="packets"/>
            <type name="string"/>
          </leaf>
        </container>
      </case>
    </choice>
  </grouping>
  <grouping name="three-color-policer-action">
    <description>
      <text>Action for three-color policer</text>
    </description>
    <leaf name="name">
      <description>
        <text>Loss priority for packet</text>
      </description>
      <type name="enumeration">
        <enum name="high">
          <description>
            <text>High loss priority</text>
          </description>
        </enum>
      </type>
    </leaf>
    <uses name="apply-advanced"/>
    <container name="then">
      <description>
        <text>Action to take if the rate limits are exceeded</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="discard">
        <description>
          <text>Discard the packet</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="tunnel_end_point">
    <description>
      <text>Define a tunnel end point</text>
    </description>
    <leaf name="name">
      <description>
        <text>Tunnel end-point identifier (ASCII string)</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <choice name="l3-protocol">
      <case name="case_1">
        <container name="ipv6">
          <presence value="enable ipv6"/>
          <description>
            <text>Enter an IPv6 tunnel</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="source-address">
            <description>
              <text>Tunnel source address</text>
            </description>
            <type name="jt:ipv6addr"/>
          </leaf>
          <leaf name="destination-address">
            <description>
              <text>Tunnel destination address</text>
            </description>
            <type name="jt:ipv6prefix"/>
          </leaf>
        </container>
      </case>
      <case name="case_2">
        <container name="ipv4">
          <presence value="enable ipv4"/>
          <description>
            <text>Enter an IPv4 tunnel</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="source-address">
            <description>
              <text>Tunnel source address</text>
            </description>
            <type name="jt:ipv4addr"/>
          </leaf>
          <leaf name="destination-address">
            <description>
              <text>Tunnel destination address</text>
            </description>
            <type name="jt:ipv4prefix"/>
          </leaf>
        </container>
      </case>
    </choice>
    <choice name="tunnel-protocol">
      <case name="case_1">
        <container name="gre">
          <presence value="enable gre"/>
          <description>
            <text>Tunnel is GRE</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="key">
            <description>
              <text>Key for authentication</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
      </case>
      <case name="case_2">
        <container name="gre-in-udp">
          <presence value="enable gre-in-udp"/>
          <description>
            <text>Tunnel is GRE-in-UDP</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="source-port">
            <description>
              <text>UDP source port</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 65535"/>
              </type>
            </type>
          </leaf>
          <leaf name="destination-port">
            <description>
              <text>UDP destination port</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 65535"/>
              </type>
            </type>
          </leaf>
          <leaf name="key">
            <description>
              <text>GRE key for authentication</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
      </case>
    </choice>
  </grouping>
  <grouping name="vpls_filter">
    <description>
      <text>Define an VPLS firewall filter</text>
    </description>
    <leaf name="name">
      <description>
        <text>Filter name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf-list name="accounting-profile">
      <ordered-by value="user"/>
      <description>
        <text>Accounting profile name</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="interface-specific">
      <description>
        <text>Defined counters are interface specific</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="physical-interface-filter">
      <description>
        <text>Filter is physical interface filter</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="instance-shared">
      <description>
        <text>Filter is routing-instance shared</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="term">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a firewall term</text>
      </description>
      <leaf name="name">
        <description>
          <text>Term name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="filter">
        <description>
          <text>Filter to include</text>
        </description>
        <type name="string"/>
      </leaf>
      <container name="from">
        <description>
          <text>Define match criteria</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="interface-group_choice">
          <case name="case_1">
            <leaf-list name="interface-group">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="interface-group-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ether-type_choice">
          <case name="case_1">
            <leaf-list name="ether-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ether-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="vlan-ether-type_choice">
          <case name="case_1">
            <leaf-list name="vlan-ether-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="vlan-ether-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="destination-mac-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Destination MAC address</text>
          </description>
          <uses name="firewall_mac_addr_object"/>
        </list>
        <list name="source-mac-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Source MAC address</text>
          </description>
          <uses name="firewall_mac_addr_object"/>
        </list>
        <choice name="forwarding-class_choice">
          <case name="case_1">
            <leaf-list name="forwarding-class">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="forwarding-class-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="loss-priority_choice">
          <case name="case_1">
            <leaf-list name="loss-priority">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="loss-priority-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-id_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-id">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-id-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-1p-priority_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-1p-priority">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-1p-priority-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="user-vlan-id_choice">
          <case name="case_1">
            <leaf-list name="user-vlan-id">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="user-vlan-id-except">
              <ordered-by value="user"/>
              <description>
                <text>Range of values</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="user-vlan-1p-priority_choice">
          <case name="case_1">
            <leaf-list name="user-vlan-1p-priority">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="user-vlan-1p-priority-except">
              <ordered-by value="user"/>
              <description>
                <text>802.1p priority value 0-7</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="learn-vlan-dei_choice">
          <case name="case_1">
            <leaf-list name="learn-vlan-dei">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="learn-vlan-dei-except">
              <ordered-by value="user"/>
              <description>
                <text>DEI value 0-1</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1"/>
                </type>
              </type>
            </leaf-list>
          </case>
        </choice>
        <choice name="traffic-type_choice">
          <case name="case_1">
            <leaf-list name="traffic-type">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="broadcast">
                  <description>
                    <text>Packets with broadcast ethernet address</text>
                  </description>
                </enum>
                <enum name="multicast">
                  <description>
                    <text>Packets with multicast ethernet address</text>
                  </description>
                </enum>
                <enum name="unknown-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has not been learnt</text>
                  </description>
                </enum>
                <enum name="known-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has been learnt</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="traffic-type-except">
              <ordered-by value="user"/>
              <type name="enumeration">
                <enum name="broadcast">
                  <description>
                    <text>Packets with broadcast ethernet address</text>
                  </description>
                </enum>
                <enum name="multicast">
                  <description>
                    <text>Packets with multicast ethernet address</text>
                  </description>
                </enum>
                <enum name="unknown-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has not been learnt</text>
                  </description>
                </enum>
                <enum name="known-unicast">
                  <description>
                    <text>Packets for which destination ethernet address has been learnt</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
          </case>
        </choice>
        <list name="ip-source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="ip-destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <list name="ip-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination address</text>
          </description>
          <uses name="firewall_addr_object"/>
        </list>
        <choice name="ip-protocol_choice">
          <case name="case_1">
            <leaf-list name="ip-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="dscp_choice">
          <case name="case_1">
            <leaf-list name="dscp">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="dscp-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ip-precedence_choice">
          <case name="case_1">
            <leaf-list name="ip-precedence">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ip-precedence-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="source-port_choice">
          <case name="case_1">
            <leaf-list name="source-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="source-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="destination-port_choice">
          <case name="case_1">
            <leaf-list name="destination-port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="destination-port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="port_choice">
          <case name="case_1">
            <leaf-list name="port">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="port-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <leaf name="tcp-flags">
          <description>
            <text>Match TCP flags</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="icmp-type_choice">
          <case name="case_1">
            <leaf-list name="icmp-type">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-type-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="icmp-code_choice">
          <case name="case_1">
            <leaf-list name="icmp-code">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="icmp-code-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="interface">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface name</text>
          </description>
          <uses name="match_interface_object"/>
        </list>
        <list name="interface-set">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match interface in set</text>
          </description>
          <uses name="match_interface_set_object"/>
        </list>
        <list name="source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ipv6-destination-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 destination address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="ipv6-source-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 source address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <list name="ipv6-address">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPv6 address</text>
          </description>
          <uses name="firewall_addr6_object"/>
        </list>
        <choice name="ipv6-next-header_choice">
          <case name="case_1">
            <leaf-list name="ipv6-next-header">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-next-header-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ipv6-payload-protocol_choice">
          <case name="case_1">
            <leaf-list name="ipv6-payload-protocol">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-payload-protocol-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <choice name="ipv6-traffic-class_choice">
          <case name="case_1">
            <leaf-list name="ipv6-traffic-class">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="ipv6-traffic-class-except">
              <ordered-by value="user"/>
              <type name="string"/>
            </leaf-list>
          </case>
        </choice>
        <list name="ipv6-source-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPV6 source prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ipv6-destination-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IPV6 destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <list name="ipv6-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Match IP source or destination prefixes in named list</text>
          </description>
          <uses name="firewall_prefix_list"/>
        </list>
        <choice name="flex-mask_choice">
          <case name="case_1">
            <container name="flexible-match-mask">
              <description>
                <text>Match flexible mask</text>
              </description>
              <presence value="enable flexible-match-mask"/>
              <uses name="match_L2_flexible_mask"/>
            </container>
          </case>
        </choice>
        <choice name="flex-range_choice">
          <case name="case_1">
            <container name="flexible-match-range">
              <description>
                <text>Match flexible range</text>
              </description>
              <presence value="enable flexible-match-range"/>
              <uses name="match_L2_flexible_range"/>
            </container>
          </case>
        </choice>
        <choice name="policy-map_choice">
          <case name="case_1">
            <leaf-list name="policy-map">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="policy-map-except">
              <ordered-by value="user"/>
              <description>
                <text>String name</text>
              </description>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </leaf-list>
          </case>
        </choice>
      </container>
      <container name="then">
        <description>
          <text>Action to take if the 'from' condition is matched</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="policer-choice">
          <case name="case_1">
            <leaf name="policer">
              <description>
                <text>Name of policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <container name="three-color-policer">
              <description>
                <text>Police the packet using a three-color-policer</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="type-choice">
                <case name="case_1">
                  <leaf name="single-rate">
                    <description>
                      <text>Name of single-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_2">
                  <leaf name="single-packet-rate">
                    <description>
                      <text>Name of single-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_3">
                  <leaf name="two-rate">
                    <description>
                      <text>Name of two-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
                <case name="case_4">
                  <leaf name="two-packet-rate">
                    <description>
                      <text>Name of two-packet-rate three-color policer to use to rate-limit traffic</text>
                    </description>
                    <type name="string"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </case>
          <case name="case_3">
            <leaf name="hierarchical-policer">
              <description>
                <text>Name of hierarchical policer to use to rate-limit traffic</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="policy-map-choice">
          <case name="case_1">
            <leaf name="clear-policy-map">
              <description>
                <text>Clear the policy marking</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="policy-map">
              <description>
                <text>Policy map action</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <leaf name="count">
          <description>
            <text>Count the packet in the named counter</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="loss-priority">
          <description>
            <text>Packet's loss priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Classify packet to forwarding class</text>
          </description>
          <type name="string"/>
        </leaf>
        <choice name="designation">
          <case name="case_1">
            <leaf name="accept">
              <description>
                <text>Accept the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="discard">
              <description>
                <text>Discard the packet</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_3">
            <leaf name="next">
              <description>
                <text>Continue to next term in a filter</text>
              </description>
              <type name="enumeration">
                <enum name="term">
                  <description>
                    <text>Continue to next term in a filter</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="port-mirror-instance">
          <description>
            <text>Port-mirror the packet to specified instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="port-mirror">
          <description>
            <text>Port-mirror the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="next-hop-group">
          <description>
            <text>Use specified next-hop group</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="sample">
          <description>
            <text>Sample the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="log">
          <description>
            <text>Log the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="syslog">
          <description>
            <text>System log (syslog) information about the packet</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
    </list>
  </grouping>
</module>
