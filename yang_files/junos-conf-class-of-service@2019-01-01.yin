<?xml version="1.0" encoding="UTF-8"?>
<module name="junos-conf-class-of-service"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:jc-class-of-service="http://yang.juniper.net/junos/conf/class-of-service"
        xmlns:jt="http://yang.juniper.net/junos/common/types"
        xmlns:jc="http://yang.juniper.net/junos/conf/root">
  <namespace uri="http://yang.juniper.net/junos/conf/class-of-service"/>
  <prefix value="jc-class-of-service"/>
  <import module="junos-common-types">
    <prefix value="jt"/>
    <revision-date date="2019-01-01"/>
  </import>
  <import module="junos-conf-root">
    <prefix value="jc"/>
    <revision-date date="2019-01-01"/>
  </import>
  <organization>
    <text>Juniper Networks, Inc.</text>
  </organization>
  <contact>
    <text>yang-support@juniper.net</text>
  </contact>
  <description>
    <text>Junos class-of-service configuration module</text>
  </description>
  <revision date="2019-01-01">
    <description>
      <text>Junos: 19.4R1.9</text>
    </description>
  </revision>
  <augment target-node="/jc:configuration">
    <uses name="class-of-service-group"/>
  </augment>
  <augment target-node="/jc:configuration/jc:groups">
    <uses name="class-of-service-group"/>
  </augment>
  <grouping name="class-of-service-group">
    <container name="class-of-service">
      <description>
        <text>Class-of-service configuration</text>
      </description>
      <uses name="juniper-class-of-service-options"/>
    </container>
  </grouping>
  <grouping name="juniper-class-of-service-options">
    <uses name="apply-advanced"/>
    <container name="classifiers">
      <description>
        <text>Classify incoming packets based on code point value</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point classifier</text>
        </description>
        <leaf name="name">
          <description>
            <text>Classifier name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this classifier in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Define a classification of code point aliases</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Classify code points to a loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Code points to classify to loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Code points to classify to loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Code points to classify to loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Code points to classify to loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf-list name="code-points">
              <ordered-by value="user"/>
              <description>
                <text>List of code point aliases and/or bit strings</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </list>
        </list>
      </list>
      <list name="dscp-ipv6">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point classifier IPv6</text>
        </description>
        <leaf name="name">
          <description>
            <text>Classifier name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this classifier in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Define a classification of code point aliases</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Classify code points to a loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Code points to classify to loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Code points to classify to loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Code points to classify to loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Code points to classify to loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf-list name="code-points">
              <ordered-by value="user"/>
              <description>
                <text>List of code point aliases and/or bit strings</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </list>
        </list>
      </list>
      <list name="exp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>MPLS EXP classifier</text>
        </description>
        <leaf name="name">
          <description>
            <text>Classifier name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this classifier in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Define a classification of code point aliases</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Classify code points to a loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Code points to classify to loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Code points to classify to loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Code points to classify to loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Code points to classify to loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf-list name="code-points">
              <ordered-by value="user"/>
              <description>
                <text>List of code point aliases and/or bit strings</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </list>
        </list>
      </list>
      <list name="ieee-802.1">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1 classifier</text>
        </description>
        <leaf name="name">
          <description>
            <text>Classifier name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this classifier in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Define a classification of code point aliases</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Classify code points to a loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Code points to classify to loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Code points to classify to loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Code points to classify to loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Code points to classify to loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf-list name="code-points">
              <ordered-by value="user"/>
              <description>
                <text>List of code point aliases and/or bit strings</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </list>
        </list>
      </list>
      <list name="inet-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv4 precedence classifier</text>
        </description>
        <leaf name="name">
          <description>
            <text>Classifier name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this classifier in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Define a classification of code point aliases</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Classify code points to a loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Code points to classify to loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Code points to classify to loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Code points to classify to loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Code points to classify to loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf-list name="code-points">
              <ordered-by value="user"/>
              <description>
                <text>List of code point aliases and/or bit strings</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </list>
        </list>
      </list>
      <list name="ieee-802.1ad">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1ad (DEI) classifier</text>
        </description>
        <leaf name="name">
          <description>
            <text>Classifier name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this classifier in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Define a classification of code point aliases</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Classify code points to a loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Code points to classify to loss priority low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Code points to classify to loss priority high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Code points to classify to loss priority medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Code points to classify to loss priority medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf-list name="code-points">
              <ordered-by value="user"/>
              <description>
                <text>List of code point aliases and/or bit strings</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </list>
        </list>
      </list>
    </container>
    <container name="traffic-class-map">
      <description>
        <text>Packet input priority map based on incoming packets code point</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="inet-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv4 precedence traffic-class-map</text>
        </description>
        <leaf name="name">
          <description>
            <text>Traffic-class-map name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="traffic-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Map code points to a input packet priority</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="real-time">
                <description>
                  <text>Code points map to traffic-class real-time</text>
                </description>
              </enum>
              <enum name="network-control">
                <description>
                  <text>Code points map to traffic-class network-control</text>
                </description>
              </enum>
              <enum name="best-effort">
                <description>
                  <text>Code points map to traffic-class best-effort</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="code-points">
            <ordered-by value="user"/>
            <description>
              <text>List of code point aliases and/or bit strings</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
      </list>
      <list name="dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point traffic-class-map</text>
        </description>
        <leaf name="name">
          <description>
            <text>Traffic-class-map name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="traffic-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Map code points to a input packet priority</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="real-time">
                <description>
                  <text>Code points map to traffic-class real-time</text>
                </description>
              </enum>
              <enum name="network-control">
                <description>
                  <text>Code points map to traffic-class network-control</text>
                </description>
              </enum>
              <enum name="best-effort">
                <description>
                  <text>Code points map to traffic-class best-effort</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="code-points">
            <ordered-by value="user"/>
            <description>
              <text>List of code point aliases and/or bit strings</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
      </list>
      <list name="exp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>MPLS EXP traffic-class-map</text>
        </description>
        <leaf name="name">
          <description>
            <text>Traffic-class-map name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="traffic-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Map code points to a input packet priority</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="real-time">
                <description>
                  <text>Code points map to traffic-class real-time</text>
                </description>
              </enum>
              <enum name="network-control">
                <description>
                  <text>Code points map to traffic-class network-control</text>
                </description>
              </enum>
              <enum name="best-effort">
                <description>
                  <text>Code points map to traffic-class best-effort</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="code-points">
            <ordered-by value="user"/>
            <description>
              <text>List of code point aliases and/or bit strings</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
      </list>
      <list name="ieee-802.1">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1 traffic-class-map</text>
        </description>
        <leaf name="name">
          <description>
            <text>Traffic-class-map name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="traffic-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Map code points to a input packet priority</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="real-time">
                <description>
                  <text>Code points map to traffic-class real-time</text>
                </description>
              </enum>
              <enum name="network-control">
                <description>
                  <text>Code points map to traffic-class network-control</text>
                </description>
              </enum>
              <enum name="best-effort">
                <description>
                  <text>Code points map to traffic-class best-effort</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="code-points">
            <ordered-by value="user"/>
            <description>
              <text>List of code point aliases and/or bit strings</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
      </list>
      <list name="ieee-802.1ad">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1ad (DEI) traffic-class-map</text>
        </description>
        <leaf name="name">
          <description>
            <text>Traffic-class-map name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="traffic-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Map code points to a input packet priority</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="real-time">
                <description>
                  <text>Code points map to traffic-class real-time</text>
                </description>
              </enum>
              <enum name="network-control">
                <description>
                  <text>Code points map to traffic-class network-control</text>
                </description>
              </enum>
              <enum name="best-effort">
                <description>
                  <text>Code points map to traffic-class best-effort</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="code-points">
            <ordered-by value="user"/>
            <description>
              <text>List of code point aliases and/or bit strings</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
      </list>
    </container>
    <list name="policy-map">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Policy-map describing the packet marking rule</text>
      </description>
      <max-elements value="65535"/>
      <leaf name="name">
        <description>
          <text>Policy-map name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="inet-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv4 INET-Precedence Policy-map code point</text>
        </description>
        <leaf name="name">
          <description>
            <text>Optional flag to specify marking behavior</text>
          </description>
          <type name="enumeration">
            <enum name="proto-ip">
              <description>
                <text>Default marking behavior</text>
              </description>
            </enum>
            <enum name="proto-mpls">
              <description>
                <text>Enable IP header marking for IP-&gt;MPLS packet</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="code-point">
          <description>
            <text>List of code point aliases and/or bit strings</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv4 Differentiated Services Policy-map code point</text>
        </description>
        <leaf name="name">
          <description>
            <text>Optional flag to specify marking behavior</text>
          </description>
          <type name="enumeration">
            <enum name="proto-ip">
              <description>
                <text>Default marking behavior</text>
              </description>
            </enum>
            <enum name="proto-mpls">
              <description>
                <text>Enable IP header marking for IP-&gt;MPLS packet</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="code-point">
          <description>
            <text>List of code point aliases and/or bit strings</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="dscp-ipv6">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv6 Differentiated Services Policy-map code point</text>
        </description>
        <leaf name="name">
          <description>
            <text>Optional flag to specify marking behavior</text>
          </description>
          <type name="enumeration">
            <enum name="proto-ip">
              <description>
                <text>Default marking behavior</text>
              </description>
            </enum>
            <enum name="proto-mpls">
              <description>
                <text>Enable IP header marking for IP-&gt;MPLS packet</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="code-point">
          <description>
            <text>List of code point aliases and/or bit strings</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="exp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>MPLS EXP Policy-map code point</text>
        </description>
        <leaf name="name">
          <description>
            <text>Optional flag to specify marking behavior</text>
          </description>
          <type name="enumeration">
            <enum name="all-label">
              <description>
                <text>Default marking behavior</text>
              </description>
            </enum>
            <enum name="outer-label">
              <description>
                <text>Marking on only outer MPLS label</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="code-point">
          <description>
            <text>List of code point aliases and/or bit strings</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="ieee-802.1">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1 Policy-map code point</text>
        </description>
        <leaf name="name">
          <description>
            <text>Optional flag to specify marking behavior</text>
          </description>
          <type name="enumeration">
            <enum name="outer">
              <description>
                <text>Marking on outer VLAN tag</text>
              </description>
            </enum>
            <enum name="outer-and-inner">
              <description>
                <text>Marking on both outer and inner VLAN tag</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="code-point">
          <description>
            <text>List of code point aliases and/or bit strings</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="ieee-802.1ad">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1ad Policy-map code point</text>
        </description>
        <leaf name="name">
          <description>
            <text>Optional flag to specify marking behavior</text>
          </description>
          <type name="enumeration">
            <enum name="outer">
              <description>
                <text>Marking on outer VLAN tag</text>
              </description>
            </enum>
            <enum name="outer-and-inner">
              <description>
                <text>Marking on both outer and inner VLAN tag</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="code-point">
          <description>
            <text>IEEE-802.1ad (DEI) Policy-map code point</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
    </list>
    <list name="forwarding-class-map">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Map forwarding class to queue number for interfaces</text>
      </description>
      <leaf name="name">
        <description>
          <text>Interface specific forwarding class name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="class">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Forwarding class</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name of forwarding class</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="queue-num">
          <description>
            <text>Queue number</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32"/>
          </type>
        </leaf>
        <leaf name="restricted-queue">
          <description>
            <text>Restricted queue number</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 3"/>
            </type>
          </type>
        </leaf>
      </list>
    </list>
    <container name="loss-priority-maps">
      <description>
        <text>Map loss priority of incoming packets based on code point value</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="frame-relay-de">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Frame relay discard eligible bit loss priority map</text>
        </description>
        <leaf name="name">
          <description>
            <text>Loss priority map name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="loss-priority">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Map code points to a loss priority</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="low">
                <description>
                  <text>Code points to classify to low loss priority</text>
                </description>
              </enum>
              <enum name="high">
                <description>
                  <text>Code points to classify to high loss priority</text>
                </description>
              </enum>
              <enum name="medium-low">
                <description>
                  <text>Code points to classify to medium-low loss priority</text>
                </description>
              </enum>
              <enum name="medium-high">
                <description>
                  <text>Code points to classify to medium-high loss priority</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="code-points">
            <ordered-by value="user"/>
            <description>
              <text>List of bit strings</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
      </list>
    </container>
    <container name="loss-priority-rewrites">
      <description>
        <text>Rewrite code point of outgoing packet based on loss priority</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="frame-relay-de">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Frame relay discard eligible bit loss priority rewrite</text>
        </description>
        <leaf name="name">
          <description>
            <text>Loss priority rewrite name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="loss-priority">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Code point marking based on loss priority</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="low">
                <description>
                  <text>Marking when loss priority is low</text>
                </description>
              </enum>
              <enum name="high">
                <description>
                  <text>Marking when loss priority is high</text>
                </description>
              </enum>
              <enum name="medium-low">
                <description>
                  <text>Marking when loss priority is medium-low</text>
                </description>
              </enum>
              <enum name="medium-high">
                <description>
                  <text>Marking when loss priority is medium-high</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="code-point">
            <description>
              <text>Code point aliases or bit string</text>
            </description>
            <type name="string"/>
          </leaf>
        </list>
      </list>
    </container>
    <container name="code-point-aliases">
      <description>
        <text>Mapping of code point aliases to bit strings</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point aliases</text>
        </description>
        <leaf name="name">
          <description>
            <text>DSCP alias name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="bits">
          <description>
            <text>DSCP 6-bit pattern</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="dscp-ipv6">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point aliases IPv6</text>
        </description>
        <leaf name="name">
          <description>
            <text>DSCP IPv6 alias name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="bits">
          <description>
            <text>DSCP 6-bit pattern</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="exp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>MPLS EXP code point aliases</text>
        </description>
        <leaf name="name">
          <description>
            <text>EXP alias name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="bits">
          <description>
            <text>EXP 3-bit pattern</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="ieee-802.1">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1 code point aliases</text>
        </description>
        <leaf name="name">
          <description>
            <text>IEEE-802.1 alias name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="bits">
          <description>
            <text>IEEE-802.1 3-bit pattern</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="inet-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv4 precedence code point aliases</text>
        </description>
        <leaf name="name">
          <description>
            <text>IPv4 precedence alias name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="bits">
          <description>
            <text>IPv4 precedence 3-bit pattern</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="ieee-802.1ad">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1ad (DEI) code point aliases</text>
        </description>
        <leaf name="name">
          <description>
            <text>IEEE-802.1ad (DEI) alias name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="bits">
          <description>
            <text>IEEE-802.1ad (DEI) 4-bit pattern</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
      <list name="inet6-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv6 precedence code point aliases</text>
        </description>
        <leaf name="name">
          <description>
            <text>IPv6 precedence alias name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="bits">
          <description>
            <text>IPv6 precedence 3-bit pattern</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
    </container>
    <container name="translation-table">
      <description>
        <text>Translation table</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="to-802.1p-from-dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>DSCP to 802.1 translation table</text>
        </description>
        <leaf name="name">
          <description>
            <text>Translation table name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="to-code-point">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>IEEE 802.1 code point</text>
          </description>
          <leaf name="name">
            <description>
              <text>IEEE 802.1 code point</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf-list name="from-code-points">
            <ordered-by value="user"/>
            <description>
              <text>DSCP code point</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
      </list>
      <list name="to-inet-precedence-from-inet-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>INET PRECEDENCE to INET PRECEDENCE translation table</text>
        </description>
        <leaf name="name">
          <description>
            <text>Translation table name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="to-code-point">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>INET PRECEDENCE code point</text>
          </description>
          <leaf name="name">
            <description>
              <text>INET PRECEDENCE code point</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf-list name="from-code-points">
            <ordered-by value="user"/>
            <description>
              <text>INET PRECEDENCE code point</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="\*"/>
              </type>
              <type name="string"/>
            </type>
          </leaf-list>
        </list>
      </list>
      <list name="to-dscp-from-dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>DSCP to DSCP translation table</text>
        </description>
        <leaf name="name">
          <description>
            <text>Translation table name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="to-code-point">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>DSCP code point</text>
          </description>
          <leaf name="name">
            <description>
              <text>DSCP code point</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf-list name="from-code-points">
            <ordered-by value="user"/>
            <description>
              <text>DSCP code point</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="\*"/>
              </type>
              <type name="string"/>
            </type>
          </leaf-list>
        </list>
      </list>
      <list name="to-dscp-ipv6-from-dscp-ipv6">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>DSCP-IPV6 to DSCP-IPV6 translation table</text>
        </description>
        <leaf name="name">
          <description>
            <text>Translation table name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="to-code-point">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>DSCP-IPV6 code point</text>
          </description>
          <leaf name="name">
            <description>
              <text>DSCP-IPV6 code point</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf-list name="from-code-points">
            <ordered-by value="user"/>
            <description>
              <text>DSCP-IPV6 code point</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="\*"/>
              </type>
              <type name="string"/>
            </type>
          </leaf-list>
        </list>
      </list>
      <list name="to-exp-from-exp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>EXP to EXP translation table</text>
        </description>
        <leaf name="name">
          <description>
            <text>Translation table name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="to-code-point">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>EXP code point</text>
          </description>
          <leaf name="name">
            <description>
              <text>EXP code point</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf-list name="from-code-points">
            <ordered-by value="user"/>
            <description>
              <text>EXP code point</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="\*"/>
              </type>
              <type name="string"/>
            </type>
          </leaf-list>
        </list>
      </list>
    </container>
    <container name="host-outbound-traffic">
      <description>
        <text>Classify and mark host traffic to forwarding engine</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="forwarding-class">
        <description>
          <text>Classification of host traffic to forwarding engine</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="dscp-code-point">
        <description>
          <text>Static DSCP code point of egress host traffic</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="override-firewall">
        <description>
          <text>Override firewall filter actions for RE generated traffic</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="translation-table">
        <description>
          <text>Translation table for host outbound packets</text>
        </description>
        <leaf name="to-802.1p-from-dscp">
          <description>
            <text>DSCP to 802.1 translation table</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </container>
      <container name="tcp">
        <presence value="enable tcp"/>
        <description>
          <text>Settings for host outbound TCP packets</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="raise-internet-control-priority">
          <description>
            <text>Place packets with IP Precedence set to Internet control into Q3 (network-control)</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <container name="ieee-802.1">
        <presence value="enable ieee-802.1"/>
        <description>
          <text>Mark IEEE 802.1p for host output traffic</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="rewrite-rules">
          <description>
            <text>Mark IEEE 802.1p for host outbound traffic using rewrite-rules</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="default">
          <description>
            <text>Mark IEEE 802.1p for host outbound traffic default value</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
      <container name="protocol">
        <description>
          <text>Settings for specific host outbound protocol packets</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="isis-over-gre">
          <description>
            <text>Settings for ISIS over GRE packets</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="dscp-code-point">
            <description>
              <text>Static DSCP code point of egress host traffic</text>
            </description>
            <type name="string"/>
          </leaf>
        </container>
      </container>
    </container>
    <list name="drop-profiles">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Random Early Drop (RED) data point map</text>
      </description>
      <leaf name="name">
        <description>
          <text>Drop profile name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="fill-level">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Fill-level value of data point</text>
        </description>
        <leaf name="name">
          <description>
            <text>Percentage the queue is full</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 100"/>
            </type>
          </type>
        </leaf>
        <leaf name="drop-probability">
          <description>
            <text>Probability packet will be dropped</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 100"/>
            </type>
          </type>
        </leaf>
      </list>
      <container name="interpolate">
        <description>
          <text>Data points interpolated</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="fill-level">
          <ordered-by value="user"/>
          <description>
            <text>Data points for queue full percentage</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 100"/>
            </type>
          </type>
        </leaf-list>
        <leaf-list name="drop-probability">
          <ordered-by value="user"/>
          <description>
            <text>Data points for packet drop probability</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 100"/>
            </type>
          </type>
        </leaf-list>
      </container>
    </list>
    <list name="adaptive-shapers">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define the list of trigger types and associated rates</text>
      </description>
      <leaf name="name">
        <description>
          <text>Adaptive shaper name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="trigger">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>List of trigger types</text>
        </description>
        <leaf name="name">
          <type name="enumeration">
            <enum name="becn">
              <description>
                <text>Backward explicit congestion notification</text>
              </description>
            </enum>
          </type>
        </leaf>
        <container name="shaping-rate">
          <description>
            <text>Shaping rate for the trigger</text>
          </description>
          <choice name="rate-choice">
            <case name="case_1">
              <leaf name="absolute-rate">
                <description>
                  <text>Shaping rate as an absolute rate</text>
                </description>
                <units name="bits per second"/>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="percent">
                <description>
                  <text>Shaping rate as a percentage</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="1 .. 100"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
      </list>
    </list>
    <list name="virtual-channels">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define the list of virtual channels</text>
      </description>
      <leaf name="name">
        <description>
          <text>Virtual channel name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
    </list>
    <list name="virtual-channel-groups">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define list of virtual channel groups</text>
      </description>
      <leaf name="name">
        <description>
          <text>Virtual channel group name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="channel">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Configure virtual channel for this group</text>
        </description>
        <leaf name="name">
          <description>
            <text>Virtual channel group name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="scheduler-map">
          <description>
            <text>Scheduler map applied to this virtual channel</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <container name="shaping-rate">
          <description>
            <text>Shaping rate for the trigger</text>
          </description>
          <choice name="rate-choice">
            <case name="case_1">
              <leaf name="absolute-rate">
                <description>
                  <text>Adaptive shaping rate as an absolute rate</text>
                </description>
                <units name="bits per second"/>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="percent">
                <description>
                  <text>Adaptive shaping rate as a percentage</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="1 .. 100"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <leaf name="default">
          <description>
            <text>Default virtual channel</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
    </list>
    <leaf name="copy-plp-all">
      <description>
        <text>Turn on loss-precedence copying including IP multicast</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="tri-color">
      <description>
        <text>Enable tricolor marking</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="non-strict-priority-scheduling">
      <description>
        <text>Enable non-strict-priority scheduling</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="shared-buffer">
      <description>
        <text>Shared buffer configuration</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="percent">
        <description>
          <text>Percentage of shared buffer to be used</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="5 .. 100"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="forwarding-classes">
      <description>
        <text>One or more mappings of forwarding class to queue number</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="class">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Forwarding class to map to queue number</text>
        </description>
        <max-elements value="16"/>
        <leaf name="name">
          <description>
            <text>Name of forwarding class</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="queue-num">
          <description>
            <text>Queue number</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32"/>
          </type>
        </leaf>
        <leaf name="priority">
          <description>
            <text>Fabric priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Low fabric priority</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>High fabric priority</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="policing-priority">
          <description>
            <text>Policing priority for hierarchical policers</text>
          </description>
          <type name="enumeration">
            <enum name="normal">
              <description>
                <text>Normal policing priority</text>
              </description>
            </enum>
            <enum name="premium">
              <description>
                <text>Premium policing priority</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="no-loss">
          <description>
            <text>This is no traffic loss class</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
      <list name="queue">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Queue number to map to forwarding class</text>
        </description>
        <leaf name="name">
          <description>
            <text>Queue number</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32"/>
          </type>
        </leaf>
        <leaf name="class-name">
          <description>
            <text>Forwarding class name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="priority">
          <description>
            <text>Fabric priority</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Fabric priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Fabric priority high</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="policing-priority">
          <description>
            <text>Policing priority for hierarchical policers</text>
          </description>
          <type name="enumeration">
            <enum name="normal">
              <description>
                <text>Normal policing priority</text>
              </description>
            </enum>
            <enum name="premium">
              <description>
                <text>Premium policing priority</text>
              </description>
            </enum>
          </type>
        </leaf>
      </list>
    </container>
    <container name="restricted-queues">
      <description>
        <text>Map forwarding classes to restricted queues</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="forwarding-class">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Forwarding class to map to a restricted queue</text>
        </description>
        <leaf name="name">
          <description>
            <text>Forwarding class name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="rqueue-num">
          <description>
            <text>Restricted queue number</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 3"/>
            </type>
          </type>
        </leaf>
      </list>
    </container>
    <list name="traffic-control-profiles">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Traffic shaping and scheduling profiles</text>
      </description>
      <leaf name="name">
        <description>
          <text>Traffic control profile name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="scheduler-map">
        <description>
          <text>Mapping of forwarding classes to packet schedulers</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="strict-priority-scheduler">
        <description>
          <text>Enable strict priority scheduler.</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="atm-service">
        <description>
          <text>ATM service category</text>
        </description>
        <type name="enumeration">
          <enum name="cbr">
            <description>
              <text>Constant bit rate</text>
            </description>
          </enum>
          <enum name="rtvbr">
            <description>
              <text>Real-time variable bit rate</text>
            </description>
          </enum>
          <enum name="nrtvbr">
            <description>
              <text>Non-real-time variable bit rate</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="peak-rate">
        <description>
          <text>ATM Peak Cell Rate (PCR)</text>
        </description>
        <units name="cps"/>
        <type name="string"/>
      </leaf>
      <leaf name="sustained-rate">
        <description>
          <text>ATM Sustained Cell Rate (SCR)</text>
        </description>
        <units name="cps"/>
        <type name="string"/>
      </leaf>
      <leaf name="max-burst-size">
        <description>
          <text>ATM Maximum Burst Size (MBS)</text>
        </description>
        <units name="cells"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint64">
            <range value="1 .. 4000"/>
          </type>
        </type>
      </leaf>
      <container name="shaping-rate">
        <description>
          <text>Shaping rate</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate as an absolute rate</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="overhead-accounting">
        <description>
          <text>Overhead accounting</text>
        </description>
        <leaf name="mode">
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="bytes">
          <description>
            <text>Byte adjust value</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="int32">
              <range value="-120 .. 124"/>
            </type>
          </type>
        </leaf>
        <leaf name="frame-mode-bytes">
          <description>
            <text>Overhead bytes when in frame-mode</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="int32">
              <range value="-120 .. 124"/>
            </type>
          </type>
        </leaf>
        <leaf name="cell-mode-bytes">
          <description>
            <text>Overhead bytes when in cell-mode</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="int32">
              <range value="-120 .. 124"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="shaping-rate-priority-strict-high">
        <description>
          <text>Shaping rate for strict high priority traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="shaping-rate-priority-high">
        <description>
          <text>Shaping rate for high priority traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="shaping-rate-priority-medium">
        <description>
          <text>Shaping rate for medium priority traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="shaping-rate-priority-medium-low">
        <description>
          <text>Shaping rate for medium low priority traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="shaping-rate-priority-low">
        <description>
          <text>Shaping rate for low priority traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="shaping-rate-excess-high">
        <description>
          <text>Shaping rate for excess high traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="shaping-rate-excess-low">
        <description>
          <text>Shaping rate for excess low traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="shaping-rate-excess-medium-high">
        <description>
          <text>Shaping rate for excess medium-high traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="shaping-rate-excess-medium-low">
        <description>
          <text>Shaping rate for excess medium-low traffic</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate in bits per second</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="guaranteed-rate">
        <description>
          <text>Guaranteed rate</text>
        </description>
        <choice name="guaranteed_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Guaranteed rate as an absolute rate</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Guaranteed rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Guaranteed rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="excess-rate">
        <description>
          <text>Excess bandwidth sharing proportion</text>
        </description>
        <choice name="excess_rate_choice">
          <case name="case_1">
            <leaf name="proportion">
              <description>
                <text>Excess rate as a proportion</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1000"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Excess rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="excess-rate-high">
        <description>
          <text>Excess bandwidth sharing for excess-high priority</text>
        </description>
        <choice name="excess_rate_choice">
          <case name="case_1">
            <leaf name="proportion">
              <description>
                <text>Excess rate as a proportion</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1000"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Excess rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="excess-rate-medium-high">
        <description>
          <text>Excess bandwidth sharing for excess-medium-high priority</text>
        </description>
        <choice name="excess_rate_choice">
          <case name="case_1">
            <leaf name="proportion">
              <description>
                <text>Excess rate as a proportion</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1000"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Excess rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="excess-rate-low">
        <description>
          <text>Excess bandwidth sharing for excess-low priority</text>
        </description>
        <choice name="excess_rate_choice">
          <case name="case_1">
            <leaf name="proportion">
              <description>
                <text>Excess rate as a proportion</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1000"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Excess rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="excess-rate-medium-low">
        <description>
          <text>Excess bandwidth sharing for excess-medium-low priority</text>
        </description>
        <choice name="excess_rate_choice">
          <case name="case_1">
            <leaf name="proportion">
              <description>
                <text>Excess rate as a proportion</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1000"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Excess rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <choice name="delay_buffer_sizing">
        <case name="case_1">
          <container name="delay-buffer-rate">
            <description>
              <text>Delay buffer rate</text>
            </description>
            <choice name="delay_buffer_rate_choice">
              <case name="case_1">
                <leaf name="rate">
                  <description>
                    <text>Delay buffer rate as an absolute rate</text>
                  </description>
                  <units name="bits per second"/>
                  <type name="string"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="percent">
                  <description>
                    <text>Delay buffer rate as a percentage</text>
                  </description>
                  <type name="union">
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                    <type name="uint32">
                      <range value="1 .. 100"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="cps">
                  <description>
                    <text>Delay buffer rate as an absolute cells per second rate</text>
                  </description>
                  <units name="cells per second"/>
                  <type name="string"/>
                </leaf>
              </case>
            </choice>
          </container>
        </case>
      </choice>
      <container name="adjust-minimum">
        <description>
          <text>Minimum shaping-rate when adjusted</text>
        </description>
        <leaf name="rate">
          <description>
            <text>Minimum shaping rate in bits per second</text>
          </description>
          <units name="bits per second"/>
          <type name="string"/>
        </leaf>
      </container>
    </list>
    <list name="forwarding-class-sets">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Forwarding class sets</text>
      </description>
      <leaf name="name">
        <description>
          <text>Forwarding class set</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="class">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Forwarding class</text>
        </description>
        <leaf name="name">
          <description>
            <text>Class name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
      </list>
    </list>
    <list name="congestion-notification-profile">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Congestion notification profile</text>
      </description>
      <leaf name="name">
        <description>
          <text>Congestion notification name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="input">
        <description>
          <text>Input congestion notification components</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="cable-length">
          <description>
            <text>Length of cable in metre</text>
          </description>
          <units name="metre"/>
          <type name="string"/>
        </leaf>
        <container name="ieee-802.1">
          <description>
            <text>IEEE 802.1 code point</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="code-point">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>IEEE 802.1 code point</text>
            </description>
            <max-elements value="8"/>
            <leaf name="name">
              <description>
                <text>IEEE 802.1 code point</text>
              </description>
              <type name="string"/>
            </leaf>
            <uses name="apply-advanced"/>
            <leaf name="pfc">
              <description>
                <text>PFC</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="mru">
              <description>
                <text>Max Receive Size of packet for this code point</text>
              </description>
              <units name="bytes"/>
              <type name="string"/>
            </leaf>
            <choice name="qfc-control">
              <case name="case_1"/>
              <case name="case_2">
                <container name="qcn">
                  <presence value="enable qcn"/>
                  <description>
                    <text>QCN</text>
                  </description>
                  <uses name="apply-advanced"/>
                  <container name="defense-mode-edge">
                    <description>
                      <text>Choose the defense mode edge</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <container name="alternate-priority">
                      <description>
                        <text>Choose the alternate priority for defense mode edge</text>
                      </description>
                      <uses name="apply-advanced"/>
                      <leaf name="bits">
                        <description>
                          <text>IEEE 802.1 code point</text>
                        </description>
                        <type name="string"/>
                      </leaf>
                    </container>
                  </container>
                </container>
              </case>
            </choice>
          </list>
        </container>
        <container name="dscp">
          <description>
            <text>DSCP code point</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="code-point">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>DSCP code point</text>
            </description>
            <max-elements value="64"/>
            <leaf name="name">
              <description>
                <text>DSCP code point</text>
              </description>
              <type name="string"/>
            </leaf>
            <uses name="apply-advanced"/>
            <leaf name="pfc">
              <description>
                <text>PFC</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="mru">
              <description>
                <text>Max Receive Size of packet for this code point</text>
              </description>
              <units name="bytes"/>
              <type name="string"/>
            </leaf>
          </list>
        </container>
      </container>
      <container name="output">
        <description>
          <text>Output congestion notification components</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Forwarding class</text>
          </description>
          <max-elements value="16"/>
          <leaf name="name">
            <description>
              <text>Class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <leaf name="remove-cntag">
            <description>
              <text>Remove cntag for this forwarding class</text>
            </description>
            <type name="empty"/>
          </leaf>
        </list>
        <container name="ieee-802.1">
          <description>
            <text>IEEE 802.1 code point</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="code-point">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>IEEE 802.1 code point</text>
            </description>
            <max-elements value="8"/>
            <leaf name="name">
              <description>
                <text>IEEE 802.1 code point</text>
              </description>
              <type name="string"/>
            </leaf>
            <uses name="apply-advanced"/>
            <leaf-list name="flow-control-queue">
              <ordered-by value="user"/>
              <description>
                <text>Flow control queue( set of queues)</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 7"/>
                </type>
              </type>
            </leaf-list>
          </list>
        </container>
      </container>
    </list>
    <container name="system-defaults">
      <description>
        <text>System defaults</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="classifiers">
        <description>
          <text>System wide Classifiers applied to incoming packets</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="exp">
          <description>
            <text>EXP classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="traffic-control-profiles">
        <description>
          <text>Default traffic control profiles</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="interface-set-input">
          <description>
            <text>Default input traffic control profile for dynamic interface-set</text>
          </description>
          <leaf name="profile-name">
            <description>
              <text>Name of traffic control profile</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="interface-set-output">
          <description>
            <text>Default output traffic control profile for dynamic interface-set</text>
          </description>
          <leaf name="profile-name">
            <description>
              <text>Name of traffic control profile</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
      </container>
    </container>
    <container name="dynamic-class-of-service-options">
      <description>
        <text>Dynamic class-of-service options</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="vendor-specific-tags">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Enable vendor specific tags</text>
        </description>
        <leaf name="name">
          <type name="enumeration">
            <enum name="actual-data-rate-downstream">
              <description>
                <text>Enable shaping based on actual-data-rate-downstream</text>
              </description>
            </enum>
            <enum name="access-loop-encapsulation">
              <description>
                <text>Enable overhead-accounting based on access-loop-encapsulation</text>
              </description>
            </enum>
            <enum name="apply-to-interface-set">
              <description>
                <text>Apply adjusted rate to the underlying interface-set</text>
              </description>
            </enum>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
      </list>
    </container>
    <container name="interfaces">
      <description>
        <text>Apply class-of-service options to interfaces</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="interface-set">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Interface set traffic-control-profile attachment</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name of the interface set</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="internal-node">
          <description>
            <text>Internal node</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="input-excess-bandwidth-share">
          <description>
            <text>Input Excess bandwidth sharing policy</text>
          </description>
          <choice name="input_excess_bandwidth_share">
            <case name="case_1">
              <leaf name="proportional">
                <description>
                  <text>Maximum Queue Bandwidth</text>
                </description>
                <units name="bits per second"/>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="equal">
                <description>
                  <text>Equal sharing of excess bandwidth</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="excess-bandwidth-share">
          <description>
            <text>Output Excess bandwidth sharing policy</text>
          </description>
          <choice name="output_excess_bandwidth_share">
            <case name="case_1">
              <leaf name="proportional">
                <description>
                  <text>Maximum Queue Bandwidth</text>
                </description>
                <units name="bits per second"/>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="equal">
                <description>
                  <text>Equal sharing of excess bandwidth</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="input-traffic-control-profile">
          <description>
            <text>Input traffic control profile for the interface set</text>
          </description>
          <leaf name="profile-name">
            <description>
              <text>Name of the input traffic control profile associated with the interface set</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="input-traffic-control-profile-remaining">
          <description>
            <text>Input traffic control profile for the remaining traffic on an interface set</text>
          </description>
          <leaf name="profile-name">
            <description>
              <text>Name of the input traffic control profile associated with the remaining traffic for the interface set</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="output-traffic-control-profile">
          <description>
            <text>Output traffic control profile for the interface set</text>
          </description>
          <leaf name="profile-name">
            <description>
              <text>Name of the output traffic control profile associated with the interface set</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="output-traffic-control-profile-remaining">
          <description>
            <text>Output traffic control profile for the remaining traffic on an interface set</text>
          </description>
          <leaf name="profile-name">
            <description>
              <text>Name of the output traffic control profile associated with the remaining traffic for the interface set</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
      </list>
      <list name="interface">
        <key value="name"/>
        <uses name="cos_interfaces_type"/>
      </list>
    </container>
    <list name="routing-instances">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Apply CoS options to routing instances with VRF table label</text>
      </description>
      <leaf name="name">
        <description>
          <text>Routing instance name (or wildcard)</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="classifiers">
        <description>
          <text>Classifiers applied to incoming packets</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="no-default">
          <description>
            <text>Do not apply default classifiers to this interface</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="exp">
          <description>
            <text>EXP classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="ieee-802.1">
          <description>
            <text>IEEE-802.1 classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf name="encapsulated">
            <description>
              <text>Inner or outer ethernet header</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="vlan-tag">
            <description>
              <text>VLAN tag used for classification</text>
            </description>
            <type name="enumeration">
              <enum name="outer">
                <description>
                  <text>Classification based on outer VLAN tag</text>
                </description>
              </enum>
              <enum name="inner">
                <description>
                  <text>Classification based on inner VLAN tag</text>
                </description>
              </enum>
            </type>
          </leaf>
        </container>
        <container name="dscp">
          <description>
            <text>Differentiated Services code point classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="dscp-ipv6">
          <description>
            <text>Differentiated Services code point classifier IPv6</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="rewrite-rules">
        <description>
          <text>Rewrite rules applied to outgoing packets</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="_802_rewrites">
          <case name="case_1">
            <container name="ieee-802.1">
              <description>
                <text>IEEE-802.1 rewrite rule</text>
              </description>
              <leaf name="rewrite-rule-name">
                <description>
                  <text>Name of rewrite rule to be applied</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="default"/>
                  </type>
                  <type name="string">
                    <length value="1 .. 64"/>
                  </type>
                </type>
              </leaf>
              <leaf name="encapsulated">
                <description>
                  <text>Inner ethernet header</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="vlan-tag">
                <description>
                  <text>One or more VLAN tags to which rewrite rule applies</text>
                </description>
                <type name="enumeration">
                  <enum name="outer">
                    <description>
                      <text>Rewrite rule applies to outer VLAN tag</text>
                    </description>
                  </enum>
                  <enum name="outer-and-inner">
                    <description>
                      <text>Rewrite rule applies to outer and inner VLAN tag</text>
                    </description>
                  </enum>
                </type>
              </leaf>
            </container>
          </case>
          <case name="case_2">
            <container name="ieee-802.1ad">
              <description>
                <text>IEEE-802.1ad (DEI) rewrite rule</text>
              </description>
              <leaf name="rewrite-rule-name">
                <description>
                  <text>Name of rewrite rule to be applied</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="default"/>
                  </type>
                  <type name="string">
                    <length value="1 .. 64"/>
                  </type>
                </type>
              </leaf>
              <leaf name="encapsulated">
                <description>
                  <text>Inner ethernet header</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="vlan-tag">
                <description>
                  <text>One or more VLAN tags to which rewrite rule applies</text>
                </description>
                <type name="enumeration">
                  <enum name="outer">
                    <description>
                      <text>Rewrite rule applies to outer VLAN tag</text>
                    </description>
                  </enum>
                  <enum name="outer-and-inner">
                    <description>
                      <text>Rewrite rule applies to outer and inner VLAN tag</text>
                    </description>
                  </enum>
                </type>
              </leaf>
            </container>
          </case>
        </choice>
      </container>
      <container name="policy-map">
        <description>
          <text>Policy-map describing the packet marking rule</text>
        </description>
        <leaf name="policy-map-name">
          <description>
            <text>Name of Policy-map to be applied</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
    </list>
    <container name="rewrite-rules">
      <description>
        <text>Write code point value of outgoing packets</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rewrite rule name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this rewrite rule in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Markings for named forwarding class</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Code point marking based on loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Marking when loss priority is low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Marking when loss priority is high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Marking when loss priority is medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Marking when loss priority is medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="code-point">
              <description>
                <text>Code point aliases or bit string</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
        </list>
      </list>
      <list name="dscp-ipv6">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point rewrite rule IPv6</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rewrite rule name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this rewrite rule in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Markings for named forwarding class</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Code point marking based on loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Marking when loss priority is low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Marking when loss priority is high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Marking when loss priority is medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Marking when loss priority is medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="code-point">
              <description>
                <text>Code point aliases or bit string</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
        </list>
      </list>
      <list name="exp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>MPLS EXP rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rewrite rule name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this rewrite rule in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Markings for named forwarding class</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Code point marking based on loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Marking when loss priority is low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Marking when loss priority is high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Marking when loss priority is medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Marking when loss priority is medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="code-point">
              <description>
                <text>Code point aliases or bit string</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
        </list>
      </list>
      <list name="ieee-802.1">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1 rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rewrite rule name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this rewrite rule in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Markings for named forwarding class</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Code point marking based on loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Marking when loss priority is low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Marking when loss priority is high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Marking when loss priority is medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Marking when loss priority is medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="code-point">
              <description>
                <text>Code point aliases or bit string</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
        </list>
      </list>
      <list name="inet-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv4 precedence rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rewrite rule name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this rewrite rule in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Markings for named forwarding class</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Code point marking based on loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Marking when loss priority is low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Marking when loss priority is high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Marking when loss priority is medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Marking when loss priority is medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="code-point">
              <description>
                <text>Code point aliases or bit string</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
        </list>
      </list>
      <list name="frame-relay-de">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Frame relay discard eligible bit rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rewrite rule name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this rewrite rule in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Markings for named forwarding class</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Code point marking based on loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Marking when loss priority is low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Marking when loss priority is high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Marking when loss priority is medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Marking when loss priority is medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="code-point">
              <description>
                <text>Code point aliases or bit string</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
        </list>
      </list>
      <list name="ieee-802.1ad">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IEEE-802.1ad (DEI) rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rewrite rule name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this rewrite rule in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Markings for named forwarding class</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Code point marking based on loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Marking when loss priority is low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Marking when loss priority is high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Marking when loss priority is medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Marking when loss priority is medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="code-point">
              <description>
                <text>Code point aliases or bit string</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
        </list>
      </list>
      <list name="inet6-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv6 precedence rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Rewrite rule name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf name="import">
          <description>
            <text>Include this rewrite rule in this definition</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Markings for named forwarding class</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <list name="loss-priority">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Code point marking based on loss priority</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="low">
                  <description>
                    <text>Marking when loss priority is low</text>
                  </description>
                </enum>
                <enum name="high">
                  <description>
                    <text>Marking when loss priority is high</text>
                  </description>
                </enum>
                <enum name="medium-low">
                  <description>
                    <text>Marking when loss priority is medium-low</text>
                  </description>
                </enum>
                <enum name="medium-high">
                  <description>
                    <text>Marking when loss priority is medium-high</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="code-point">
              <description>
                <text>Code point aliases or bit string</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
        </list>
      </list>
    </container>
    <container name="fabric">
      <description>
        <text>Define CoS parameters of switch fabric</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="scheduler-map">
        <description>
          <text>Mapping of fabric traffic to packet schedulers</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="priority">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Fabric traffic priority</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="low">
                <description>
                  <text>Low priority fabric traffic</text>
                </description>
              </enum>
              <enum name="high">
                <description>
                  <text>High priority fabric traffic</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="scheduler">
            <description>
              <text>Scheduler name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </list>
      </container>
    </container>
    <list name="scheduler-maps">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Mapping of forwarding classes to packet schedulers</text>
      </description>
      <leaf name="name">
        <description>
          <text>Scheduler map name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="forwarding-class">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Forwarding class name to map to scheduler</text>
        </description>
        <leaf name="name">
          <description>
            <text>Forwarding class name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="scheduler">
          <description>
            <text>Scheduler name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </list>
    </list>
    <list name="fragmentation-maps">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Mapping of forwarding class to fragmentation options</text>
      </description>
      <leaf name="name">
        <description>
          <text>Fragmentation map name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="forwarding-class">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Forwarding class name to map to fragmentation options</text>
        </description>
        <leaf name="name">
          <description>
            <text>Forwarding class name</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <choice name="fragmentation-control">
          <case name="case_1">
            <leaf name="fragment-threshold">
              <description>
                <text>Fragmentation threshold</text>
              </description>
              <units name="bytes"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint16">
                  <range value="64 .. 9192"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="no-fragmentation">
              <description>
                <text>Don't allow fragmentation</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <leaf name="multilink-class">
          <description>
            <text>Multilink-Class assigned to the forwarding class</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint16">
              <range value="0 .. 7"/>
            </type>
          </type>
        </leaf>
        <leaf name="drop-timeout">
          <description>
            <text>Drop timeout</text>
          </description>
          <units name="milliseconds"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint16">
              <range value="0 .. 2000"/>
            </type>
          </type>
        </leaf>
      </list>
    </list>
    <list name="schedulers">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Packet schedulers</text>
      </description>
      <leaf name="name">
        <description>
          <text>Scheduler name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="transmit-rate">
        <description>
          <text>Transmit rate</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="transmit_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Transmit rate as rate</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Transmit rate as percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_3">
            <container name="remainder">
              <presence value="enable remainder"/>
              <description>
                <text>Remainder available</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="percent">
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 100"/>
                  </type>
                </type>
              </leaf>
            </container>
          </case>
        </choice>
        <choice name="rate_limit_choice">
          <case name="case_1">
            <leaf name="exact">
              <description>
                <text>Enforce exact transmit rate</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="rate-limit">
              <description>
                <text>Enforce rate limit that uses policer</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="excess-rate">
        <description>
          <text>Excess bandwidth sharing proportion</text>
        </description>
        <choice name="excess_rate_choice">
          <case name="case_1">
            <leaf name="proportion">
              <description>
                <text>Excess rate as a proportion</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 1000"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Excess rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="shaping-rate">
        <description>
          <text>Shaping rate</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate as an absolute rate</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
        <leaf name="burst-size">
          <description>
            <text>Shaping rate burst size</text>
          </description>
          <units name="bytes"/>
          <type name="string"/>
        </leaf>
      </container>
      <container name="buffer-size">
        <description>
          <text>Queue transmission buffer size</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="buffer_size_choice">
          <case name="case_1">
            <leaf name="percent">
              <description>
                <text>Buffer size as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <container name="remainder">
              <presence value="enable remainder"/>
              <description>
                <text>Remainder of buffer size available</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="percent">
                <default value="0"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 100"/>
                  </type>
                </type>
              </leaf>
            </container>
          </case>
          <case name="case_3">
            <leaf name="shared">
              <description>
                <text>Shared buffer allocation</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_4">
            <leaf name="temporal">
              <description>
                <text>Buffer size as temporal value</text>
              </description>
              <units name="microseconds"/>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <choice name="buffer_limit">
          <case name="case_1">
            <leaf name="exact">
              <description>
                <text>Enforce exact buffer size</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="buffer-partition">
          <presence value="enable buffer-partition"/>
          <description>
            <text>Partition buffer size among multicast and unicast</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="multicast">
            <presence value="enable multicast"/>
            <description>
              <text>Specify multicast fraction of reserved buffer</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="percent">
              <default value="50"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 100"/>
                </type>
              </type>
            </leaf>
          </container>
        </container>
      </container>
      <container name="shared-buffer">
        <description>
          <text>Queue transmission shared-buffer</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="maximum">
          <presence value="enable maximum"/>
          <description>
            <text>Control the amount of shared buffer a given queue can consume</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="percent">
            <description>
              <text>Maximum shared buffer size as a percentage</text>
            </description>
            <default value="0"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 100"/>
              </type>
            </type>
          </leaf>
          <container name="multicast">
            <presence value="enable multicast"/>
            <description>
              <text>Control the amount of shared buffer mcast pkts consume</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="percent">
              <description>
                <text>Maximum shared buffer size as a percentage</text>
              </description>
              <default value="0"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 100"/>
                </type>
              </type>
            </leaf>
          </container>
        </container>
      </container>
      <leaf name="priority">
        <description>
          <text>Scheduling priority</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="excess-priority">
        <description>
          <text>Priority in the excess region</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <list name="drop-profile-map">
        <key value="loss-priority protocol"/>
        <ordered-by value="user"/>
        <description>
          <text>Assign drop profile to a loss priority and protocol</text>
        </description>
        <leaf name="loss-priority">
          <description>
            <text>Loss priority value</text>
          </description>
          <type name="enumeration">
            <enum name="low">
              <description>
                <text>Loss priority low</text>
              </description>
            </enum>
            <enum name="high">
              <description>
                <text>Loss priority high</text>
              </description>
            </enum>
            <enum name="medium-low">
              <description>
                <text>Loss priority medium-low</text>
              </description>
            </enum>
            <enum name="medium-high">
              <description>
                <text>Loss priority medium-high</text>
              </description>
            </enum>
            <enum name="any">
              <description>
                <text>Ignore loss priority when assigning drop profile</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="protocol">
          <description>
            <text>Protocol type</text>
          </description>
          <type name="enumeration">
            <enum name="tcp">
              <description>
                <text>TCP protocol only</text>
              </description>
            </enum>
            <enum name="non-tcp">
              <description>
                <text>Non-TCP protocols only</text>
              </description>
            </enum>
            <enum name="any">
              <description>
                <text>Ignore protocol type when assigning drop profile</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="drop-profile">
          <description>
            <text>Name of drop profile to apply</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </list>
      <leaf name="explicit-congestion-notification">
        <description>
          <text>Enable or Disable Explicit Congestion Notification</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="adjust-percent">
        <description>
          <text>Percent of a bandwidth adjustment applied to a queue</text>
        </description>
        <units name="percent"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 100"/>
          </type>
        </type>
      </leaf>
      <leaf name="adjust-minimum">
        <description>
          <text>Minimum shaping-rate when adjusted</text>
        </description>
        <units name="bits per second"/>
        <type name="string"/>
      </leaf>
    </list>
    <list name="adjustment-control-profiles">
      <key value="name"/>
      <description>
        <text>Adjustment control profiles</text>
      </description>
      <leaf name="name">
        <description>
          <text>Adjustment control profile name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="application">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Applications that can perform adjustments</text>
        </description>
        <leaf name="name">
          <description>
            <text>Applications that can perform adjustments</text>
          </description>
          <type name="enumeration">
            <enum name="ancp">
              <description>
                <text>Access Node Configuration Protocol</text>
              </description>
            </enum>
            <enum name="radius-coa">
              <description>
                <text>RADIUS Change of Authorization</text>
              </description>
            </enum>
            <enum name="pppoe-tags">
              <description>
                <text>Point to Point Protocol over Ethernet IA Tags</text>
              </description>
            </enum>
            <enum name="dhcp-tags">
              <description>
                <text>Dynamic Host Configuration Protocol Tags</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="priority">
          <description>
            <text>Priority for the application; 1 is the highest</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 10"/>
            </type>
          </type>
        </leaf>
        <leaf name="algorithm">
          <description>
            <text>Adjustment algorithm for the application</text>
          </description>
          <type name="enumeration">
            <enum name="adjust-less">
              <description>
                <text>Adjust if less than the configured value</text>
              </description>
            </enum>
            <enum name="adjust-less-or-equal">
              <description>
                <text>Adjust if &lt;= the configured value</text>
              </description>
            </enum>
            <enum name="adjust-greater">
              <description>
                <text>Adjust if greater than the configured value</text>
              </description>
            </enum>
            <enum name="adjust-greater-or-equal">
              <description>
                <text>Adjust if &gt;= the configured value</text>
              </description>
            </enum>
            <enum name="adjust-always">
              <description>
                <text>Adjust unconditionally</text>
              </description>
            </enum>
            <enum name="adjust-never">
              <description>
                <text>Do not perform adjustments</text>
              </description>
            </enum>
          </type>
        </leaf>
      </list>
    </list>
    <container name="traceoptions">
      <description>
        <text>Trace options for class-of-service process</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-remote-trace">
        <description>
          <text>Disable remote tracing</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="file">
        <description>
          <text>Trace file information</text>
        </description>
        <leaf name="filename">
          <description>
            <text>Name of file in which to write trace information</text>
          </description>
          <type name="string">
            <length value="1 .. 1024"/>
          </type>
        </leaf>
        <leaf name="size">
          <description>
            <text>Maximum trace file size</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="files">
          <description>
            <text>Maximum number of trace files</text>
          </description>
          <default value="3"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="2 .. 1000"/>
            </type>
          </type>
        </leaf>
        <choice name="world-readable-choice">
          <leaf name="world-readable">
            <description>
              <text>Allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-world-readable">
            <description>
              <text>Don't allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <leaf name="match">
          <description>
            <text>Regular expression for lines to be logged</text>
          </description>
          <type name="jt:regular-expression"/>
        </leaf>
      </container>
      <list name="flag">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Tracing parameters</text>
        </description>
        <leaf name="name">
          <type name="enumeration">
            <enum name="init">
              <description>
                <text>Trace initialization events</text>
              </description>
            </enum>
            <enum name="show">
              <description>
                <text>Trace show command servicing</text>
              </description>
            </enum>
            <enum name="route-socket">
              <description>
                <text>Trace route-socket events</text>
              </description>
            </enum>
            <enum name="parse">
              <description>
                <text>Trace parser processing</text>
              </description>
            </enum>
            <enum name="process">
              <description>
                <text>Trace configuration processing</text>
              </description>
            </enum>
            <enum name="util">
              <description>
                <text>Trace utilities</text>
              </description>
            </enum>
            <enum name="restart">
              <description>
                <text>Trace restart processing</text>
              </description>
            </enum>
            <enum name="snmp">
              <description>
                <text>Trace SNMP-related processing</text>
              </description>
            </enum>
            <enum name="hardware-database">
              <description>
                <text>Trace chassis hardware database related processing</text>
              </description>
            </enum>
            <enum name="asynch">
              <description>
                <text>Trace asynchronous configuration processing</text>
              </description>
            </enum>
            <enum name="dynamic">
              <description>
                <text>Trace dynamic CoS functions</text>
              </description>
            </enum>
            <enum name="cos-adjustment">
              <description>
                <text>Trace CoS rate adjustments</text>
              </description>
            </enum>
            <enum name="performance-monitor">
              <description>
                <text>Trace performance monitor counters</text>
              </description>
            </enum>
            <enum name="chassis-scheduler">
              <description>
                <text>Trace chassis stream scheduler processing</text>
              </description>
            </enum>
            <enum name="cn-util">
              <description>
                <text>Trace utilities for congestion-notification</text>
              </description>
            </enum>
            <enum name="snmp-timeouts">
              <description>
                <text>Trace SNMP COSD kernel timeouts</text>
              </description>
            </enum>
            <enum name="all">
              <description>
                <text>Trace everything</text>
              </description>
            </enum>
            <enum name="feature-capability">
              <description>
                <text>Trace feature capability</text>
              </description>
            </enum>
            <enum name="application">
              <description>
                <text>Trace Junos application programming</text>
              </description>
            </enum>
          </type>
        </leaf>
      </list>
    </container>
    <container name="forwarding-policy">
      <description>
        <text>Class-of-service forwarding policy</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="next-hop-map">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Class-of-service next-hop map</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name to identify next-hop map</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="forwarding-class">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Forwarding class from which to map</text>
          </description>
          <leaf name="name">
            <description>
              <text>Forwarding class</text>
            </description>
            <type name="string"/>
          </leaf>
          <uses name="apply-advanced"/>
          <leaf-list name="next-hop">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop identifier to which to map</text>
            </description>
            <type name="union">
              <type name="jt:ipaddr-or-interface"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf-list>
          <leaf-list name="lsp-next-hop">
            <ordered-by value="user"/>
            <description>
              <text>Regular expression for LSP next hop</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf name="non-lsp-next-hop">
            <description>
              <text>Any non-RSVP LSP next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="non-labelled-next-hop">
            <description>
              <text>Any non-labelled next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="discard">
            <description>
              <text>Discard next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </list>
        <container name="forwarding-class-default">
          <description>
            <text>Next Hop For traffic which does not meet any FC in the next-hop-map</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf-list name="next-hop">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop identifier to which to map</text>
            </description>
            <type name="union">
              <type name="jt:ipaddr-or-interface"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf-list>
          <leaf-list name="lsp-next-hop">
            <ordered-by value="user"/>
            <description>
              <text>Regular expression for LSP next hop</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf name="non-lsp-next-hop">
            <description>
              <text>Any non-RSVP LSP next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="non-labelled-next-hop">
            <description>
              <text>Any non-labelled next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="discard">
            <description>
              <text>Discard next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
      </list>
      <list name="class">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Class-of-service description</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name to identify class of service</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <container name="classification-override">
          <description>
            <text>Define classification overrides</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="forwarding-class">
            <description>
              <text>Forwarding class name</text>
            </description>
            <type name="string"/>
          </leaf>
        </container>
      </list>
    </container>
  </grouping>
  <grouping name="apply-advanced">
    <description>
      <text>Apply advanced configuration logic</text>
    </description>
    <leaf-list name="apply-groups">
      <ordered-by value="user"/>
      <description>
        <text>Groups from which to inherit configuration data</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf-list name="apply-groups-except">
      <ordered-by value="user"/>
      <description>
        <text>Don't inherit configuration data from these groups</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <list name="apply-macro">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Macro and parameters for commit script expansion</text>
      </description>
      <uses name="apply-macro-type"/>
    </list>
  </grouping>
  <grouping name="apply-macro-type">
    <description>
      <text>Macro data for commit-script expansion</text>
    </description>
    <leaf name="name">
      <description>
        <text>Name of the macro to be expanded</text>
      </description>
      <type name="string"/>
    </leaf>
    <list name="data">
      <key value="name"/>
      <uses name="macro-data-type"/>
    </list>
  </grouping>
  <grouping name="cos_interfaces_type">
    <description>
      <text>Physical interface</text>
    </description>
    <leaf name="name">
      <description>
        <text>Interface name (or wildcard)</text>
      </description>
      <type name="union">
        <type name="jt:interface-device-wildcard"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <uses name="apply-advanced"/>
    <list name="forwarding-class-set">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Map forwarding class sets to output traffic control profile</text>
      </description>
      <max-elements value="4"/>
      <leaf name="name">
        <description>
          <text>Forwarding class sets name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="output-traffic-control-profile">
        <description>
          <text>Output traffic control profile for the interface</text>
        </description>
        <leaf name="profile-name">
          <description>
            <text>Name of the output traffic control profile associated with the interface</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </container>
    </list>
    <leaf name="congestion-notification-profile">
      <description>
        <text>Congestion notification profile for the interface</text>
      </description>
      <type name="string">
        <length value="1 .. 64"/>
      </type>
    </leaf>
    <leaf name="scheduler-map">
      <description>
        <text>Output scheduler map</text>
      </description>
      <type name="string">
        <length value="1 .. 64"/>
      </type>
    </leaf>
    <leaf name="input-scheduler-map">
      <description>
        <text>Input scheduler map</text>
      </description>
      <type name="string">
        <length value="1 .. 64"/>
      </type>
    </leaf>
    <leaf name="scheduler-map-chassis">
      <description>
        <text>Scheduler map applied to chassis queues (not PIC queues)</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="derived"/>
        </type>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </type>
    </leaf>
    <leaf name="output-forwarding-class-map">
      <description>
        <text>Output forwarding class map name</text>
      </description>
      <type name="string">
        <length value="1 .. 64"/>
      </type>
    </leaf>
    <container name="shaping-rate">
      <description>
        <text>Output shaping rate</text>
      </description>
      <leaf name="rate">
        <description>
          <text>Shaping rate as an absolute rate</text>
        </description>
        <units name="bits per second"/>
        <type name="string"/>
      </leaf>
    </container>
    <container name="input-excess-bandwidth-share">
      <description>
        <text>Input Excess bandwidth sharing policy</text>
      </description>
      <choice name="input_excess_bandwidth_share">
        <case name="case_1">
          <leaf name="proportional">
            <description>
              <text>Maximum Queue Bandwidth</text>
            </description>
            <units name="bits per second"/>
            <type name="string"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="equal">
            <description>
              <text>Equal sharing of excess bandwidth</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="excess-bandwidth-share">
      <description>
        <text>Output Excess bandwidth sharing policy</text>
      </description>
      <choice name="output_excess_bandwidth_share">
        <case name="case_1">
          <leaf name="proportional">
            <description>
              <text>Maximum Queue Bandwidth</text>
            </description>
            <units name="bits per second"/>
            <type name="string"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="equal">
            <description>
              <text>Equal sharing of excess bandwidth</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="input-shaping-rate">
      <description>
        <text>Input shaping rate</text>
      </description>
      <leaf name="rate">
        <description>
          <text>Input shaping rate as an absolute rate</text>
        </description>
        <units name="bits per second"/>
        <type name="string"/>
      </leaf>
    </container>
    <container name="input-traffic-control-profile">
      <description>
        <text>Input traffic control profile</text>
      </description>
      <leaf name="profile-name">
        <description>
          <text>Name of the traffic control profile</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
    </container>
    <container name="input-traffic-control-profile-remaining">
      <description>
        <text>Input traffic control profile for remaining traffic on the ifd</text>
      </description>
      <leaf name="profile-name">
        <description>
          <text>Name of the traffic control profile</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
    </container>
    <container name="output-traffic-control-profile">
      <description>
        <text>Output traffic control profile</text>
      </description>
      <leaf name="profile-name">
        <description>
          <text>Name of the traffic control profile</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
    </container>
    <container name="output-traffic-control-profile-remaining">
      <description>
        <text>Output traffic control profile for remaining traffic on the ifd</text>
      </description>
      <leaf name="profile-name">
        <description>
          <text>Name of the traffic control profile</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
    </container>
    <container name="member-link-scheduler">
      <description>
        <text>Scheduler parameter model for member link</text>
      </description>
      <choice name="model">
        <case name="case_1">
          <leaf name="scale">
            <description>
              <text>Scale scheduler parameters on aggregate interface</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="replicate">
            <description>
              <text>Copy scheduler parameters from aggregate interface</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="traffic-class-map">
      <description>
        <text>Packet code point to input priority mapping</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="inet-precedence">
        <description>
          <text>IPv4 precedence code point traffic-class-map</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="traffic-class-map-name">
          <description>
            <text>Name of traffic-class-map to be applied on IFD</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </container>
      <container name="dscp">
        <description>
          <text>Differentiated services code point traffic-class-map</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="traffic-class-map-name">
          <description>
            <text>Name of traffic-class-map to be applied on IFD</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </container>
      <container name="exp">
        <description>
          <text>MPLS experimental code point traffic-class-map</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="traffic-class-map-name">
          <description>
            <text>Name of traffic-class-map to be applied on IFD</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </container>
      <container name="ieee-802.1">
        <description>
          <text>IEEE-802.1 code point traffic-class-map</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="traffic-class-map-name">
          <description>
            <text>Name of traffic-class-map to be applied on IFD</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="vlan-tag">
          <description>
            <text>VLAN tag used for traffic-class-map</text>
          </description>
          <type name="enumeration">
            <enum name="outer">
              <description>
                <text>Traffic-class-map based on outer VLAN tag</text>
              </description>
            </enum>
            <enum name="inner">
              <description>
                <text>Traffic-class-map based on inner VLAN tag</text>
              </description>
            </enum>
          </type>
        </leaf>
      </container>
      <container name="ieee-802.1ad">
        <description>
          <text>IEEE-802.1ad (DEI) code point traffic-class-map</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="traffic-class-map-name">
          <description>
            <text>Name of traffic-class-map to be applied on IFD</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="vlan-tag">
          <description>
            <text>VLAN tag used for traffic-class-map</text>
          </description>
          <type name="enumeration">
            <enum name="outer">
              <description>
                <text>Traffic-class-map based on outer VLAN tag</text>
              </description>
            </enum>
            <enum name="inner">
              <description>
                <text>Traffic-class-map based on inner VLAN tag</text>
              </description>
            </enum>
          </type>
        </leaf>
      </container>
    </container>
    <container name="exclude-queue-overhead-bytes">
      <presence value="enable exclude-queue-overhead-bytes"/>
      <description>
        <text>Exclude the overhead bytes from the queue statistics</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="include-hierarchy">
        <description>
          <text>Perform overhead adjustment on IFD and all children</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="logical-interface-aggregate-statistics">
      <presence value="enable logical-interface-aggregate-statistics"/>
      <description>
        <text>Logical interface aggregate queue statistics</text>
      </description>
    </container>
    <list name="unit">
      <key value="name"/>
      <description>
        <text>Logical interface unit (or wildcard)</text>
      </description>
      <leaf name="name">
        <description>
          <text>Logical unit number</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="\*"/>
          </type>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 1073741823"/>
            </type>
          </type>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="output-forwarding-class-map">
        <description>
          <text>Output forwarding class map name</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="forwarding-class">
        <description>
          <text>Forwarding class assigned to incoming packets</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="virtual-channel-group">
        <description>
          <text>Virtual channel group applied to this logical interface</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="vc-shared-scheduler">
        <description>
          <text>Virtual channel group shared scheduler indicator</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="scheduler-map">
        <description>
          <text>Output scheduler map</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="input-scheduler-map">
        <description>
          <text>Input scheduler map</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="fragmentation-map">
        <description>
          <text>Fragmentation map applied to this logical interface</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <leaf name="adaptive-shaper">
        <description>
          <text>Adaptive shaper applied to this logical interface</text>
        </description>
        <type name="string">
          <length value="1 .. 64"/>
        </type>
      </leaf>
      <container name="shaping-rate">
        <presence value="enable shaping-rate"/>
        <description>
          <text>Output shaping rate</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate as an absolute rate</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="input-shaping-rate">
        <description>
          <text>Input shaping rate</text>
        </description>
        <choice name="shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Shaping rate as an absolute rate</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="percent">
              <description>
                <text>Shaping rate as a percentage</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 100"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="input-traffic-control-profile">
        <description>
          <text>Input traffic control profile</text>
        </description>
        <leaf name="profile-name">
          <description>
            <text>Name of traffic control profile</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="shared-instance">
          <description>
            <text>Name of the shared instance</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </container>
      <container name="output-traffic-control-profile">
        <description>
          <text>Output traffic control profile</text>
        </description>
        <leaf name="profile-name">
          <description>
            <text>Name of the traffic control profile</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
        <leaf name="shared-instance">
          <description>
            <text>Name of the shared instance</text>
          </description>
          <type name="string">
            <length value="1 .. 64"/>
          </type>
        </leaf>
      </container>
      <container name="output-traffic-control-profile-remaining">
        <description>
          <text>Output traffic control profile for remaining traffic on the ifl</text>
        </description>
        <leaf name="profile-name">
          <description>
            <text>Name of the traffic control profile</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
      <container name="report-ingress-shaping-rate">
        <description>
          <text>Report ingress shaping rate</text>
        </description>
        <choice name="report_ingress_shaping_rate_choice">
          <case name="case_1">
            <leaf name="rate">
              <description>
                <text>Ingress shaping rate as an absolute value</text>
              </description>
              <units name="bits per second"/>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="classifiers">
        <description>
          <text>Classifiers applied to incoming packets</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="no-default">
          <description>
            <text>Do not apply default classifiers to this interface</text>
          </description>
          <type name="empty"/>
        </leaf>
        <list name="dscp">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Differentiated Services code point classifier</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <leaf-list name="family">
            <ordered-by value="user"/>
            <description>
              <text>Family for DSCP classifier</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
        <list name="dscp-ipv6">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Differentiated Services code point classifier IPv6</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <leaf-list name="family">
            <ordered-by value="user"/>
            <description>
              <text>Family for DSCP Ipv6 classifier</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </list>
        <container name="exp">
          <description>
            <text>EXP classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="ieee-802.1">
          <description>
            <text>IEEE-802.1 classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf name="vlan-tag">
            <description>
              <text>VLAN tag used for classification</text>
            </description>
            <type name="enumeration">
              <enum name="outer">
                <description>
                  <text>Classification based on outer VLAN tag</text>
                </description>
              </enum>
              <enum name="inner">
                <description>
                  <text>Classification based on inner VLAN tag</text>
                </description>
              </enum>
              <enum name="transparent">
                <description>
                  <text>Classification based on hidden VLAN tag</text>
                </description>
              </enum>
            </type>
          </leaf>
        </container>
        <container name="inet-precedence">
          <description>
            <text>IPv4 precedence classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="ieee-802.1ad">
          <description>
            <text>IEEE-802.1ad (DEI) classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf name="vlan-tag">
            <description>
              <text>VLAN tag used for classification</text>
            </description>
            <type name="enumeration">
              <enum name="outer">
                <description>
                  <text>Classification based on outer VLAN tag</text>
                </description>
              </enum>
              <enum name="inner">
                <description>
                  <text>Classification based on inner VLAN tag</text>
                </description>
              </enum>
            </type>
          </leaf>
        </container>
      </container>
      <container name="ingress-rewrite-rules">
        <description>
          <text>Rewrite rules applied to outgoing packets of the ingress interface</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="dscp">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Differentiated Services code point rewrite rule</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </list>
        <container name="dscp-ipv6">
          <description>
            <text>Differentiated Services code point rewrite rule IPv6</text>
          </description>
          <leaf name="rewrite-rule-name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
        <list name="inet-precedence">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>IPv4 precedence rewrite rule</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </list>
      </container>
      <container name="loss-priority-maps">
        <description>
          <text>Loss priority maps applied to incoming packets</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="frame-relay-de">
          <description>
            <text>Frame Relay discard eligible bit loss priority map</text>
          </description>
          <leaf name="lpmap-name">
            <description>
              <text>Name of loss priority map to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="rewrite-rules">
        <description>
          <text>Rewrite rules applied to outgoing packets</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="dscp">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Differentiated Services code point rewrite rule</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="protocol">
            <ordered-by value="user"/>
            <description>
              <text>Specify protocol matching criteria</text>
            </description>
            <type name="enumeration">
              <enum name="mpls">
                <description>
                  <text>Apply to IPv4 packets entering MPLS tunnel</text>
                </description>
              </enum>
              <enum name="gtp-inet-outer">
                <description>
                  <text>Apply to outer IP header</text>
                </description>
              </enum>
              <enum name="gtp-inet-both">
                <description>
                  <text>Apply to both IP header</text>
                </description>
              </enum>
              <enum name="inet-outer">
                <description>
                  <text>Apply to outer IP header</text>
                </description>
              </enum>
              <enum name="inet-both">
                <description>
                  <text>Apply to both IP header</text>
                </description>
              </enum>
            </type>
          </leaf-list>
        </list>
        <list name="dscp-ipv6">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Differentiated Services code point rewrite rule IPv6</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="protocol">
            <ordered-by value="user"/>
            <description>
              <text>Specify protocol matching criteria</text>
            </description>
            <type name="enumeration">
              <enum name="mpls">
                <description>
                  <text>Apply to IPv6 packets entering MPLS tunnel</text>
                </description>
              </enum>
              <enum name="gtp-inet-outer">
                <description>
                  <text>Apply to outer IP header</text>
                </description>
              </enum>
              <enum name="gtp-inet-both">
                <description>
                  <text>Apply to both IP header</text>
                </description>
              </enum>
            </type>
          </leaf-list>
        </list>
        <list name="exp">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>EXP rewrite rule</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="protocol">
            <ordered-by value="user"/>
            <description>
              <text>Specify protocol matching criteria</text>
            </description>
            <type name="enumeration">
              <enum name="mpls-any">
                <description>
                  <text>Apply to MPLS packets, write MPLS header only</text>
                </description>
              </enum>
              <enum name="mpls-inet-both">
                <description>
                  <text>Apply to IPv4 MPLS packets, write MPLS and IPv4 header</text>
                </description>
              </enum>
              <enum name="mpls-inet-both-non-vpn">
                <description>
                  <text>Apply to IPv4 MPLS packets, write MPLS and IPv4 header for only non VPN traffic</text>
                </description>
              </enum>
            </type>
          </leaf-list>
        </list>
        <container name="ieee-802.1">
          <description>
            <text>IEEE-802.1 rewrite rule</text>
          </description>
          <leaf name="rewrite-rule-name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf name="vlan-tag">
            <description>
              <text>One or more VLAN tags to which rewrite rule applies</text>
            </description>
            <type name="enumeration">
              <enum name="outer">
                <description>
                  <text>Rewrite rule applies to outer VLAN tag</text>
                </description>
              </enum>
              <enum name="outer-and-inner">
                <description>
                  <text>Rewrite rule applies to both outer and inner VLAN tags</text>
                </description>
              </enum>
            </type>
          </leaf>
        </container>
        <list name="inet-precedence">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>IPv4 precedence rewrite rule</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="protocol">
            <ordered-by value="user"/>
            <description>
              <text>Specify protocol matching criteria</text>
            </description>
            <type name="enumeration">
              <enum name="mpls">
                <description>
                  <text>Apply to IPv4 packets entering MPLS tunnel</text>
                </description>
              </enum>
              <enum name="gtp-inet-outer">
                <description>
                  <text>Apply to outer IP header</text>
                </description>
              </enum>
              <enum name="gtp-inet-both">
                <description>
                  <text>Apply to both IP header</text>
                </description>
              </enum>
              <enum name="inet-outer">
                <description>
                  <text>Apply to outer IP header</text>
                </description>
              </enum>
              <enum name="inet-both">
                <description>
                  <text>Apply to both IP header</text>
                </description>
              </enum>
            </type>
          </leaf-list>
        </list>
        <container name="exp-swap-push-push">
          <description>
            <text>Copy incoming EXP into all swap-push-push labels</text>
          </description>
          <leaf name="rewrite-rule-name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="enumeration">
              <enum name="default">
                <description>
                  <text>Apply default rewrite rule</text>
                </description>
              </enum>
            </type>
          </leaf>
        </container>
        <container name="exp-push-push-push">
          <description>
            <text>Top-label EXP rewrite rule for push-push-push operation</text>
          </description>
          <leaf name="rewrite-rule-name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="enumeration">
              <enum name="default">
                <description>
                  <text>Apply default rewrite rule</text>
                </description>
              </enum>
            </type>
          </leaf>
        </container>
        <container name="frame-relay-de">
          <description>
            <text>Frame relay discard eligible bit rewrite rule</text>
          </description>
          <leaf name="rewrite-rule-name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="ieee-802.1ad">
          <description>
            <text>IEEE-802.1ad (DEI) rewrite rule</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="rewrite-rule-name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf name="vlan-tag">
            <description>
              <text>One or more VLAN tags to which rewrite rule applies</text>
            </description>
            <type name="enumeration">
              <enum name="outer">
                <description>
                  <text>Rewrite rule applies to outer VLAN tag</text>
                </description>
              </enum>
              <enum name="outer-and-inner">
                <description>
                  <text>Rewrite rule applies to both outer and inner VLAN tags</text>
                </description>
              </enum>
            </type>
          </leaf>
        </container>
        <list name="inet6-precedence">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>IPv6 precedence rewrite rule</text>
          </description>
          <leaf name="name">
            <description>
              <text>Name of rewrite rule to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="protocol">
            <ordered-by value="user"/>
            <description>
              <text>Specify protocol matching criteria</text>
            </description>
            <type name="enumeration">
              <enum name="mpls">
                <description>
                  <text>Apply to IPv6 packets entering MPLS tunnel</text>
                </description>
              </enum>
            </type>
          </leaf-list>
        </list>
      </container>
      <container name="loss-priority-rewrites">
        <description>
          <text>Loss priority rewrites applied to outgoing packets</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="frame-relay-de">
          <description>
            <text>Frame Relay discard eligible bit loss priority rewrite</text>
          </description>
          <leaf name="lprewrite-name">
            <description>
              <text>Name of loss priority rewrite to be applied</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="default"/>
              </type>
              <type name="string">
                <length value="1 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="translation-table">
        <description>
          <text>Translation tables applied to incoming packets</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="to-inet-precedence-from-inet-precedence">
          <description>
            <text>IPv4 precedence translation table</text>
          </description>
          <leaf name="translation-table-name">
            <description>
              <text>Name of translation table to be applied</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="to-dscp-from-dscp">
          <description>
            <text>Differentiated Services code point translation table</text>
          </description>
          <leaf name="translation-table-name">
            <description>
              <text>Name of translation table to be applied</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="to-dscp-ipv6-from-dscp-ipv6">
          <description>
            <text>Differentiated Services code point IPV6 translation table</text>
          </description>
          <leaf name="translation-table-name">
            <description>
              <text>Name of translation table to be applied</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="to-exp-from-exp">
          <description>
            <text>EXP translation table</text>
          </description>
          <leaf name="translation-table-name">
            <description>
              <text>Name of translation table to be applied</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
      </container>
      <container name="policy-map">
        <description>
          <text>Policy-map describing the packet marking rule</text>
        </description>
        <leaf name="policy-map-name">
          <description>
            <text>Name of Policy-map to be applied</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
    </list>
    <container name="classifiers">
      <description>
        <text>Classifiers applied to incoming packets</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point classifier</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name of classifier to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
      </list>
      <list name="dscp-ipv6">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point classifier IPv6</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name of classifier to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
      </list>
      <container name="ieee-802.1">
        <description>
          <text>IEEE-802.1 classifier</text>
        </description>
        <leaf name="classifier-name">
          <description>
            <text>Name of classifier to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <leaf name="vlan-tag">
          <description>
            <text>VLAN tag used for classification</text>
          </description>
          <type name="enumeration">
            <enum name="outer">
              <description>
                <text>Classification based on outer VLAN tag</text>
              </description>
            </enum>
            <enum name="inner">
              <description>
                <text>Classification based on inner VLAN tag</text>
              </description>
            </enum>
          </type>
        </leaf>
      </container>
      <container name="ieee-802.1ad">
        <description>
          <text>IEEE-802.1ad (DEI) classifier</text>
        </description>
        <leaf name="classifier-name">
          <description>
            <text>Name of classifier to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <leaf name="vlan-tag">
          <description>
            <text>VLAN tag used for classification</text>
          </description>
          <type name="enumeration">
            <enum name="outer">
              <description>
                <text>Classification based on outer VLAN tag</text>
              </description>
            </enum>
            <enum name="inner">
              <description>
                <text>Classification based on inner VLAN tag</text>
              </description>
            </enum>
          </type>
        </leaf>
      </container>
      <container name="inet-precedence">
        <description>
          <text>IPv4 precedence classifier</text>
        </description>
        <leaf name="classifier-name">
          <description>
            <text>Name of classifier to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <leaf name="forwarding-class">
      <description>
        <text>Forwarding class assigned to incoming packets</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="rewrite-rules">
      <description>
        <text>Rewrite rules applied to outgoing packets</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="dscp">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name of rewrite rule to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
      </list>
      <list name="dscp-ipv6">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Differentiated Services code point rewrite rule IPv6</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name of rewrite rule to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
      </list>
      <container name="ieee-802.1">
        <description>
          <text>IEEE-802.1 rewrite rule</text>
        </description>
        <leaf name="rewrite-rule-name">
          <description>
            <text>Name of rewrite rule to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="ieee-802.1ad">
        <description>
          <text>IEEE-802.1ad (DEI) rewrite rule</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="rewrite-rule-name">
          <description>
            <text>Name of rewrite rule to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
        <leaf name="vlan-tag">
          <description>
            <text>One or more VLAN tags to which rewrite rule applies</text>
          </description>
          <type name="enumeration">
            <enum name="outer">
              <description>
                <text>Rewrite rule applies to outer VLAN tag</text>
              </description>
            </enum>
          </type>
        </leaf>
      </container>
      <list name="inet-precedence">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>IPv4 precedence rewrite rule</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name of rewrite rule to be applied</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="default"/>
            </type>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </type>
        </leaf>
      </list>
    </container>
    <container name="multi-destination">
      <description>
        <text>Multi-destination class of service</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="classifiers">
        <description>
          <text>Classifier applied to multi-destination traffic</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="ieee-802.1">
          <description>
            <text>IEEE-802.1P classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="dscp">
          <description>
            <text>Differentiated services code point classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="dscp-ipv6">
          <description>
            <text>Differentiated services code point classifier IPv6</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
        <container name="inet-precedence">
          <description>
            <text>IPv4 precedence classifier</text>
          </description>
          <leaf name="classifier-name">
            <description>
              <text>Name of classifier to be applied</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf>
        </container>
      </container>
      <leaf name="forwarding-class">
        <description>
          <text>Forwarding class assigned to incoming Multi-destination packets</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="macro-data-type">
    <leaf name="name">
      <description>
        <text>Keyword part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="value">
      <description>
        <text>Value part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
</module>
