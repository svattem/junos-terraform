<?xml version="1.0" encoding="UTF-8"?>
<module name="junos-conf-fabric"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:jc-fabric="http://yang.juniper.net/junos/conf/fabric"
        xmlns:jt="http://yang.juniper.net/junos/common/types"
        xmlns:jc="http://yang.juniper.net/junos/conf/root">
  <namespace uri="http://yang.juniper.net/junos/conf/fabric"/>
  <prefix value="jc-fabric"/>
  <import module="junos-common-types">
    <prefix value="jt"/>
    <revision-date date="2019-01-01"/>
  </import>
  <import module="junos-conf-root">
    <prefix value="jc"/>
    <revision-date date="2019-01-01"/>
  </import>
  <organization>
    <text>Juniper Networks, Inc.</text>
  </organization>
  <contact>
    <text>yang-support@juniper.net</text>
  </contact>
  <description>
    <text>Junos fabric configuration module</text>
  </description>
  <revision date="2019-01-01">
    <description>
      <text>Junos: 19.4R1.9</text>
    </description>
  </revision>
  <augment target-node="/jc:configuration">
    <uses name="fabric-group"/>
  </augment>
  <augment target-node="/jc:configuration/jc:groups">
    <uses name="fabric-group"/>
  </augment>
  <grouping name="fabric-group">
    <container name="fabric">
      <description>
        <text>Fabric configuration</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="routing-instances">
        <description>
          <text>Routing instance configuration</text>
        </description>
        <status value="deprecated"/>
        <uses name="apply-advanced"/>
        <list name="instance">
          <key value="name"/>
          <uses name="juniper-fabric-routing-instance"/>
        </list>
      </container>
      <container name="routing-options">
        <description>
          <text>Fabric routing option configuration</text>
        </description>
        <status value="deprecated"/>
        <uses name="juniper-fabric-routing-options"/>
      </container>
      <container name="protocols">
        <description>
          <text>Routing protocol configuration</text>
        </description>
        <status value="deprecated"/>
        <uses name="apply-advanced"/>
        <container name="bgp">
          <description>
            <text>BGP options</text>
          </description>
          <uses name="juniper-protocols-bgp"/>
        </container>
      </container>
    </container>
  </grouping>
  <grouping name="apply-advanced">
    <description>
      <text>Apply advanced configuration logic</text>
    </description>
    <leaf-list name="apply-groups">
      <ordered-by value="user"/>
      <description>
        <text>Groups from which to inherit configuration data</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf-list name="apply-groups-except">
      <ordered-by value="user"/>
      <description>
        <text>Don't inherit configuration data from these groups</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <list name="apply-macro">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Macro and parameters for commit script expansion</text>
      </description>
      <uses name="apply-macro-type"/>
    </list>
  </grouping>
  <grouping name="apply-macro-type">
    <description>
      <text>Macro data for commit-script expansion</text>
    </description>
    <leaf name="name">
      <description>
        <text>Name of the macro to be expanded</text>
      </description>
      <type name="string"/>
    </leaf>
    <list name="data">
      <key value="name"/>
      <uses name="macro-data-type"/>
    </list>
  </grouping>
  <grouping name="juniper-fabric-routing-instance">
    <description>
      <text>Routing instance</text>
    </description>
    <leaf name="name">
      <description>
        <text>Routing instance name</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="description">
      <description>
        <text>Text description of routing instance</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="instance-type">
      <description>
        <text>Type of routing instance</text>
      </description>
      <type name="enumeration">
        <enum name="vrf">
          <description>
            <text>Virtual routing forwarding instance</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="route-distinguisher">
      <description>
        <text>Route distinguisher for this instance</text>
      </description>
      <leaf name="rd-type">
        <description>
          <text>Number in (16 bit:32 bit) or (32 bit 'L':16 bit) or (IP address:16 bit) format</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <container name="routing-options">
      <description>
        <text>Fabric routing option configuration</text>
      </description>
      <status value="deprecated"/>
      <uses name="juniper-fabric-routing-options"/>
    </container>
  </grouping>
  <grouping name="juniper-fabric-routing-options">
    <uses name="apply-advanced"/>
    <container name="traceoptions">
      <description>
        <text>Global routing protocol trace options</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="file">
        <description>
          <text>Trace file options</text>
        </description>
        <leaf name="filename">
          <description>
            <text>Name of file in which to write trace information</text>
          </description>
          <type name="string">
            <length value="1 .. 1024"/>
          </type>
        </leaf>
        <leaf name="replace">
          <description>
            <text>Replace trace file rather than appending to it</text>
          </description>
          <status value="deprecated"/>
          <type name="empty"/>
        </leaf>
        <leaf name="size">
          <description>
            <text>Maximum trace file size</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="files">
          <description>
            <text>Maximum number of trace files</text>
          </description>
          <default value="10"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="2 .. 1000"/>
            </type>
          </type>
        </leaf>
        <leaf name="no-stamp">
          <description>
            <text>Do not timestamp trace file</text>
          </description>
          <status value="deprecated"/>
          <type name="empty"/>
        </leaf>
        <choice name="world-readable-choice">
          <leaf name="world-readable">
            <description>
              <text>Allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-world-readable">
            <description>
              <text>Don't allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
      </container>
      <list name="flag">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Tracing parameters</text>
        </description>
        <leaf name="name">
          <type name="enumeration">
            <enum name="parse">
              <description>
                <text>Trace configuration parsing</text>
              </description>
            </enum>
            <enum name="regex-parse">
              <description>
                <text>Trace regular-expression parsing</text>
              </description>
            </enum>
            <enum name="config-internal">
              <description>
                <text>Trace configuration internals</text>
              </description>
            </enum>
            <enum name="nsr-synchronization">
              <description>
                <text>Trace nonstop routing synchronization events</text>
              </description>
            </enum>
            <enum name="condition-manager">
              <description>
                <text>Trace condition manager events</text>
              </description>
            </enum>
            <enum name="graceful-restart">
              <description>
                <text>Trace Graceful Restart events</text>
              </description>
            </enum>
            <enum name="session">
              <description>
                <text>Trace Session ID allocations/deallocations</text>
              </description>
            </enum>
            <enum name="hfrr-fsm">
              <description>
                <text>Host FRR FSM events tracing</text>
              </description>
            </enum>
            <enum name="hfrr-route">
              <description>
                <text>Host FRR route events tracing</text>
              </description>
            </enum>
            <enum name="statistics-id-group">
              <description>
                <text>Trace Statistics ID Group operations</text>
              </description>
            </enum>
            <enum name="route-record">
              <description>
                <text>Trace route-record server-side events</text>
              </description>
            </enum>
            <enum name="jvision-lsp">
              <description>
                <text>Trace Jvision events and errors</text>
              </description>
            </enum>
            <enum name="dyn-nh-template">
              <description>
                <text>Dynamic nexthops template events tracing</text>
              </description>
            </enum>
            <enum name="route">
              <description>
                <text>Trace routing information</text>
              </description>
            </enum>
            <enum name="normal">
              <description>
                <text>Trace normal events</text>
              </description>
            </enum>
            <enum name="general">
              <description>
                <text>Trace general events</text>
              </description>
            </enum>
            <enum name="state">
              <description>
                <text>Trace state transitions</text>
              </description>
            </enum>
            <enum name="policy">
              <description>
                <text>Trace policy processing</text>
              </description>
            </enum>
            <enum name="task">
              <description>
                <text>Trace routing protocol task processing</text>
              </description>
            </enum>
            <enum name="timer">
              <description>
                <text>Trace routing protocol timer processing</text>
              </description>
            </enum>
            <enum name="all">
              <description>
                <text>Trace everything</text>
              </description>
            </enum>
            <enum name="eswd">
              <description>
                <text>Trace ESWD notifications</text>
              </description>
            </enum>
            <enum name="arp">
              <description>
                <text>Trace ARP route processing</text>
              </description>
            </enum>
            <enum name="prefix">
              <description>
                <text>Trace prefix route processing</text>
              </description>
            </enum>
            <enum name="ne-port">
              <description>
                <text>Trace ne-port route processing</text>
              </description>
            </enum>
            <enum name="route-selection">
              <description>
                <text>Trace route-selection</text>
              </description>
            </enum>
            <enum name="bridge">
              <description>
                <text>Trace Bridge route notifications</text>
              </description>
            </enum>
            <enum name="grat-arp">
              <description>
                <text>Trace Gratuitous ARP notifications</text>
              </description>
            </enum>
            <enum name="l2l3-map">
              <description>
                <text>Trace L2L3 map events</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="disable">
          <description>
            <text>Disable this trace flag</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="send">
          <description>
            <text>Trace transmitted packets</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="receive">
          <description>
            <text>Trace received packets</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="detail">
          <description>
            <text>Trace detailed information</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
    </container>
    <container name="graceful-restart">
      <presence value="enable graceful-restart"/>
      <description>
        <text>Graceful or hitless routing restart options</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="enable-disable">
        <case name="case_1">
          <leaf name="disable">
            <description>
              <text>Disable graceful restart</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <leaf name="restart-duration">
        <description>
          <text>Maximum time for which router is in graceful restart</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="120 .. 10000"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="resolution">
      <presence value="enable resolution"/>
      <description>
        <text>Route next-hop resolution options</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="traceoptions">
        <description>
          <text>Trace options</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="file">
          <description>
            <text>Trace file options</text>
          </description>
          <leaf name="filename">
            <description>
              <text>Name of file in which to write trace information</text>
            </description>
            <type name="string">
              <length value="1 .. 1024"/>
            </type>
          </leaf>
          <leaf name="replace">
            <description>
              <text>Replace trace file rather than appending to it</text>
            </description>
            <status value="deprecated"/>
            <type name="empty"/>
          </leaf>
          <leaf name="size">
            <description>
              <text>Maximum trace file size</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="files">
            <description>
              <text>Maximum number of trace files</text>
            </description>
            <default value="10"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="2 .. 1000"/>
              </type>
            </type>
          </leaf>
          <leaf name="no-stamp">
            <description>
              <text>Do not timestamp trace file</text>
            </description>
            <status value="deprecated"/>
            <type name="empty"/>
          </leaf>
          <choice name="world-readable-choice">
            <leaf name="world-readable">
              <description>
                <text>Allow any user to read the log file</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="no-world-readable">
              <description>
                <text>Don't allow any user to read the log file</text>
              </description>
              <type name="empty"/>
            </leaf>
          </choice>
        </container>
        <list name="flag">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Tracing parameters</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="event">
                <description>
                  <text>Event processing</text>
                </description>
              </enum>
              <enum name="flash">
                <description>
                  <text>Flash processing</text>
                </description>
              </enum>
              <enum name="kernel">
                <description>
                  <text>Kernel communication</text>
                </description>
              </enum>
              <enum name="indirect">
                <description>
                  <text>Indirect next-hop addition, change, or deletion</text>
                </description>
              </enum>
              <enum name="task">
                <description>
                  <text>Task or job processing</text>
                </description>
              </enum>
              <enum name="igp-frr">
                <description>
                  <text>IGP triggered FRR events</text>
                </description>
              </enum>
              <enum name="igp-frr-extensive">
                <description>
                  <text>IGP triggered FRR Extensive events</text>
                </description>
              </enum>
              <enum name="tunnel">
                <description>
                  <text>Resolver dynamic tunnel events</text>
                </description>
              </enum>
              <enum name="all">
                <description>
                  <text>Trace everything</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="send">
            <description>
              <text>Trace transmitted packets</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="receive">
            <description>
              <text>Trace received packets</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="detail">
            <description>
              <text>Trace detailed information</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="disable">
            <description>
              <text>Disable this trace flag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </list>
      </container>
    </container>
    <container name="multicast">
      <description>
        <text>Global multicast options</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="l2-root">
        <description>
          <text>Set this switch as L2 multicast root</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="replication">
        <description>
          <text>Enable multicast replication on this switch</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="traceoptions">
        <description>
          <text>Trace options for DCF multicast</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="file">
          <description>
            <text>Trace file options</text>
          </description>
          <leaf name="filename">
            <description>
              <text>Name of file in which to write trace information</text>
            </description>
            <type name="string">
              <length value="1 .. 1024"/>
            </type>
          </leaf>
          <leaf name="replace">
            <description>
              <text>Replace trace file rather than appending to it</text>
            </description>
            <status value="deprecated"/>
            <type name="empty"/>
          </leaf>
          <leaf name="size">
            <description>
              <text>Maximum trace file size</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="files">
            <description>
              <text>Maximum number of trace files</text>
            </description>
            <default value="10"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="2 .. 1000"/>
              </type>
            </type>
          </leaf>
          <leaf name="no-stamp">
            <description>
              <text>Do not timestamp trace file</text>
            </description>
            <status value="deprecated"/>
            <type name="empty"/>
          </leaf>
          <choice name="world-readable-choice">
            <leaf name="world-readable">
              <description>
                <text>Allow any user to read the log file</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="no-world-readable">
              <description>
                <text>Don't allow any user to read the log file</text>
              </description>
              <type name="empty"/>
            </leaf>
          </choice>
        </container>
        <list name="flag">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Tracing parameters</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="vccpdf">
                <description>
                  <text>Trace VCCPDF notifications</text>
                </description>
              </enum>
              <enum name="root">
                <description>
                  <text>Trace L2-root processing</text>
                </description>
              </enum>
              <enum name="core">
                <description>
                  <text>Trace core tree processing</text>
                </description>
              </enum>
              <enum name="edge">
                <description>
                  <text>Trace edge tree processing</text>
                </description>
              </enum>
              <enum name="cspf">
                <description>
                  <text>Trace CSPF computation</text>
                </description>
              </enum>
              <enum name="all">
                <description>
                  <text>Trace everything</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="send">
            <description>
              <text>Trace transmitted packets</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="receive">
            <description>
              <text>Trace received packets</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="detail">
            <description>
              <text>Trace detailed information</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="disable">
            <description>
              <text>Disable this trace flag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </list>
      </container>
      <leaf name="no-make-before-break">
        <description>
          <text>Disable multicast make-before-break</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="make-before-break-timeout">
        <description>
          <text>Configure make-before-break timeout in seconds</text>
        </description>
        <default value="45"/>
        <units name="seconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 300"/>
          </type>
        </type>
      </leaf>
      <leaf name="no-make-before-break-convergence">
        <description>
          <text>Disable multicast make-before-break-convergence</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="make-before-break-convergence-timeout">
        <description>
          <text>Configure make-before-break-convergence timeout in seconds</text>
        </description>
        <default value="1"/>
        <units name="seconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 5"/>
          </type>
        </type>
      </leaf>
      <leaf name="ic-node-recomputation-delay-timeout">
        <description>
          <text>Configure IC node recomputation delay timeout in seconds</text>
        </description>
        <default value="180"/>
        <units name="seconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 600"/>
          </type>
        </type>
      </leaf>
      <leaf name="fabric-optimized-distribution">
        <description>
          <text>Enable fabric-optimized-distribution mode - Reboot required</text>
        </description>
        <status value="deprecated"/>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="forwarding-table">
      <uses name="forwarding-table-type"/>
    </container>
    <container name="auto-export">
      <presence value="enable auto-export"/>
      <description>
        <text>Export routes between routing instances</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="traceoptions">
        <description>
          <text>Trace options</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="file">
          <description>
            <text>Trace file options</text>
          </description>
          <leaf name="filename">
            <description>
              <text>Name of file in which to write trace information</text>
            </description>
            <type name="string">
              <length value="1 .. 1024"/>
            </type>
          </leaf>
          <leaf name="replace">
            <description>
              <text>Replace trace file rather than appending to it</text>
            </description>
            <status value="deprecated"/>
            <type name="empty"/>
          </leaf>
          <leaf name="size">
            <description>
              <text>Maximum trace file size</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="files">
            <description>
              <text>Maximum number of trace files</text>
            </description>
            <default value="10"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="2 .. 1000"/>
              </type>
            </type>
          </leaf>
          <leaf name="no-stamp">
            <description>
              <text>Do not timestamp trace file</text>
            </description>
            <status value="deprecated"/>
            <type name="empty"/>
          </leaf>
          <choice name="world-readable-choice">
            <leaf name="world-readable">
              <description>
                <text>Allow any user to read the log file</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="no-world-readable">
              <description>
                <text>Don't allow any user to read the log file</text>
              </description>
              <type name="empty"/>
            </leaf>
          </choice>
        </container>
        <list name="flag">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Tracing parameters</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="export">
                <description>
                  <text>Export processing</text>
                </description>
              </enum>
              <enum name="route">
                <description>
                  <text>Trace routing information</text>
                </description>
              </enum>
              <enum name="normal">
                <description>
                  <text>Trace normal events</text>
                </description>
              </enum>
              <enum name="general">
                <description>
                  <text>Trace general events</text>
                </description>
              </enum>
              <enum name="state">
                <description>
                  <text>Trace state transitions</text>
                </description>
              </enum>
              <enum name="policy">
                <description>
                  <text>Trace policy processing</text>
                </description>
              </enum>
              <enum name="task">
                <description>
                  <text>Trace routing protocol task processing</text>
                </description>
              </enum>
              <enum name="timer">
                <description>
                  <text>Trace routing protocol timer processing</text>
                </description>
              </enum>
              <enum name="all">
                <description>
                  <text>Trace everything</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="send">
            <description>
              <text>Trace transmitted packets</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="receive">
            <description>
              <text>Trace received packets</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="detail">
            <description>
              <text>Trace detailed information</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="disable">
            <description>
              <text>Disable this trace flag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </list>
      </container>
    </container>
  </grouping>
  <grouping name="forwarding-table-type">
    <description>
      <text>Forwarding table management options</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="remnant-holdtime">
      <description>
        <text>Time to hold inherited routes from FIB</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 10000"/>
        </type>
      </type>
    </leaf>
    <leaf name="chain-composite-max-label-count">
      <description>
        <text>Maximum labels inside chain composite for the platform.</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="1 .. 8"/>
        </type>
      </type>
    </leaf>
    <leaf name="krt-nexthop-ack-timeout">
      <description>
        <text>Kernel nexthop ack timeout interval</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="1 .. 400"/>
        </type>
      </type>
    </leaf>
    <container name="consistency-checking">
      <description>
        <text>RIB/FIB consistency checking</text>
      </description>
      <status value="deprecated"/>
      <uses name="apply-advanced"/>
      <choice name="enable-disable">
        <case name="case_1">
          <leaf name="enable">
            <description>
              <text>Enable consistency checking</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="disable">
            <description>
              <text>Disable consistency checking</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <leaf name="period">
        <description>
          <text>Periodicity of scan in seconds</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="30 .. 4294967295"/>
          </type>
        </type>
      </leaf>
      <leaf name="threshold">
        <description>
          <text>Mismatch threshold until complaint</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <leaf-list name="export">
      <ordered-by value="user"/>
      <description>
        <text>Export policy</text>
      </description>
      <type name="jt:policy-algebra"/>
    </leaf-list>
    <leaf name="dynamic-list-next-hop">
      <description>
        <text>Dynamic next-hop mode for EVPN</text>
      </description>
      <type name="empty"/>
    </leaf>
    <choice name="ecmp-fast-reroute-choice">
      <leaf name="ecmp-fast-reroute">
        <description>
          <text>Enable fast reroute for ECMP next hops</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="no-ecmp-fast-reroute">
        <description>
          <text>Don't enable fast reroute for ECMP next hops</text>
        </description>
        <type name="empty"/>
      </leaf>
    </choice>
    <choice name="indirect-next-hop-choice">
      <leaf name="indirect-next-hop">
        <description>
          <text>Install indirect next hops in Packet Forwarding Engine</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="no-indirect-next-hop">
        <description>
          <text>Don't install indirect next hops in Packet Forwarding Engine</text>
        </description>
        <type name="empty"/>
      </leaf>
    </choice>
    <choice name="indirect-next-hop-change-acknowledgements-choice">
      <leaf name="indirect-next-hop-change-acknowledgements">
        <description>
          <text>Request acknowledgements for Indirect next hop changes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="no-indirect-next-hop-change-acknowledgements">
        <description>
          <text>Don't request acknowledgements for Indirect next hop changes</text>
        </description>
        <type name="empty"/>
      </leaf>
    </choice>
    <list name="rib">
      <key value="name"/>
      <ordered-by value="user"/>
      <status value="deprecated"/>
      <leaf name="name">
        <type name="string"/>
      </leaf>
    </list>
    <leaf name="unicast-reverse-path">
      <description>
        <text>Unicast reverse path (RP) verification</text>
      </description>
      <type name="enumeration">
        <enum name="active-paths">
          <description>
            <text>Consider active paths when performing RP verification</text>
          </description>
        </enum>
        <enum name="feasible-paths">
          <description>
            <text>Consider all feasible paths for RP verification</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="ip-tunnel-rpf-check">
      <presence value="enable ip-tunnel-rpf-check"/>
      <description>
        <text>IP tunnel Reverse Path Forwarding Check</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="mode">
        <default value="strict"/>
        <type name="enumeration">
          <enum name="strict">
            <description>
              <text>Strict mode for rpf-check(Default)</text>
            </description>
          </enum>
          <enum name="loose">
            <description>
              <text>Loose mode for rpf-check</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="fail-filter">
        <description>
          <text>Fail filter name for RPF check(family inet|inet6|any)</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <leaf name="transit-lsp-statistics-from-route">
      <description>
        <text>Enable LSP statistics collection from the route</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="chained-composite-next-hop">
      <description>
        <text>Next-hop chaining mode</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="ingress">
        <description>
          <text>Ingress LSP nexthop settings</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="l2vpn-choice">
          <leaf name="l2vpn">
            <description>
              <text>Create composite-chained nexthops for ingress l2vpn LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-l2vpn">
            <description>
              <text>Don't create composite-chained nexthops for ingress l2vpn LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="l2ckt-choice">
          <leaf name="l2ckt">
            <description>
              <text>Create composite-chained nexthops for ingress l2ckt LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-l2ckt">
            <description>
              <text>Don't create composite-chained nexthops for ingress l2ckt LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="fec129-vpws-choice">
          <leaf name="fec129-vpws">
            <description>
              <text>Create composite-chained nexthops for ingress fec129-vpws LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-fec129-vpws">
            <description>
              <text>Don't create composite-chained nexthops for ingress fec129-vpws LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="evpn-choice">
          <leaf name="evpn">
            <description>
              <text>Create composite-chained nexthops for ingress EVPN LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-evpn">
            <description>
              <text>Don't create composite-chained nexthops for ingress EVPN LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <container name="labeled-bgp">
          <description>
            <text>Create composite-chained nexthops for ingress labeled-bgp LSPs</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="inet-choice">
            <leaf name="inet">
              <description>
                <text>Enable inet labeled-bgp composite nexthop creation</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="no-inet">
              <description>
                <text>Don't enable inet labeled-bgp composite nexthop creation</text>
              </description>
              <type name="empty"/>
            </leaf>
          </choice>
          <choice name="inet6-choice">
            <leaf name="inet6">
              <description>
                <text>Enable inet6 labeled-bgp composite nexthop creation</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="no-inet6">
              <description>
                <text>Don't enable inet6 labeled-bgp composite nexthop creation</text>
              </description>
              <type name="empty"/>
            </leaf>
          </choice>
        </container>
        <container name="l3vpn">
          <presence value="enable l3vpn"/>
          <description>
            <text>Create composite-chained nexthops for ingress l3vpn LSPs</text>
          </description>
          <leaf name="extended-space">
            <description>
              <text>Allocate in extended-space for scalability</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
      </container>
      <container name="transit">
        <description>
          <text>Transit LSP nexthops settings</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="l2vpn-choice">
          <leaf name="l2vpn">
            <description>
              <text>Create composite-chained nexthops for transit l2vpn LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-l2vpn">
            <description>
              <text>Don't create composite-chained nexthops for transit l2vpn LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="l3vpn-choice">
          <leaf name="l3vpn">
            <description>
              <text>Create composite-chained nexthops for transit l3vpn LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-l3vpn">
            <description>
              <text>Don't create composite-chained nexthops for transit l3vpn LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="labeled-bgp-choice">
          <leaf name="labeled-bgp">
            <description>
              <text>Create composite-chained nexthops for transit labeled BGP routes</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-labeled-bgp">
            <description>
              <text>Don't create composite-chained nexthops for transit labeled BGP routes</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="static-choice">
          <leaf name="static">
            <description>
              <text>Create composite-chained nexthops for static LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-static">
            <description>
              <text>Don't create composite-chained nexthops for static LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="rsvp-choice">
          <leaf name="rsvp">
            <description>
              <text>Create composite-chained nexthops for RSVP LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-rsvp">
            <description>
              <text>Don't create composite-chained nexthops for RSVP LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="rsvp-p2mp-choice">
          <leaf name="rsvp-p2mp">
            <description>
              <text>Create composite-chained nexthops for RSVP p2mp LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-rsvp-p2mp">
            <description>
              <text>Don't create composite-chained nexthops for RSVP p2mp LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="ldp-choice">
          <leaf name="ldp">
            <description>
              <text>Create composite-chained nexthops for LDP LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-ldp">
            <description>
              <text>Don't create composite-chained nexthops for LDP LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="ldp-p2mp-choice">
          <leaf name="ldp-p2mp">
            <description>
              <text>Create composite-chained nexthops for LDP P2MP LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-ldp-p2mp">
            <description>
              <text>Don't create composite-chained nexthops for LDP P2MP LSPs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <choice name="labeled-isis-choice">
          <leaf name="labeled-isis">
            <description>
              <text>Create composite-chained nexthops for labeled ISIS routes</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-labeled-isis">
            <description>
              <text>Don't create composite-chained nexthops for labeled ISIS routes</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
      </container>
    </container>
  </grouping>
  <grouping name="juniper-protocols-bgp">
    <uses name="apply-advanced"/>
    <container name="path-selection">
      <description>
        <text>Configure path selection strategy</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="l2vpn-use-bgp-rules">
        <description>
          <text>Use standard BGP rules during L2VPN path selection</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="cisco-non-deterministic">
        <description>
          <text>Use Cisco IOS nondeterministic path selection algorithm</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="always-compare-med">
        <description>
          <text>Always compare MED values, regardless of neighbor AS</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="med-plus-igp">
        <presence value="enable med-plus-igp"/>
        <description>
          <text>Add IGP cost to next-hop to MED before comparing MED values</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="med-multiplier">
          <description>
            <text>Multiplier for MED</text>
          </description>
          <default value="1"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint16">
              <range value="1 .. 1000"/>
            </type>
          </type>
        </leaf>
        <leaf name="igp-multiplier">
          <description>
            <text>Multiplier for IGP cost to next-hop</text>
          </description>
          <default value="1"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint16">
              <range value="1 .. 1000"/>
            </type>
          </type>
        </leaf>
      </container>
      <leaf name="external-router-id">
        <description>
          <text>Compare router ID on BGP externals</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="as-path-ignore">
        <description>
          <text>Ignore AS path comparison during path selection</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="advertise-from-main-vpn-tables">
      <description>
        <text>Advertise VPN routes from bgp.Xvpn.0 tables in master instance</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="stale-labels-holddown-period">
      <description>
        <text>Duration (sec) MPLS labels allocated by BGP are kept after they go stale</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="int32">
          <range value="1 .. 600"/>
        </type>
      </type>
    </leaf>
    <leaf name="holddown-all-stale-labels">
      <description>
        <text>Hold all BGP stale-labels, facilating make-before-break for new label advertisements</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="egress-te-backup-paths">
      <description>
        <text>Backup-path for Egress-TE peer interface failure</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="template">
        <key value="name"/>
        <description>
          <text>Backup-path template</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name of Egress-TE backup path</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <list name="peer">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Egress peer TE backup exit path</text>
          </description>
          <leaf name="name">
            <description>
              <text>Address of BGP peer to use as backup next-hop</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
          <uses name="apply-advanced"/>
        </list>
        <container name="remote-nexthop">
          <description>
            <text>Resolve and use tunnel to this next-hop as backup path</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="remote-nh-addr">
            <description>
              <text>Address of remote-nexthop to use as backup path</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
        </container>
        <container name="ip-forward">
          <presence value="enable ip-forward"/>
          <description>
            <text>Use IP-forward backup path for Egress TE</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="rti-name">
            <description>
              <text>Routing-instance to use as IP forward backup-path</text>
            </description>
            <type name="string"/>
          </leaf>
        </container>
      </list>
    </container>
    <leaf name="sr-preference-override">
      <description>
        <text>Replace received segment routing traffic engineering preference value with override value</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="vpn-apply-export">
      <description>
        <text>Apply BGP export policy when exporting VPN routes</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="family">
      <description>
        <text>Protocol family for NLRIs in updates</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="inet">
        <description>
          <text>IPv4 NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="labeled-unicast">
          <description>
            <text>Include labeled unicast NLRI</text>
          </description>
          <presence value="enable labeled-unicast"/>
          <uses name="bgp-afi-labeled"/>
        </container>
        <container name="segment-routing-te">
          <description>
            <text>Include segment-routing TE policy</text>
          </description>
          <presence value="enable segment-routing-te"/>
          <uses name="bgp-afi-srte"/>
        </container>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-topo"/>
        </container>
        <container name="multicast">
          <description>
            <text>Include multicast NLRI</text>
          </description>
          <presence value="enable multicast"/>
          <uses name="bgp-afi-default"/>
        </container>
        <container name="flow">
          <description>
            <text>Include flow NLRI</text>
          </description>
          <presence value="enable flow"/>
          <uses name="bgp-afi-flow-with-redirect-ip-action"/>
        </container>
        <container name="any">
          <description>
            <text>Include unicast or multicast NLRI</text>
          </description>
          <presence value="enable any"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="inet-vpn">
        <description>
          <text>IPv4 Layer 3 VPN NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-l3vpn"/>
        </container>
        <container name="multicast">
          <description>
            <text>Include multicast NLRI</text>
          </description>
          <presence value="enable multicast"/>
          <uses name="bgp-afi-vpn"/>
        </container>
        <container name="flow">
          <description>
            <text>Include flow VPN NLRI</text>
          </description>
          <presence value="enable flow"/>
          <uses name="bgp-afi-flow-with-redirect-ip-action"/>
        </container>
        <container name="any">
          <description>
            <text>Include unicast or multicast NLRI</text>
          </description>
          <presence value="enable any"/>
          <uses name="bgp-afi-vpn"/>
        </container>
      </container>
      <container name="inet6">
        <description>
          <text>IPv6 NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="labeled-unicast">
          <description>
            <text>Include labeled unicast NLRI</text>
          </description>
          <presence value="enable labeled-unicast"/>
          <uses name="bgp-afi-inet6-labeled"/>
        </container>
        <container name="segment-routing-te">
          <description>
            <text>Include segment-routing TE policy</text>
          </description>
          <presence value="enable segment-routing-te"/>
          <uses name="bgp-afi-srte"/>
        </container>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-topo"/>
        </container>
        <container name="multicast">
          <description>
            <text>Include multicast NLRI</text>
          </description>
          <presence value="enable multicast"/>
          <uses name="bgp-afi-default"/>
        </container>
        <container name="flow">
          <description>
            <text>Include flow NLRI</text>
          </description>
          <presence value="enable flow"/>
          <uses name="bgp-afi-flow"/>
        </container>
        <container name="any">
          <description>
            <text>Include unicast or multicast NLRI</text>
          </description>
          <presence value="enable any"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="inet6-vpn">
        <description>
          <text>IPv6 Layer 3 VPN NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-l3vpn"/>
        </container>
        <container name="multicast">
          <description>
            <text>Include multicast NLRI</text>
          </description>
          <presence value="enable multicast"/>
          <uses name="bgp-afi-vpn"/>
        </container>
        <container name="flow">
          <description>
            <text>Include flow VPN NLRI</text>
          </description>
          <presence value="enable flow"/>
          <uses name="bgp-afi-flow"/>
        </container>
        <container name="any">
          <description>
            <text>Include unicast or multicast NLRI</text>
          </description>
          <presence value="enable any"/>
          <uses name="bgp-afi-vpn"/>
        </container>
      </container>
      <container name="iso-vpn">
        <description>
          <text>ISO Layer 3 VPN NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-vpn-protection"/>
        </container>
      </container>
      <container name="l2vpn">
        <description>
          <text>MPLS-based Layer 2 VPN and VPLS NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="auto-discovery-only">
          <description>
            <text>Include auto-discovery NLRI for LDP Layer 2 VPN and VPLS</text>
          </description>
          <presence value="enable auto-discovery-only"/>
          <uses name="bgp-afi-default"/>
        </container>
        <container name="auto-discovery-mspw">
          <description>
            <text>Include auto-discovery NLRI for LDP Signalled MultiSegment PW</text>
          </description>
          <presence value="enable auto-discovery-mspw"/>
          <uses name="bgp-afi-default"/>
        </container>
        <container name="signaling">
          <description>
            <text>Include Layer 2 VPN and VPLS signaling NLRI</text>
          </description>
          <presence value="enable signaling"/>
          <uses name="bgp-afi-l2vpn"/>
        </container>
      </container>
      <container name="evpn">
        <description>
          <text>EVPN NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="signaling">
          <description>
            <text>Include EVPN signaling NLRI</text>
          </description>
          <presence value="enable signaling"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="inet-mvpn">
        <description>
          <text>IPv4 MVPN NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="signaling">
          <description>
            <text>Include IPv4 multicast VPN signaling NLRI</text>
          </description>
          <presence value="enable signaling"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="inet6-mvpn">
        <description>
          <text>IPv6 MVPN NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="signaling">
          <description>
            <text>Include IPv6 multicast VPN signaling NLRI</text>
          </description>
          <presence value="enable signaling"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="inet-mdt">
        <description>
          <text>IPv4 Multicast Distribution Tree (MDT) NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="signaling">
          <description>
            <text>Include IPv4 multicast VPN auto-discovery NLRI</text>
          </description>
          <presence value="enable signaling"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="traffic-engineering">
        <description>
          <text>Traffic Engineering (BGP-TE) NLRI parameters</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="unicast">
          <description>
            <text>Include BGP-TE NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="route-target">
        <presence value="enable route-target"/>
        <description>
          <text>Route target NLRI used for VPN route filtering</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="prefix-limit">
          <description>
            <text>Limit maximum number of prefixes from a peer</text>
          </description>
          <uses name="bgpaf-prefix-limit"/>
        </container>
        <container name="accepted-prefix-limit">
          <description>
            <text>Limit maximum number of prefixes accepted from a peer</text>
          </description>
          <uses name="bgpaf-accepted-prefix-limit"/>
        </container>
        <container name="proxy-generate">
          <presence value="enable proxy-generate"/>
          <description>
            <text>Generate route target NLRI for peers that don't support it</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf-list name="route-target-policy">
            <ordered-by value="user"/>
            <description>
              <text>Limit VPN routes that are used to generate proxy route-target filters</text>
            </description>
            <type name="jt:policy-algebra"/>
          </leaf-list>
        </container>
        <leaf name="external-paths">
          <description>
            <text>Number of external paths accepted for route filtering</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 256"/>
            </type>
          </type>
        </leaf>
        <leaf name="advertise-default">
          <description>
            <text>Advertise default and suppress more specific routes</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="damping">
          <description>
            <text>Enable route flap damping</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="graceful-restart">
          <description>
            <text>BGP graceful restart options</text>
          </description>
          <uses name="bgp-af-gr"/>
        </container>
        <leaf name="local-ipv4-address">
          <description>
            <text>Local IPv4 address</text>
          </description>
          <type name="jt:ipv4addr"/>
        </leaf>
        <container name="output-queue-priority">
          <description>
            <text>Default output-queue to assign updates to</text>
          </description>
          <uses name="bgp-output-queue-priority-class"/>
        </container>
        <container name="route-refresh-priority">
          <description>
            <text>Default output-queue to assign route refreshes to</text>
          </description>
          <uses name="bgp-output-queue-priority-class"/>
        </container>
        <container name="withdraw-priority">
          <description>
            <text>Default output-queue to assign withdrawn routes to</text>
          </description>
          <uses name="bgp-output-queue-priority-class"/>
        </container>
      </container>
      <container name="fabric">
        <description>
          <text>Fabric NLRI parameters</text>
        </description>
        <status value="deprecated"/>
        <uses name="apply-advanced"/>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="bridge">
        <description>
          <text>Bridge NLRI parameters</text>
        </description>
        <status value="deprecated"/>
        <uses name="apply-advanced"/>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-default"/>
        </container>
      </container>
      <container name="bridge-vpn">
        <description>
          <text>Bridge VPN NLRI parameters</text>
        </description>
        <status value="deprecated"/>
        <uses name="apply-advanced"/>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-vpn"/>
        </container>
      </container>
      <container name="fabric-vpn">
        <description>
          <text>Fabric VPN NLRI parameters</text>
        </description>
        <status value="deprecated"/>
        <uses name="apply-advanced"/>
        <container name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <presence value="enable unicast"/>
          <uses name="bgp-afi-vpn"/>
        </container>
      </container>
    </container>
    <container name="egress-te">
      <presence value="enable egress-te"/>
      <description>
        <text>Use Egress Peering traffic engineering</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="install-address">
        <description>
          <text>Address to use in egress-te created inet route</text>
        </description>
        <type name="jt:ipaddr"/>
      </leaf>
      <container name="rib">
        <description>
          <text>Select primary table for Egress-TE routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="inet.0">
          <description>
            <text>Install Egress-TE routes in inet.0</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="inet6.0">
          <description>
            <text>Install Egress-TE routes in inet6.0</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <leaf name="no-install">
        <description>
          <text>Avoid installation to FIB or resolving over</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf-list name="import">
        <ordered-by value="user"/>
        <description>
          <text>Import policy to set attributes</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
      <leaf name="backup-path">
        <description>
          <text>The 'egress-te-backup-paths template' to use for this peer</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <leaf name="egress-te-sid-stats">
      <description>
        <text>Create BGP-Peer-SID sensor</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="egress-te-set-segment">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Configure BGP-Peer-Set segment</text>
      </description>
      <leaf name="name">
        <description>
          <text>The BGP-Peer-Set segment name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="label">
        <description>
          <text>BGP-Peer-Set SID label from static label pool</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="label-value">
          <description>
            <text>BGP-Peer-Set SID label value from static label pool</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="16 .. 1048575"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="egress-te-backup-segment">
        <description>
          <text>Backup segment for FRR</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="label">
          <description>
            <text>Backup segment label from static label pool</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="label-value">
            <description>
              <text>Backup segment label value from static label pool</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="16 .. 1048575"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="egress-te-backup-ip-forward">
        <presence value="enable egress-te-backup-ip-forward"/>
        <description>
          <text>Use IP-forward backup path for Egress TE</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="instance-name">
          <description>
            <text>Routing-instance to use as IP forward backup-path</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
    </list>
    <list name="group">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a peer group</text>
      </description>
      <leaf name="name">
        <description>
          <text>Group name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="type">
        <description>
          <text>Type of peer group</text>
        </description>
        <type name="enumeration">
          <enum name="internal">
            <description>
              <text>IBGP group</text>
            </description>
          </enum>
          <enum name="external">
            <description>
              <text>EBGP group</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="protocol">
        <description>
          <text>IGP to use to resolve the next hop</text>
        </description>
        <status value="deprecated"/>
        <type name="enumeration">
          <enum name="rip">
            <description>
              <text>Use RIP to resolve the BGP next hop</text>
            </description>
            <status value="deprecated"/>
          </enum>
          <enum name="ospf">
            <description>
              <text>Use OSPF to resolve the BGP next hop</text>
            </description>
            <status value="deprecated"/>
          </enum>
          <enum name="isis">
            <description>
              <text>Use IS-IS to resolve the BGP next hop</text>
            </description>
            <status value="deprecated"/>
          </enum>
        </type>
      </leaf>
      <container name="traceoptions">
        <description>
          <text>Trace options for BGP</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="file">
          <description>
            <text>Trace file options</text>
          </description>
          <leaf name="filename">
            <description>
              <text>Name of file in which to write trace information</text>
            </description>
            <type name="string">
              <length value="1 .. 1024"/>
            </type>
          </leaf>
          <leaf name="replace">
            <description>
              <text>Replace trace file rather than appending to it</text>
            </description>
            <status value="deprecated"/>
            <type name="empty"/>
          </leaf>
          <leaf name="size">
            <description>
              <text>Maximum trace file size</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="files">
            <description>
              <text>Maximum number of trace files</text>
            </description>
            <default value="10"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="2 .. 1000"/>
              </type>
            </type>
          </leaf>
          <leaf name="no-stamp">
            <description>
              <text>Do not timestamp trace file</text>
            </description>
            <status value="deprecated"/>
            <type name="empty"/>
          </leaf>
          <choice name="world-readable-choice">
            <leaf name="world-readable">
              <description>
                <text>Allow any user to read the log file</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="no-world-readable">
              <description>
                <text>Don't allow any user to read the log file</text>
              </description>
              <type name="empty"/>
            </leaf>
          </choice>
        </container>
        <list name="flag">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Tracing parameters</text>
          </description>
          <leaf name="name">
            <type name="enumeration">
              <enum name="damping">
                <description>
                  <text>Trace BGP damping information</text>
                </description>
              </enum>
              <enum name="packets">
                <description>
                  <text>Trace all BGP protocol packets</text>
                </description>
              </enum>
              <enum name="open">
                <description>
                  <text>Trace BGP open packets</text>
                </description>
              </enum>
              <enum name="update">
                <description>
                  <text>Trace BGP update packets</text>
                </description>
              </enum>
              <enum name="keepalive">
                <description>
                  <text>Trace BGP keepalive packets</text>
                </description>
              </enum>
              <enum name="refresh">
                <description>
                  <text>Trace BGP refresh packets</text>
                </description>
              </enum>
              <enum name="nsr-synchronization">
                <description>
                  <text>Trace NSR synchronization events</text>
                </description>
              </enum>
              <enum name="bfd">
                <description>
                  <text>Trace BFD events</text>
                </description>
              </enum>
              <enum name="4byte-as">
                <description>
                  <text>Trace 4 byte AS events</text>
                </description>
              </enum>
              <enum name="add-path">
                <description>
                  <text>Trace add-path events</text>
                </description>
              </enum>
              <enum name="graceful-restart">
                <description>
                  <text>Trace Graceful Restart events</text>
                </description>
              </enum>
              <enum name="egress-te">
                <description>
                  <text>Egress Peering Traffic-Engineering events</text>
                </description>
              </enum>
              <enum name="thread-io">
                <description>
                  <text>Trace threaded I/O processing</text>
                </description>
              </enum>
              <enum name="sharding">
                <description>
                  <text>Trace BGP rib sharding</text>
                </description>
              </enum>
              <enum name="thread-update-io">
                <description>
                  <text>Trace threaded update I/O processing</text>
                </description>
              </enum>
              <enum name="route">
                <description>
                  <text>Trace routing information</text>
                </description>
              </enum>
              <enum name="normal">
                <description>
                  <text>Trace normal events</text>
                </description>
              </enum>
              <enum name="general">
                <description>
                  <text>Trace general events</text>
                </description>
              </enum>
              <enum name="state">
                <description>
                  <text>Trace state transitions</text>
                </description>
              </enum>
              <enum name="policy">
                <description>
                  <text>Trace policy processing</text>
                </description>
              </enum>
              <enum name="task">
                <description>
                  <text>Trace routing protocol task processing</text>
                </description>
              </enum>
              <enum name="timer">
                <description>
                  <text>Trace routing protocol timer processing</text>
                </description>
              </enum>
              <enum name="all">
                <description>
                  <text>Trace everything</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="send">
            <description>
              <text>Trace transmitted packets</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="receive">
            <description>
              <text>Trace received packets</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="detail">
            <description>
              <text>Trace detailed information</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="disable">
            <description>
              <text>Disable this trace flag</text>
            </description>
            <type name="empty"/>
          </leaf>
          <container name="filter">
            <description>
              <text>Filter to apply to this flag</text>
            </description>
            <presence value="enable filter"/>
            <uses name="bgp_filter_obj"/>
          </container>
        </list>
      </container>
      <leaf name="description">
        <description>
          <text>Text description</text>
        </description>
        <type name="string">
          <length value="1 .. 255"/>
        </type>
      </leaf>
      <container name="metric-out">
        <description>
          <text>Route metric sent in MED</text>
        </description>
        <choice name="metric_param">
          <case name="case_1">
            <leaf name="metric-value">
              <description>
                <text>Metric value</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 4294967295"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <container name="minimum-igp">
              <presence value="enable minimum-igp"/>
              <description>
                <text>Track the minimum IGP metric</text>
              </description>
              <leaf name="metric-offset">
                <description>
                  <text>Metric offset for MED</text>
                </description>
                <type name="union">
                  <type name="int32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </container>
          </case>
          <case name="case_3">
            <container name="igp">
              <presence value="enable igp"/>
              <description>
                <text>Track the IGP metric</text>
              </description>
              <leaf name="metric-offset">
                <description>
                  <text>Metric offset for MED</text>
                </description>
                <type name="union">
                  <type name="int32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
              <leaf name="delay-med-update">
                <description>
                  <text>Delay updating MED when IGP metric increases</text>
                </description>
                <type name="empty"/>
              </leaf>
            </container>
          </case>
        </choice>
      </container>
      <container name="multihop">
        <presence value="enable multihop"/>
        <description>
          <text>Configure an EBGP multihop session</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="ttl">
          <description>
            <text>TTL value for the session</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint8">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <leaf name="no-nexthop-change">
          <description>
            <text>Do not change next hop to self in advertisements</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <leaf name="route-server-client">
        <description>
          <text>Enable route server client behavior</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="accept-remote-nexthop">
        <description>
          <text>Allow import policy to specify a non-directly connected next-hop</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preference">
        <description>
          <text>Preference value</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
      <leaf name="local-preference">
        <description>
          <text>Value of LOCAL_PREF path attribute</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
      <leaf name="local-address">
        <description>
          <text>Address of local end of BGP session</text>
        </description>
        <type name="jt:ipaddr"/>
      </leaf>
      <leaf name="local-interface">
        <description>
          <text>Local interface for IPv6 link local EBGP peering</text>
        </description>
        <type name="union">
          <type name="jt:interface-name"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
      <leaf name="forwarding-context">
        <description>
          <text>Routing-instance used for data-forwarding and transport-session</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="hold-time">
        <description>
          <text>Hold time used when negotiating with a peer</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 65535"/>
          </type>
        </type>
      </leaf>
      <leaf name="minimum-hold-time">
        <description>
          <text>Minimum hold time accepted from the peer</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="3 .. 65535"/>
          </type>
        </type>
      </leaf>
      <leaf name="passive">
        <description>
          <text>Do not send open messages to a peer</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="advertise-inactive">
        <description>
          <text>Advertise inactive routes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <choice name="advertise-peer-as-choice">
        <leaf name="advertise-peer-as">
          <description>
            <text>Advertise routes received from the same autonomous system</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="no-advertise-peer-as">
          <description>
            <text>Don't advertise routes received from the same autonomous system</text>
          </description>
          <type name="empty"/>
        </leaf>
      </choice>
      <container name="advertise-external">
        <presence value="enable advertise-external"/>
        <description>
          <text>Advertise best external routes</text>
        </description>
        <leaf name="conditional">
          <description>
            <text>Route matches active route upto med-comparison rule</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <leaf name="keep">
        <description>
          <text>How to retain routes in the routing table</text>
        </description>
        <type name="enumeration">
          <enum name="all">
            <description>
              <text>Retain all routes</text>
            </description>
          </enum>
          <enum name="none">
            <description>
              <text>Retain no routes</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="rfc6514-compliant-safi129">
        <description>
          <text>Compliant with RFC6514 SAFI129 format</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="no-aggregator-id">
        <description>
          <text>Set router ID in aggregator path attribute to 0</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="mtu-discovery">
        <description>
          <text>Enable TCP path MTU discovery</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="enforce-first-as">
        <description>
          <text>Enforce first AS in AS-path is the neighbor's AS</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="out-delay">
        <description>
          <text>How long before exporting routes from routing table</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 65535"/>
          </type>
        </type>
      </leaf>
      <leaf name="ttl">
        <description>
          <text>TTL value for the single-hop peer</text>
        </description>
        <type name="enumeration">
          <enum name="1"/>
          <enum name="255"/>
        </type>
      </leaf>
      <leaf name="log-updown">
        <description>
          <text>Log a message for peer state transitions</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="damping">
        <description>
          <text>Enable route flap damping</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf-list name="import">
        <ordered-by value="user"/>
        <description>
          <text>Import policy</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
      <leaf-list name="nlri">
        <ordered-by value="user"/>
        <description>
          <text>NLRI type to include in updates</text>
        </description>
        <status value="deprecated"/>
        <type name="enumeration">
          <enum name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <status value="deprecated"/>
          </enum>
          <enum name="multicast">
            <description>
              <text>Include multicast NLRI</text>
            </description>
            <status value="deprecated"/>
          </enum>
          <enum name="any">
            <description>
              <text>Include any kind of NLRI</text>
            </description>
            <status value="deprecated"/>
          </enum>
        </type>
      </leaf-list>
      <container name="bgp-error-tolerance">
        <presence value="enable bgp-error-tolerance"/>
        <description>
          <text>Handle BGP malformed updates softly</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="malformed-update-log-interval">
          <description>
            <text>Time used when logging malformed update</text>
          </description>
          <default value="300"/>
          <units name="seconds"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="10 .. 65535"/>
            </type>
          </type>
        </leaf>
        <choice name="malformed-routes-limit-choice">
          <case name="case_1">
            <leaf name="malformed-route-limit">
              <description>
                <text>Maximum number of malformed routes from a peer</text>
              </description>
              <default value="1000"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 4294967295"/>
                </type>
              </type>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="no-malformed-route-limit">
              <description>
                <text>No malformed route limit</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="family">
        <description>
          <text>Protocol family for NLRIs in updates</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="inet">
          <description>
            <text>IPv4 NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="labeled-unicast">
            <description>
              <text>Include labeled unicast NLRI</text>
            </description>
            <presence value="enable labeled-unicast"/>
            <uses name="bgp-afi-labeled"/>
          </container>
          <container name="segment-routing-te">
            <description>
              <text>Include segment-routing TE policy</text>
            </description>
            <presence value="enable segment-routing-te"/>
            <uses name="bgp-afi-srte"/>
          </container>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-topo"/>
          </container>
          <container name="multicast">
            <description>
              <text>Include multicast NLRI</text>
            </description>
            <presence value="enable multicast"/>
            <uses name="bgp-afi-default"/>
          </container>
          <container name="flow">
            <description>
              <text>Include flow NLRI</text>
            </description>
            <presence value="enable flow"/>
            <uses name="bgp-afi-flow-with-redirect-ip-action"/>
          </container>
          <container name="any">
            <description>
              <text>Include unicast or multicast NLRI</text>
            </description>
            <presence value="enable any"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="inet-vpn">
          <description>
            <text>IPv4 Layer 3 VPN NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-l3vpn"/>
          </container>
          <container name="multicast">
            <description>
              <text>Include multicast NLRI</text>
            </description>
            <presence value="enable multicast"/>
            <uses name="bgp-afi-vpn"/>
          </container>
          <container name="flow">
            <description>
              <text>Include flow VPN NLRI</text>
            </description>
            <presence value="enable flow"/>
            <uses name="bgp-afi-flow-with-redirect-ip-action"/>
          </container>
          <container name="any">
            <description>
              <text>Include unicast or multicast NLRI</text>
            </description>
            <presence value="enable any"/>
            <uses name="bgp-afi-vpn"/>
          </container>
        </container>
        <container name="inet6">
          <description>
            <text>IPv6 NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="labeled-unicast">
            <description>
              <text>Include labeled unicast NLRI</text>
            </description>
            <presence value="enable labeled-unicast"/>
            <uses name="bgp-afi-inet6-labeled"/>
          </container>
          <container name="segment-routing-te">
            <description>
              <text>Include segment-routing TE policy</text>
            </description>
            <presence value="enable segment-routing-te"/>
            <uses name="bgp-afi-srte"/>
          </container>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-topo"/>
          </container>
          <container name="multicast">
            <description>
              <text>Include multicast NLRI</text>
            </description>
            <presence value="enable multicast"/>
            <uses name="bgp-afi-default"/>
          </container>
          <container name="flow">
            <description>
              <text>Include flow NLRI</text>
            </description>
            <presence value="enable flow"/>
            <uses name="bgp-afi-flow"/>
          </container>
          <container name="any">
            <description>
              <text>Include unicast or multicast NLRI</text>
            </description>
            <presence value="enable any"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="inet6-vpn">
          <description>
            <text>IPv6 Layer 3 VPN NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-l3vpn"/>
          </container>
          <container name="multicast">
            <description>
              <text>Include multicast NLRI</text>
            </description>
            <presence value="enable multicast"/>
            <uses name="bgp-afi-vpn"/>
          </container>
          <container name="flow">
            <description>
              <text>Include flow VPN NLRI</text>
            </description>
            <presence value="enable flow"/>
            <uses name="bgp-afi-flow"/>
          </container>
          <container name="any">
            <description>
              <text>Include unicast or multicast NLRI</text>
            </description>
            <presence value="enable any"/>
            <uses name="bgp-afi-vpn"/>
          </container>
        </container>
        <container name="iso-vpn">
          <description>
            <text>ISO Layer 3 VPN NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-vpn-protection"/>
          </container>
        </container>
        <container name="l2vpn">
          <description>
            <text>MPLS-based Layer 2 VPN and VPLS NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="auto-discovery-only">
            <description>
              <text>Include auto-discovery NLRI for LDP Layer 2 VPN and VPLS</text>
            </description>
            <presence value="enable auto-discovery-only"/>
            <uses name="bgp-afi-default"/>
          </container>
          <container name="auto-discovery-mspw">
            <description>
              <text>Include auto-discovery NLRI for LDP Signalled MultiSegment PW</text>
            </description>
            <presence value="enable auto-discovery-mspw"/>
            <uses name="bgp-afi-default"/>
          </container>
          <container name="signaling">
            <description>
              <text>Include Layer 2 VPN and VPLS signaling NLRI</text>
            </description>
            <presence value="enable signaling"/>
            <uses name="bgp-afi-l2vpn"/>
          </container>
        </container>
        <container name="evpn">
          <description>
            <text>EVPN NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="signaling">
            <description>
              <text>Include EVPN signaling NLRI</text>
            </description>
            <presence value="enable signaling"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="inet-mvpn">
          <description>
            <text>IPv4 MVPN NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="signaling">
            <description>
              <text>Include IPv4 multicast VPN signaling NLRI</text>
            </description>
            <presence value="enable signaling"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="inet6-mvpn">
          <description>
            <text>IPv6 MVPN NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="signaling">
            <description>
              <text>Include IPv6 multicast VPN signaling NLRI</text>
            </description>
            <presence value="enable signaling"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="inet-mdt">
          <description>
            <text>IPv4 Multicast Distribution Tree (MDT) NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="signaling">
            <description>
              <text>Include IPv4 multicast VPN auto-discovery NLRI</text>
            </description>
            <presence value="enable signaling"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="traffic-engineering">
          <description>
            <text>Traffic Engineering (BGP-TE) NLRI parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="unicast">
            <description>
              <text>Include BGP-TE NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="route-target">
          <presence value="enable route-target"/>
          <description>
            <text>Route target NLRI used for VPN route filtering</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="prefix-limit">
            <description>
              <text>Limit maximum number of prefixes from a peer</text>
            </description>
            <uses name="bgpaf-prefix-limit"/>
          </container>
          <container name="accepted-prefix-limit">
            <description>
              <text>Limit maximum number of prefixes accepted from a peer</text>
            </description>
            <uses name="bgpaf-accepted-prefix-limit"/>
          </container>
          <container name="proxy-generate">
            <presence value="enable proxy-generate"/>
            <description>
              <text>Generate route target NLRI for peers that don't support it</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf-list name="route-target-policy">
              <ordered-by value="user"/>
              <description>
                <text>Limit VPN routes that are used to generate proxy route-target filters</text>
              </description>
              <type name="jt:policy-algebra"/>
            </leaf-list>
          </container>
          <leaf name="external-paths">
            <description>
              <text>Number of external paths accepted for route filtering</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 256"/>
              </type>
            </type>
          </leaf>
          <leaf name="advertise-default">
            <description>
              <text>Advertise default and suppress more specific routes</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="damping">
            <description>
              <text>Enable route flap damping</text>
            </description>
            <type name="empty"/>
          </leaf>
          <container name="graceful-restart">
            <description>
              <text>BGP graceful restart options</text>
            </description>
            <uses name="bgp-af-gr"/>
          </container>
          <leaf name="local-ipv4-address">
            <description>
              <text>Local IPv4 address</text>
            </description>
            <type name="jt:ipv4addr"/>
          </leaf>
          <container name="output-queue-priority">
            <description>
              <text>Default output-queue to assign updates to</text>
            </description>
            <uses name="bgp-output-queue-priority-class"/>
          </container>
          <container name="route-refresh-priority">
            <description>
              <text>Default output-queue to assign route refreshes to</text>
            </description>
            <uses name="bgp-output-queue-priority-class"/>
          </container>
          <container name="withdraw-priority">
            <description>
              <text>Default output-queue to assign withdrawn routes to</text>
            </description>
            <uses name="bgp-output-queue-priority-class"/>
          </container>
        </container>
        <container name="fabric">
          <description>
            <text>Fabric NLRI parameters</text>
          </description>
          <status value="deprecated"/>
          <uses name="apply-advanced"/>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="bridge">
          <description>
            <text>Bridge NLRI parameters</text>
          </description>
          <status value="deprecated"/>
          <uses name="apply-advanced"/>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-default"/>
          </container>
        </container>
        <container name="bridge-vpn">
          <description>
            <text>Bridge VPN NLRI parameters</text>
          </description>
          <status value="deprecated"/>
          <uses name="apply-advanced"/>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-vpn"/>
          </container>
        </container>
        <container name="fabric-vpn">
          <description>
            <text>Fabric VPN NLRI parameters</text>
          </description>
          <status value="deprecated"/>
          <uses name="apply-advanced"/>
          <container name="unicast">
            <description>
              <text>Include unicast NLRI</text>
            </description>
            <presence value="enable unicast"/>
            <uses name="bgp-afi-vpn"/>
          </container>
        </container>
      </container>
      <leaf name="authentication-key">
        <description>
          <text>MD5 authentication key</text>
        </description>
        <type name="string">
          <length value="1 .. 126"/>
        </type>
      </leaf>
      <leaf name="authentication-algorithm">
        <description>
          <text>Authentication algorithm name</text>
        </description>
        <type name="enumeration">
          <enum name="md5">
            <description>
              <text>Message Digest 5</text>
            </description>
          </enum>
          <enum name="hmac-sha-1-96">
            <description>
              <text>Hash-based Message Authentication Code (SHA1) (96 bits)</text>
            </description>
          </enum>
          <enum name="aes-128-cmac-96">
            <description>
              <text>Cipher-based Message Authentication Code (AES128) (96 bits)</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="authentication-key-chain">
        <description>
          <text>Key chain name</text>
        </description>
        <type name="string">
          <length value="1 .. 128"/>
        </type>
      </leaf>
      <leaf-list name="export">
        <ordered-by value="user"/>
        <description>
          <text>Export policy</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
      <container name="remove-private">
        <presence value="enable remove-private"/>
        <description>
          <text>Remove well-known private AS numbers</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="all">
          <presence value="enable all"/>
          <description>
            <text>Remove all private AS numbers and do not stop at the first public AS number</text>
          </description>
          <container name="replace">
            <presence value="enable replace"/>
            <description>
              <text>Replace private AS numbers with the BGP Group's local AS number</text>
            </description>
            <leaf name="nearest">
              <description>
                <text>Use closest public AS number to replace a private AS number</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
        </container>
        <leaf name="no-peer-loop-check">
          <description>
            <text>Remove peer loop-check</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <leaf name="cluster">
        <description>
          <text>Cluster identifier</text>
        </description>
        <type name="jt:areaid"/>
      </leaf>
      <leaf name="no-client-reflect">
        <description>
          <text>Disable intracluster route redistribution</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="peer-as">
        <description>
          <text> Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' (asdot notation) format</text>
        </description>
        <type name="string"/>
      </leaf>
      <container name="local-as">
        <description>
          <text>Local autonomous system number</text>
        </description>
        <leaf name="as-number">
          <description>
            <text> Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' (asdot notation) format</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="loops">
          <description>
            <text>Maximum number of times this AS can be in an AS path</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="int32">
              <range value="1 .. 10"/>
            </type>
          </type>
        </leaf>
        <leaf name="private">
          <description>
            <text>Hide this local AS in paths learned from this peering</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="alias">
          <description>
            <text>Treat this AS as an alias to the system AS</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="no-prepend-global-as">
          <description>
            <text>Do not prepend global autonomous-system number in advertised paths</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <leaf name="ipsec-sa">
        <description>
          <text>IPSec SA name</text>
        </description>
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <container name="graceful-shutdown">
        <description>
          <text>BGP peer graceful shutdown option</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="receiver">
          <presence value="enable receiver"/>
          <description>
            <text>BGP peer graceful-shutdown receiver</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="disable">
            <description>
              <text>Disable graceful-shutdown receiver</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="local-preference">
            <description>
              <text>Value of receiver LOCAL_PREF path attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="sender">
          <presence value="enable sender"/>
          <description>
            <text>BGP peer graceful-shutdown sender</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="local-preference">
            <description>
              <text>Value of sender LOCAL_PREF path attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="shutdown">
        <presence value="enable shutdown"/>
        <description>
          <text>Shutdown</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="notify-message">
          <description>
            <text>Notification message</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
      <leaf name="unconfigured-peer-graceful-restart">
        <description>
          <text>BGP unconfigured peer graceful restart options</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="graceful-restart">
        <presence value="enable graceful-restart"/>
        <description>
          <text>BGP graceful restart options</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="enable-disable">
          <case name="case_1">
            <leaf name="disable">
              <description>
                <text>Disable graceful restart</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <leaf name="restart-time">
          <description>
            <text>Restart time used when negotiating with a peer</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 1800"/>
            </type>
          </type>
        </leaf>
        <leaf name="stale-routes-time">
          <description>
            <text>Maximum time for which stale routes are kept</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 1800"/>
            </type>
          </type>
        </leaf>
        <container name="long-lived">
          <description>
            <text>Long-lived graceful restart options</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="receiver">
            <description>
              <text>Long-lived graceful restart receiver (helper) options</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="enable-disable">
              <case name="case_1">
                <leaf name="disable">
                  <description>
                    <text>Disable receiver (helper) functionality</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="advertise-to-non-llgr-neighbor">
            <presence value="enable advertise-to-non-llgr-neighbor"/>
            <description>
              <text>Advertise stale routes to non-LLGR neighbors</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="omit-no-export">
              <description>
                <text>Do not attach no-export community to stale routes</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
        </container>
        <leaf name="disable-notification-extensions">
          <description>
            <text>Disable notification extensions</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="forwarding-state-bit">
          <description>
            <text>Control forwarding-state flag negotiation</text>
          </description>
          <type name="enumeration">
            <enum name="as-rr-client">
              <description>
                <text>As for a route reflector client</text>
              </description>
            </enum>
            <enum name="from-fib">
              <description>
                <text>Always use state of associated FIB(s)</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="dont-help-shared-fate-bfd-down">
          <description>
            <text>Honor BFD-Down(C=0) if GR-restart not in progress</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <leaf name="include-mp-next-hop">
        <description>
          <text>Include NEXT-HOP attribute in multiprotocol updates</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="disable-4byte-as">
        <description>
          <text>Disable 4 byte AS capability advertisement</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="idle-after-switch-over">
        <description>
          <text>Stop peer session from coming up after nonstop-routing switch-over</text>
        </description>
        <choice name="idle-interval">
          <case name="case_1">
            <leaf name="forever">
              <description>
                <text>Idle the peer until the user intervenes</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="timeout">
              <description>
                <text>Timeout value, in seconds, for starting peer after switch over</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 4294967295"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
      <container name="outbound-route-filter">
        <description>
          <text>Dynamically negotiated cooperative route filtering</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="bgp-orf-cisco-mode">
          <description>
            <text>Using BGP ORF capability code 130 and Prefix ORF type 128</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="extended-community">
          <description>
            <text>Extended community filtering</text>
          </description>
          <status value="deprecated"/>
          <uses name="apply-advanced"/>
          <choice name="accept-choice">
            <leaf name="accept">
              <description>
                <text>Honor remote requests for extended community ORF</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="no-accept">
              <description>
                <text>Don't honor remote requests for extended community ORF</text>
              </description>
              <type name="empty"/>
            </leaf>
          </choice>
          <leaf name="vrf-filter">
            <description>
              <text>Request remote filtering using locally configured VRF import targets</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <container name="prefix-based">
          <presence value="enable prefix-based"/>
          <description>
            <text>Prefix-based outbound route filtering</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="accept">
            <presence value="enable accept"/>
            <description>
              <text>Honor Prefix-based ORFs from remote peers</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="inet">
              <description>
                <text>Honor IPv4 prefix filters</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="inet6">
              <description>
                <text>Honor IPv6 prefix filters</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
        </container>
      </container>
      <container name="message-batching">
        <description>
          <text>DEPRECATED - Batching of outgoing messages</text>
        </description>
        <status value="deprecated"/>
        <uses name="apply-advanced"/>
        <choice name="enable-disable">
          <case name="case_1">
            <leaf name="enable">
              <description>
                <text>Enable parameter</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="disable">
              <description>
                <text>Disable parameter</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <leaf name="interval">
          <description>
            <text>DEPRECATED - Interval over which to batch messages</text>
          </description>
          <default value="250"/>
          <units name="milliseconds"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="100 .. 1000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="multipath">
        <presence value="enable multipath"/>
        <description>
          <text>Allow load sharing among multiple BGP paths</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="disable">
          <description>
            <text>Disable Multipath</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="multiple-as">
          <description>
            <text>Use paths received from different ASs</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="allow-protection">
          <description>
            <text>Allow protection for multipath legs</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <leaf name="tcp-mss">
        <description>
          <text>Maximum TCP segment size</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 4096"/>
          </type>
        </type>
      </leaf>
      <leaf name="tcp-aggressive-transmission">
        <description>
          <text>Enable aggressive transmission of pure TCP ACKs and retransmissions</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="bmp">
        <description>
          <text>Specific settings to override the routing-options settings</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="monitor">
          <description>
            <text>Enable/Disable monitoring</text>
          </description>
          <type name="enumeration">
            <enum name="enable">
              <description>
                <text>Enable monitoring of BGP peer(s)</text>
              </description>
            </enum>
            <enum name="disable">
              <description>
                <text>Disable monitoring of BGP peer(s)</text>
              </description>
            </enum>
          </type>
        </leaf>
        <container name="route-monitoring">
          <description>
            <text>Control route monitoring settings</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="none">
            <description>
              <text>Do not send route monitoring messages</text>
            </description>
            <type name="empty"/>
          </leaf>
          <container name="pre-policy">
            <presence value="enable pre-policy"/>
            <description>
              <text>Send pre-policy route monitoring messages</text>
            </description>
            <leaf name="exclude-non-feasible">
              <description>
                <text>Exclude looped routes, etc</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <container name="post-policy">
            <presence value="enable post-policy"/>
            <description>
              <text>Send post-policy route monitoring messages</text>
            </description>
            <leaf name="exclude-non-eligible">
              <description>
                <text>Exclude unresolved routes, etc.</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <container name="rib-out">
            <presence value="enable rib-out"/>
            <description>
              <text>Send adj-ribs-out route monitoring messages</text>
            </description>
            <leaf name="pre-policy">
              <description>
                <text>Send pre-policy adj-ribs-out route monitoring messages</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="post-policy">
              <description>
                <text>Send post-policy adj-ribs-out route monitoring messages</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
        </container>
      </container>
      <container name="advertise-bgp-static">
        <presence value="enable advertise-bgp-static"/>
        <description>
          <text>Advertise bgp-static routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf-list name="policy">
          <ordered-by value="user"/>
          <description>
            <text>Static route advertisement policy</text>
          </description>
          <type name="jt:policy-algebra"/>
        </leaf-list>
      </container>
      <leaf name="add-path-display-ipv4-address">
        <description>
          <text>Display add-path path-id in IPv4 address format</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="bfd-liveness-detection">
        <description>
          <text>Bidirectional Forwarding Detection (BFD) options</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="version">
          <description>
            <text>BFD protocol version number</text>
          </description>
          <default value="automatic"/>
          <type name="enumeration">
            <enum name="0">
              <description>
                <text>BFD version 0 (deprecated)</text>
              </description>
            </enum>
            <enum name="1">
              <description>
                <text>BFD version 1</text>
              </description>
            </enum>
            <enum name="automatic">
              <description>
                <text>Choose BFD version automatically</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="minimum-interval">
          <description>
            <text>Minimum transmit and receive interval</text>
          </description>
          <units name="milliseconds"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255000"/>
            </type>
          </type>
        </leaf>
        <leaf name="minimum-transmit-interval">
          <description>
            <text>Minimum transmit interval</text>
          </description>
          <status value="deprecated"/>
          <units name="milliseconds"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255000"/>
            </type>
          </type>
        </leaf>
        <leaf name="minimum-receive-interval">
          <description>
            <text>Minimum receive interval</text>
          </description>
          <units name="milliseconds"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255000"/>
            </type>
          </type>
        </leaf>
        <leaf name="multiplier">
          <description>
            <text>Detection time multiplier</text>
          </description>
          <default value="3"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <choice name="adaptation-choice">
          <case name="case_1">
            <leaf name="no-adaptation">
              <description>
                <text>Disable adaptation</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="transmit-interval">
          <description>
            <text>Transmit-interval options</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="minimum-interval">
            <description>
              <text>Minimum transmit interval</text>
            </description>
            <units name="milliseconds"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 255000"/>
              </type>
            </type>
          </leaf>
          <leaf name="threshold">
            <description>
              <text>High transmit interval triggering a trap</text>
            </description>
            <units name="milliseconds"/>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="detection-time">
          <description>
            <text>Detection-time options</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="threshold">
            <description>
              <text>High detection-time triggering a trap</text>
            </description>
            <units name="milliseconds"/>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="authentication">
          <description>
            <text>Authentication options</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="key-chain">
            <description>
              <text>Key chain name</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="algorithm">
            <description>
              <text>Algorithm name</text>
            </description>
            <type name="enumeration">
              <enum name="simple-password">
                <description>
                  <text>Simple password</text>
                </description>
              </enum>
              <enum name="keyed-md5">
                <description>
                  <text>Keyed message Digest 5</text>
                </description>
              </enum>
              <enum name="meticulous-keyed-md5">
                <description>
                  <text>Meticulous keyed message Digest 5</text>
                </description>
              </enum>
              <enum name="keyed-sha-1">
                <description>
                  <text>Keyed secure hash algorithm (SHA1) </text>
                </description>
              </enum>
              <enum name="meticulous-keyed-sha-1">
                <description>
                  <text>Meticulous keyed secure hash algorithm (SHA1) </text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="loose-check">
            <description>
              <text>Verify authentication only if authentication is negotiated</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="session-mode">
          <description>
            <text>BFD single-hop or multihop session-mode</text>
          </description>
          <default value="automatic"/>
          <type name="enumeration">
            <enum name="automatic">
              <description>
                <text>Choose session-mode automatically</text>
              </description>
            </enum>
            <enum name="single-hop">
              <description>
                <text>Use single-hop</text>
              </description>
            </enum>
            <enum name="multihop">
              <description>
                <text>Use multihop</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="holddown-interval">
          <description>
            <text>Time to hold the session-UP notification to the client</text>
          </description>
          <units name="milliseconds"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 255000"/>
            </type>
          </type>
        </leaf>
      </container>
      <leaf name="as-override">
        <description>
          <text>Replace neighbor AS number with our AS number</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf-list name="allow">
        <ordered-by value="user"/>
        <description>
          <text>Configure peer connections for specific networks</text>
        </description>
        <type name="jt:ipprefix"/>
      </leaf-list>
      <list name="dynamic-neighbor">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Configure peer options for specific networks</text>
        </description>
        <leaf name="name">
          <description>
            <text>Template name</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf-list name="allow">
          <ordered-by value="user"/>
          <description>
            <text>Configure peer connections for specific networks</text>
          </description>
          <type name="jt:ipprefix"/>
        </leaf-list>
        <leaf name="authentication-key">
          <description>
            <text>MD5 authentication key</text>
          </description>
          <type name="string">
            <length value="1 .. 126"/>
          </type>
        </leaf>
        <leaf name="authentication-algorithm">
          <description>
            <text>Authentication algorithm name</text>
          </description>
          <type name="enumeration">
            <enum name="md5">
              <description>
                <text>Message Digest 5</text>
              </description>
            </enum>
            <enum name="hmac-sha-1-96">
              <description>
                <text>Hash-based Message Authentication Code (SHA1) (96 bits)</text>
              </description>
            </enum>
            <enum name="aes-128-cmac-96">
              <description>
                <text>Cipher-based Message Authentication Code (AES128) (96 bits)</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="authentication-key-chain">
          <description>
            <text>Key chain name</text>
          </description>
          <type name="string">
            <length value="1 .. 128"/>
          </type>
        </leaf>
      </list>
      <container name="optimal-route-reflection">
        <description>
          <text>Enable optimal route reflection for this client group</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="igp-primary">
          <description>
            <text>Primary node identifier for this client group</text>
          </description>
          <type name="jt:ipv4addr"/>
        </leaf>
        <leaf name="igp-backup">
          <description>
            <text>Backup node identifier for this client group</text>
          </description>
          <type name="jt:ipv4addr"/>
        </leaf>
      </container>
      <leaf name="mvpn-iana-rt-import">
        <description>
          <text>Use IANA assigned rt-import type value for MVPN</text>
        </description>
        <status value="deprecated"/>
        <type name="empty"/>
      </leaf>
      <list name="neighbor">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Configure a neighbor</text>
        </description>
        <leaf name="name">
          <type name="jt:ipaddr"/>
        </leaf>
        <uses name="apply-advanced"/>
        <container name="traceoptions">
          <description>
            <text>Trace options for BGP</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="file">
            <description>
              <text>Trace file options</text>
            </description>
            <leaf name="filename">
              <description>
                <text>Name of file in which to write trace information</text>
              </description>
              <type name="string">
                <length value="1 .. 1024"/>
              </type>
            </leaf>
            <leaf name="replace">
              <description>
                <text>Replace trace file rather than appending to it</text>
              </description>
              <status value="deprecated"/>
              <type name="empty"/>
            </leaf>
            <leaf name="size">
              <description>
                <text>Maximum trace file size</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="files">
              <description>
                <text>Maximum number of trace files</text>
              </description>
              <default value="10"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="2 .. 1000"/>
                </type>
              </type>
            </leaf>
            <leaf name="no-stamp">
              <description>
                <text>Do not timestamp trace file</text>
              </description>
              <status value="deprecated"/>
              <type name="empty"/>
            </leaf>
            <choice name="world-readable-choice">
              <leaf name="world-readable">
                <description>
                  <text>Allow any user to read the log file</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-world-readable">
                <description>
                  <text>Don't allow any user to read the log file</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
          </container>
          <list name="flag">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Tracing parameters</text>
            </description>
            <leaf name="name">
              <type name="enumeration">
                <enum name="damping">
                  <description>
                    <text>Trace BGP damping information</text>
                  </description>
                </enum>
                <enum name="packets">
                  <description>
                    <text>Trace all BGP protocol packets</text>
                  </description>
                </enum>
                <enum name="open">
                  <description>
                    <text>Trace BGP open packets</text>
                  </description>
                </enum>
                <enum name="update">
                  <description>
                    <text>Trace BGP update packets</text>
                  </description>
                </enum>
                <enum name="keepalive">
                  <description>
                    <text>Trace BGP keepalive packets</text>
                  </description>
                </enum>
                <enum name="refresh">
                  <description>
                    <text>Trace BGP refresh packets</text>
                  </description>
                </enum>
                <enum name="nsr-synchronization">
                  <description>
                    <text>Trace NSR synchronization events</text>
                  </description>
                </enum>
                <enum name="bfd">
                  <description>
                    <text>Trace BFD events</text>
                  </description>
                </enum>
                <enum name="4byte-as">
                  <description>
                    <text>Trace 4 byte AS events</text>
                  </description>
                </enum>
                <enum name="add-path">
                  <description>
                    <text>Trace add-path events</text>
                  </description>
                </enum>
                <enum name="graceful-restart">
                  <description>
                    <text>Trace Graceful Restart events</text>
                  </description>
                </enum>
                <enum name="egress-te">
                  <description>
                    <text>Egress Peering Traffic-Engineering events</text>
                  </description>
                </enum>
                <enum name="thread-io">
                  <description>
                    <text>Trace threaded I/O processing</text>
                  </description>
                </enum>
                <enum name="sharding">
                  <description>
                    <text>Trace BGP rib sharding</text>
                  </description>
                </enum>
                <enum name="thread-update-io">
                  <description>
                    <text>Trace threaded update I/O processing</text>
                  </description>
                </enum>
                <enum name="route">
                  <description>
                    <text>Trace routing information</text>
                  </description>
                </enum>
                <enum name="normal">
                  <description>
                    <text>Trace normal events</text>
                  </description>
                </enum>
                <enum name="general">
                  <description>
                    <text>Trace general events</text>
                  </description>
                </enum>
                <enum name="state">
                  <description>
                    <text>Trace state transitions</text>
                  </description>
                </enum>
                <enum name="policy">
                  <description>
                    <text>Trace policy processing</text>
                  </description>
                </enum>
                <enum name="task">
                  <description>
                    <text>Trace routing protocol task processing</text>
                  </description>
                </enum>
                <enum name="timer">
                  <description>
                    <text>Trace routing protocol timer processing</text>
                  </description>
                </enum>
                <enum name="all">
                  <description>
                    <text>Trace everything</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="send">
              <description>
                <text>Trace transmitted packets</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="receive">
              <description>
                <text>Trace received packets</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="detail">
              <description>
                <text>Trace detailed information</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="disable">
              <description>
                <text>Disable this trace flag</text>
              </description>
              <type name="empty"/>
            </leaf>
            <container name="filter">
              <description>
                <text>Filter to apply to this flag</text>
              </description>
              <presence value="enable filter"/>
              <uses name="bgp_filter_obj"/>
            </container>
          </list>
        </container>
        <leaf name="description">
          <description>
            <text>Text description</text>
          </description>
          <type name="string">
            <length value="1 .. 255"/>
          </type>
        </leaf>
        <container name="metric-out">
          <description>
            <text>Route metric sent in MED</text>
          </description>
          <choice name="metric_param">
            <case name="case_1">
              <leaf name="metric-value">
                <description>
                  <text>Metric value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 4294967295"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <container name="minimum-igp">
                <presence value="enable minimum-igp"/>
                <description>
                  <text>Track the minimum IGP metric</text>
                </description>
                <leaf name="metric-offset">
                  <description>
                    <text>Metric offset for MED</text>
                  </description>
                  <type name="union">
                    <type name="int32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_3">
              <container name="igp">
                <presence value="enable igp"/>
                <description>
                  <text>Track the IGP metric</text>
                </description>
                <leaf name="metric-offset">
                  <description>
                    <text>Metric offset for MED</text>
                  </description>
                  <type name="union">
                    <type name="int32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
                <leaf name="delay-med-update">
                  <description>
                    <text>Delay updating MED when IGP metric increases</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </container>
            </case>
          </choice>
        </container>
        <container name="multihop">
          <presence value="enable multihop"/>
          <description>
            <text>Configure an EBGP multihop session</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="ttl">
            <description>
              <text>TTL value for the session</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint8">
                <range value="1 .. 255"/>
              </type>
            </type>
          </leaf>
          <leaf name="no-nexthop-change">
            <description>
              <text>Do not change next hop to self in advertisements</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="route-server-client">
          <description>
            <text>Enable route server client behavior</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="accept-remote-nexthop">
          <description>
            <text>Allow import policy to specify a non-directly connected next-hop</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="preference">
          <description>
            <text>Preference value</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="local-preference">
          <description>
            <text>Value of LOCAL_PREF path attribute</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="local-address">
          <description>
            <text>Address of local end of BGP session</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf>
        <leaf name="local-interface">
          <description>
            <text>Local interface for IPv6 link local EBGP peering</text>
          </description>
          <type name="union">
            <type name="jt:interface-name"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="forwarding-context">
          <description>
            <text>Routing-instance used for data-forwarding and transport-session</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="hold-time">
          <description>
            <text>Hold time used when negotiating with a peer</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 65535"/>
            </type>
          </type>
        </leaf>
        <leaf name="minimum-hold-time">
          <description>
            <text>Minimum hold time accepted from the peer</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="3 .. 65535"/>
            </type>
          </type>
        </leaf>
        <leaf name="passive">
          <description>
            <text>Do not send open messages to a peer</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="advertise-inactive">
          <description>
            <text>Advertise inactive routes</text>
          </description>
          <type name="empty"/>
        </leaf>
        <choice name="advertise-peer-as-choice">
          <leaf name="advertise-peer-as">
            <description>
              <text>Advertise routes received from the same autonomous system</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-advertise-peer-as">
            <description>
              <text>Don't advertise routes received from the same autonomous system</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <container name="advertise-external">
          <presence value="enable advertise-external"/>
          <description>
            <text>Advertise best external routes</text>
          </description>
          <leaf name="conditional">
            <description>
              <text>Route matches active route upto med-comparison rule</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="keep">
          <description>
            <text>How to retain routes in the routing table</text>
          </description>
          <type name="enumeration">
            <enum name="all">
              <description>
                <text>Retain all routes</text>
              </description>
            </enum>
            <enum name="none">
              <description>
                <text>Retain no routes</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="rfc6514-compliant-safi129">
          <description>
            <text>Compliant with RFC6514 SAFI129 format</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="no-aggregator-id">
          <description>
            <text>Set router ID in aggregator path attribute to 0</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="mtu-discovery">
          <description>
            <text>Enable TCP path MTU discovery</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="enforce-first-as">
          <description>
            <text>Enforce first AS in AS-path is the neighbor's AS</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="out-delay">
          <description>
            <text>How long before exporting routes from routing table</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 65535"/>
            </type>
          </type>
        </leaf>
        <leaf name="ttl">
          <description>
            <text>TTL value for the single-hop peer</text>
          </description>
          <type name="enumeration">
            <enum name="1"/>
            <enum name="255"/>
          </type>
        </leaf>
        <leaf name="log-updown">
          <description>
            <text>Log a message for peer state transitions</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="damping">
          <description>
            <text>Enable route flap damping</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf-list name="import">
          <ordered-by value="user"/>
          <description>
            <text>Import policy</text>
          </description>
          <type name="jt:policy-algebra"/>
        </leaf-list>
        <leaf-list name="nlri">
          <ordered-by value="user"/>
          <description>
            <text>NLRI type to include in updates</text>
          </description>
          <status value="deprecated"/>
          <type name="enumeration">
            <enum name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <status value="deprecated"/>
            </enum>
            <enum name="multicast">
              <description>
                <text>Include multicast NLRI</text>
              </description>
              <status value="deprecated"/>
            </enum>
            <enum name="any">
              <description>
                <text>Include any kind of NLRI</text>
              </description>
              <status value="deprecated"/>
            </enum>
          </type>
        </leaf-list>
        <container name="bgp-error-tolerance">
          <presence value="enable bgp-error-tolerance"/>
          <description>
            <text>Handle BGP malformed updates softly</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="malformed-update-log-interval">
            <description>
              <text>Time used when logging malformed update</text>
            </description>
            <default value="300"/>
            <units name="seconds"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="10 .. 65535"/>
              </type>
            </type>
          </leaf>
          <choice name="malformed-routes-limit-choice">
            <case name="case_1">
              <leaf name="malformed-route-limit">
                <description>
                  <text>Maximum number of malformed routes from a peer</text>
                </description>
                <default value="1000"/>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 4294967295"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="no-malformed-route-limit">
                <description>
                  <text>No malformed route limit</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="family">
          <description>
            <text>Protocol family for NLRIs in updates</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="inet">
            <description>
              <text>IPv4 NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="labeled-unicast">
              <description>
                <text>Include labeled unicast NLRI</text>
              </description>
              <presence value="enable labeled-unicast"/>
              <uses name="bgp-afi-labeled"/>
            </container>
            <container name="segment-routing-te">
              <description>
                <text>Include segment-routing TE policy</text>
              </description>
              <presence value="enable segment-routing-te"/>
              <uses name="bgp-afi-srte"/>
            </container>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-topo"/>
            </container>
            <container name="multicast">
              <description>
                <text>Include multicast NLRI</text>
              </description>
              <presence value="enable multicast"/>
              <uses name="bgp-afi-default"/>
            </container>
            <container name="flow">
              <description>
                <text>Include flow NLRI</text>
              </description>
              <presence value="enable flow"/>
              <uses name="bgp-afi-flow-with-redirect-ip-action"/>
            </container>
            <container name="any">
              <description>
                <text>Include unicast or multicast NLRI</text>
              </description>
              <presence value="enable any"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="inet-vpn">
            <description>
              <text>IPv4 Layer 3 VPN NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-l3vpn"/>
            </container>
            <container name="multicast">
              <description>
                <text>Include multicast NLRI</text>
              </description>
              <presence value="enable multicast"/>
              <uses name="bgp-afi-vpn"/>
            </container>
            <container name="flow">
              <description>
                <text>Include flow VPN NLRI</text>
              </description>
              <presence value="enable flow"/>
              <uses name="bgp-afi-flow-with-redirect-ip-action"/>
            </container>
            <container name="any">
              <description>
                <text>Include unicast or multicast NLRI</text>
              </description>
              <presence value="enable any"/>
              <uses name="bgp-afi-vpn"/>
            </container>
          </container>
          <container name="inet6">
            <description>
              <text>IPv6 NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="labeled-unicast">
              <description>
                <text>Include labeled unicast NLRI</text>
              </description>
              <presence value="enable labeled-unicast"/>
              <uses name="bgp-afi-inet6-labeled"/>
            </container>
            <container name="segment-routing-te">
              <description>
                <text>Include segment-routing TE policy</text>
              </description>
              <presence value="enable segment-routing-te"/>
              <uses name="bgp-afi-srte"/>
            </container>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-topo"/>
            </container>
            <container name="multicast">
              <description>
                <text>Include multicast NLRI</text>
              </description>
              <presence value="enable multicast"/>
              <uses name="bgp-afi-default"/>
            </container>
            <container name="flow">
              <description>
                <text>Include flow NLRI</text>
              </description>
              <presence value="enable flow"/>
              <uses name="bgp-afi-flow"/>
            </container>
            <container name="any">
              <description>
                <text>Include unicast or multicast NLRI</text>
              </description>
              <presence value="enable any"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="inet6-vpn">
            <description>
              <text>IPv6 Layer 3 VPN NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-l3vpn"/>
            </container>
            <container name="multicast">
              <description>
                <text>Include multicast NLRI</text>
              </description>
              <presence value="enable multicast"/>
              <uses name="bgp-afi-vpn"/>
            </container>
            <container name="flow">
              <description>
                <text>Include flow VPN NLRI</text>
              </description>
              <presence value="enable flow"/>
              <uses name="bgp-afi-flow"/>
            </container>
            <container name="any">
              <description>
                <text>Include unicast or multicast NLRI</text>
              </description>
              <presence value="enable any"/>
              <uses name="bgp-afi-vpn"/>
            </container>
          </container>
          <container name="iso-vpn">
            <description>
              <text>ISO Layer 3 VPN NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-vpn-protection"/>
            </container>
          </container>
          <container name="l2vpn">
            <description>
              <text>MPLS-based Layer 2 VPN and VPLS NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="auto-discovery-only">
              <description>
                <text>Include auto-discovery NLRI for LDP Layer 2 VPN and VPLS</text>
              </description>
              <presence value="enable auto-discovery-only"/>
              <uses name="bgp-afi-default"/>
            </container>
            <container name="auto-discovery-mspw">
              <description>
                <text>Include auto-discovery NLRI for LDP Signalled MultiSegment PW</text>
              </description>
              <presence value="enable auto-discovery-mspw"/>
              <uses name="bgp-afi-default"/>
            </container>
            <container name="signaling">
              <description>
                <text>Include Layer 2 VPN and VPLS signaling NLRI</text>
              </description>
              <presence value="enable signaling"/>
              <uses name="bgp-afi-l2vpn"/>
            </container>
          </container>
          <container name="evpn">
            <description>
              <text>EVPN NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="signaling">
              <description>
                <text>Include EVPN signaling NLRI</text>
              </description>
              <presence value="enable signaling"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="inet-mvpn">
            <description>
              <text>IPv4 MVPN NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="signaling">
              <description>
                <text>Include IPv4 multicast VPN signaling NLRI</text>
              </description>
              <presence value="enable signaling"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="inet6-mvpn">
            <description>
              <text>IPv6 MVPN NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="signaling">
              <description>
                <text>Include IPv6 multicast VPN signaling NLRI</text>
              </description>
              <presence value="enable signaling"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="inet-mdt">
            <description>
              <text>IPv4 Multicast Distribution Tree (MDT) NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="signaling">
              <description>
                <text>Include IPv4 multicast VPN auto-discovery NLRI</text>
              </description>
              <presence value="enable signaling"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="traffic-engineering">
            <description>
              <text>Traffic Engineering (BGP-TE) NLRI parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="unicast">
              <description>
                <text>Include BGP-TE NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="route-target">
            <presence value="enable route-target"/>
            <description>
              <text>Route target NLRI used for VPN route filtering</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="prefix-limit">
              <description>
                <text>Limit maximum number of prefixes from a peer</text>
              </description>
              <uses name="bgpaf-prefix-limit"/>
            </container>
            <container name="accepted-prefix-limit">
              <description>
                <text>Limit maximum number of prefixes accepted from a peer</text>
              </description>
              <uses name="bgpaf-accepted-prefix-limit"/>
            </container>
            <container name="proxy-generate">
              <presence value="enable proxy-generate"/>
              <description>
                <text>Generate route target NLRI for peers that don't support it</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf-list name="route-target-policy">
                <ordered-by value="user"/>
                <description>
                  <text>Limit VPN routes that are used to generate proxy route-target filters</text>
                </description>
                <type name="jt:policy-algebra"/>
              </leaf-list>
            </container>
            <leaf name="external-paths">
              <description>
                <text>Number of external paths accepted for route filtering</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 256"/>
                </type>
              </type>
            </leaf>
            <leaf name="advertise-default">
              <description>
                <text>Advertise default and suppress more specific routes</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="damping">
              <description>
                <text>Enable route flap damping</text>
              </description>
              <type name="empty"/>
            </leaf>
            <container name="graceful-restart">
              <description>
                <text>BGP graceful restart options</text>
              </description>
              <uses name="bgp-af-gr"/>
            </container>
            <leaf name="local-ipv4-address">
              <description>
                <text>Local IPv4 address</text>
              </description>
              <type name="jt:ipv4addr"/>
            </leaf>
            <container name="output-queue-priority">
              <description>
                <text>Default output-queue to assign updates to</text>
              </description>
              <uses name="bgp-output-queue-priority-class"/>
            </container>
            <container name="route-refresh-priority">
              <description>
                <text>Default output-queue to assign route refreshes to</text>
              </description>
              <uses name="bgp-output-queue-priority-class"/>
            </container>
            <container name="withdraw-priority">
              <description>
                <text>Default output-queue to assign withdrawn routes to</text>
              </description>
              <uses name="bgp-output-queue-priority-class"/>
            </container>
          </container>
          <container name="fabric">
            <description>
              <text>Fabric NLRI parameters</text>
            </description>
            <status value="deprecated"/>
            <uses name="apply-advanced"/>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="bridge">
            <description>
              <text>Bridge NLRI parameters</text>
            </description>
            <status value="deprecated"/>
            <uses name="apply-advanced"/>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-default"/>
            </container>
          </container>
          <container name="bridge-vpn">
            <description>
              <text>Bridge VPN NLRI parameters</text>
            </description>
            <status value="deprecated"/>
            <uses name="apply-advanced"/>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-vpn"/>
            </container>
          </container>
          <container name="fabric-vpn">
            <description>
              <text>Fabric VPN NLRI parameters</text>
            </description>
            <status value="deprecated"/>
            <uses name="apply-advanced"/>
            <container name="unicast">
              <description>
                <text>Include unicast NLRI</text>
              </description>
              <presence value="enable unicast"/>
              <uses name="bgp-afi-vpn"/>
            </container>
          </container>
        </container>
        <leaf name="authentication-key">
          <description>
            <text>MD5 authentication key</text>
          </description>
          <type name="string">
            <length value="1 .. 126"/>
          </type>
        </leaf>
        <leaf name="authentication-algorithm">
          <description>
            <text>Authentication algorithm name</text>
          </description>
          <type name="enumeration">
            <enum name="md5">
              <description>
                <text>Message Digest 5</text>
              </description>
            </enum>
            <enum name="hmac-sha-1-96">
              <description>
                <text>Hash-based Message Authentication Code (SHA1) (96 bits)</text>
              </description>
            </enum>
            <enum name="aes-128-cmac-96">
              <description>
                <text>Cipher-based Message Authentication Code (AES128) (96 bits)</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="authentication-key-chain">
          <description>
            <text>Key chain name</text>
          </description>
          <type name="string">
            <length value="1 .. 128"/>
          </type>
        </leaf>
        <leaf-list name="export">
          <ordered-by value="user"/>
          <description>
            <text>Export policy</text>
          </description>
          <type name="jt:policy-algebra"/>
        </leaf-list>
        <container name="remove-private">
          <presence value="enable remove-private"/>
          <description>
            <text>Remove well-known private AS numbers</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="all">
            <presence value="enable all"/>
            <description>
              <text>Remove all private AS numbers and do not stop at the first public AS number</text>
            </description>
            <container name="replace">
              <presence value="enable replace"/>
              <description>
                <text>Replace private AS numbers with the BGP Group's local AS number</text>
              </description>
              <leaf name="nearest">
                <description>
                  <text>Use closest public AS number to replace a private AS number</text>
                </description>
                <type name="empty"/>
              </leaf>
            </container>
          </container>
          <leaf name="no-peer-loop-check">
            <description>
              <text>Remove peer loop-check</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="cluster">
          <description>
            <text>Cluster identifier</text>
          </description>
          <type name="jt:areaid"/>
        </leaf>
        <leaf name="no-client-reflect">
          <description>
            <text>Disable intracluster route redistribution</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="peer-as">
          <description>
            <text> Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' (asdot notation) format</text>
          </description>
          <type name="string"/>
        </leaf>
        <container name="local-as">
          <description>
            <text>Local autonomous system number</text>
          </description>
          <leaf name="as-number">
            <description>
              <text> Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' (asdot notation) format</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="loops">
            <description>
              <text>Maximum number of times this AS can be in an AS path</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="int32">
                <range value="1 .. 10"/>
              </type>
            </type>
          </leaf>
          <leaf name="private">
            <description>
              <text>Hide this local AS in paths learned from this peering</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="alias">
            <description>
              <text>Treat this AS as an alias to the system AS</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-prepend-global-as">
            <description>
              <text>Do not prepend global autonomous-system number in advertised paths</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="ipsec-sa">
          <description>
            <text>IPSec SA name</text>
          </description>
          <type name="string">
            <length value="1 .. 32"/>
          </type>
        </leaf>
        <container name="graceful-shutdown">
          <description>
            <text>BGP peer graceful shutdown option</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="receiver">
            <presence value="enable receiver"/>
            <description>
              <text>BGP peer graceful-shutdown receiver</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="disable">
              <description>
                <text>Disable graceful-shutdown receiver</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="local-preference">
              <description>
                <text>Value of receiver LOCAL_PREF path attribute</text>
              </description>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
          <container name="sender">
            <presence value="enable sender"/>
            <description>
              <text>BGP peer graceful-shutdown sender</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="local-preference">
              <description>
                <text>Value of sender LOCAL_PREF path attribute</text>
              </description>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </container>
        <container name="shutdown">
          <presence value="enable shutdown"/>
          <description>
            <text>Shutdown</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="notify-message">
            <description>
              <text>Notification message</text>
            </description>
            <type name="string"/>
          </leaf>
        </container>
        <leaf name="unconfigured-peer-graceful-restart">
          <description>
            <text>BGP unconfigured peer graceful restart options</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="graceful-restart">
          <presence value="enable graceful-restart"/>
          <description>
            <text>BGP graceful restart options</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="enable-disable">
            <case name="case_1">
              <leaf name="disable">
                <description>
                  <text>Disable graceful restart</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <leaf name="restart-time">
            <description>
              <text>Restart time used when negotiating with a peer</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 1800"/>
              </type>
            </type>
          </leaf>
          <leaf name="stale-routes-time">
            <description>
              <text>Maximum time for which stale routes are kept</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 1800"/>
              </type>
            </type>
          </leaf>
          <container name="long-lived">
            <description>
              <text>Long-lived graceful restart options</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="receiver">
              <description>
                <text>Long-lived graceful restart receiver (helper) options</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="enable-disable">
                <case name="case_1">
                  <leaf name="disable">
                    <description>
                      <text>Disable receiver (helper) functionality</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
              </choice>
            </container>
            <container name="advertise-to-non-llgr-neighbor">
              <presence value="enable advertise-to-non-llgr-neighbor"/>
              <description>
                <text>Advertise stale routes to non-LLGR neighbors</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="omit-no-export">
                <description>
                  <text>Do not attach no-export community to stale routes</text>
                </description>
                <type name="empty"/>
              </leaf>
            </container>
          </container>
          <leaf name="disable-notification-extensions">
            <description>
              <text>Disable notification extensions</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="forwarding-state-bit">
            <description>
              <text>Control forwarding-state flag negotiation</text>
            </description>
            <type name="enumeration">
              <enum name="as-rr-client">
                <description>
                  <text>As for a route reflector client</text>
                </description>
              </enum>
              <enum name="from-fib">
                <description>
                  <text>Always use state of associated FIB(s)</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="dont-help-shared-fate-bfd-down">
            <description>
              <text>Honor BFD-Down(C=0) if GR-restart not in progress</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="include-mp-next-hop">
          <description>
            <text>Include NEXT-HOP attribute in multiprotocol updates</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="disable-4byte-as">
          <description>
            <text>Disable 4 byte AS capability advertisement</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="idle-after-switch-over">
          <description>
            <text>Stop peer session from coming up after nonstop-routing switch-over</text>
          </description>
          <choice name="idle-interval">
            <case name="case_1">
              <leaf name="forever">
                <description>
                  <text>Idle the peer until the user intervenes</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="timeout">
                <description>
                  <text>Timeout value, in seconds, for starting peer after switch over</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="1 .. 4294967295"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="outbound-route-filter">
          <description>
            <text>Dynamically negotiated cooperative route filtering</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="bgp-orf-cisco-mode">
            <description>
              <text>Using BGP ORF capability code 130 and Prefix ORF type 128</text>
            </description>
            <type name="empty"/>
          </leaf>
          <container name="extended-community">
            <description>
              <text>Extended community filtering</text>
            </description>
            <status value="deprecated"/>
            <uses name="apply-advanced"/>
            <choice name="accept-choice">
              <leaf name="accept">
                <description>
                  <text>Honor remote requests for extended community ORF</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="no-accept">
                <description>
                  <text>Don't honor remote requests for extended community ORF</text>
                </description>
                <type name="empty"/>
              </leaf>
            </choice>
            <leaf name="vrf-filter">
              <description>
                <text>Request remote filtering using locally configured VRF import targets</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <container name="prefix-based">
            <presence value="enable prefix-based"/>
            <description>
              <text>Prefix-based outbound route filtering</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="accept">
              <presence value="enable accept"/>
              <description>
                <text>Honor Prefix-based ORFs from remote peers</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="inet">
                <description>
                  <text>Honor IPv4 prefix filters</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="inet6">
                <description>
                  <text>Honor IPv6 prefix filters</text>
                </description>
                <type name="empty"/>
              </leaf>
            </container>
          </container>
        </container>
        <container name="message-batching">
          <description>
            <text>DEPRECATED - Batching of outgoing messages</text>
          </description>
          <status value="deprecated"/>
          <uses name="apply-advanced"/>
          <choice name="enable-disable">
            <case name="case_1">
              <leaf name="enable">
                <description>
                  <text>Enable parameter</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="disable">
                <description>
                  <text>Disable parameter</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <leaf name="interval">
            <description>
              <text>DEPRECATED - Interval over which to batch messages</text>
            </description>
            <default value="250"/>
            <units name="milliseconds"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="100 .. 1000"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="multipath">
          <presence value="enable multipath"/>
          <description>
            <text>Allow load sharing among multiple BGP paths</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="disable">
            <description>
              <text>Disable Multipath</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="multiple-as">
            <description>
              <text>Use paths received from different ASs</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="allow-protection">
            <description>
              <text>Allow protection for multipath legs</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="tcp-mss">
          <description>
            <text>Maximum TCP segment size</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 4096"/>
            </type>
          </type>
        </leaf>
        <leaf name="tcp-aggressive-transmission">
          <description>
            <text>Enable aggressive transmission of pure TCP ACKs and retransmissions</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="bmp">
          <description>
            <text>Specific settings to override the routing-options settings</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="monitor">
            <description>
              <text>Enable/Disable monitoring</text>
            </description>
            <type name="enumeration">
              <enum name="enable">
                <description>
                  <text>Enable monitoring of BGP peer(s)</text>
                </description>
              </enum>
              <enum name="disable">
                <description>
                  <text>Disable monitoring of BGP peer(s)</text>
                </description>
              </enum>
            </type>
          </leaf>
          <container name="route-monitoring">
            <description>
              <text>Control route monitoring settings</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="none">
              <description>
                <text>Do not send route monitoring messages</text>
              </description>
              <type name="empty"/>
            </leaf>
            <container name="pre-policy">
              <presence value="enable pre-policy"/>
              <description>
                <text>Send pre-policy route monitoring messages</text>
              </description>
              <leaf name="exclude-non-feasible">
                <description>
                  <text>Exclude looped routes, etc</text>
                </description>
                <type name="empty"/>
              </leaf>
            </container>
            <container name="post-policy">
              <presence value="enable post-policy"/>
              <description>
                <text>Send post-policy route monitoring messages</text>
              </description>
              <leaf name="exclude-non-eligible">
                <description>
                  <text>Exclude unresolved routes, etc.</text>
                </description>
                <type name="empty"/>
              </leaf>
            </container>
            <container name="rib-out">
              <presence value="enable rib-out"/>
              <description>
                <text>Send adj-ribs-out route monitoring messages</text>
              </description>
              <leaf name="pre-policy">
                <description>
                  <text>Send pre-policy adj-ribs-out route monitoring messages</text>
                </description>
                <type name="empty"/>
              </leaf>
              <leaf name="post-policy">
                <description>
                  <text>Send post-policy adj-ribs-out route monitoring messages</text>
                </description>
                <type name="empty"/>
              </leaf>
            </container>
          </container>
        </container>
        <container name="advertise-bgp-static">
          <presence value="enable advertise-bgp-static"/>
          <description>
            <text>Advertise bgp-static routes</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf-list name="policy">
            <ordered-by value="user"/>
            <description>
              <text>Static route advertisement policy</text>
            </description>
            <type name="jt:policy-algebra"/>
          </leaf-list>
        </container>
        <leaf name="add-path-display-ipv4-address">
          <description>
            <text>Display add-path path-id in IPv4 address format</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="bfd-liveness-detection">
          <description>
            <text>Bidirectional Forwarding Detection (BFD) options</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="version">
            <description>
              <text>BFD protocol version number</text>
            </description>
            <default value="automatic"/>
            <type name="enumeration">
              <enum name="0">
                <description>
                  <text>BFD version 0 (deprecated)</text>
                </description>
              </enum>
              <enum name="1">
                <description>
                  <text>BFD version 1</text>
                </description>
              </enum>
              <enum name="automatic">
                <description>
                  <text>Choose BFD version automatically</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="minimum-interval">
            <description>
              <text>Minimum transmit and receive interval</text>
            </description>
            <units name="milliseconds"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 255000"/>
              </type>
            </type>
          </leaf>
          <leaf name="minimum-transmit-interval">
            <description>
              <text>Minimum transmit interval</text>
            </description>
            <status value="deprecated"/>
            <units name="milliseconds"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 255000"/>
              </type>
            </type>
          </leaf>
          <leaf name="minimum-receive-interval">
            <description>
              <text>Minimum receive interval</text>
            </description>
            <units name="milliseconds"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 255000"/>
              </type>
            </type>
          </leaf>
          <leaf name="multiplier">
            <description>
              <text>Detection time multiplier</text>
            </description>
            <default value="3"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 255"/>
              </type>
            </type>
          </leaf>
          <choice name="adaptation-choice">
            <case name="case_1">
              <leaf name="no-adaptation">
                <description>
                  <text>Disable adaptation</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="transmit-interval">
            <description>
              <text>Transmit-interval options</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="minimum-interval">
              <description>
                <text>Minimum transmit interval</text>
              </description>
              <units name="milliseconds"/>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 255000"/>
                </type>
              </type>
            </leaf>
            <leaf name="threshold">
              <description>
                <text>High transmit interval triggering a trap</text>
              </description>
              <units name="milliseconds"/>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
          <container name="detection-time">
            <description>
              <text>Detection-time options</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="threshold">
              <description>
                <text>High detection-time triggering a trap</text>
              </description>
              <units name="milliseconds"/>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
          <container name="authentication">
            <description>
              <text>Authentication options</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="key-chain">
              <description>
                <text>Key chain name</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="algorithm">
              <description>
                <text>Algorithm name</text>
              </description>
              <type name="enumeration">
                <enum name="simple-password">
                  <description>
                    <text>Simple password</text>
                  </description>
                </enum>
                <enum name="keyed-md5">
                  <description>
                    <text>Keyed message Digest 5</text>
                  </description>
                </enum>
                <enum name="meticulous-keyed-md5">
                  <description>
                    <text>Meticulous keyed message Digest 5</text>
                  </description>
                </enum>
                <enum name="keyed-sha-1">
                  <description>
                    <text>Keyed secure hash algorithm (SHA1) </text>
                  </description>
                </enum>
                <enum name="meticulous-keyed-sha-1">
                  <description>
                    <text>Meticulous keyed secure hash algorithm (SHA1) </text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="loose-check">
              <description>
                <text>Verify authentication only if authentication is negotiated</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <leaf name="session-mode">
            <description>
              <text>BFD single-hop or multihop session-mode</text>
            </description>
            <default value="automatic"/>
            <type name="enumeration">
              <enum name="automatic">
                <description>
                  <text>Choose session-mode automatically</text>
                </description>
              </enum>
              <enum name="single-hop">
                <description>
                  <text>Use single-hop</text>
                </description>
              </enum>
              <enum name="multihop">
                <description>
                  <text>Use multihop</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="holddown-interval">
            <description>
              <text>Time to hold the session-UP notification to the client</text>
            </description>
            <units name="milliseconds"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 255000"/>
              </type>
            </type>
          </leaf>
        </container>
        <leaf name="as-override">
          <description>
            <text>Replace neighbor AS number with our AS number</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="egress-te-node-segment">
          <description>
            <text>Configure BGP-Peer-Node segment</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="label">
            <description>
              <text>BGP-Peer-Node SID label from static label pool</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="label-value">
              <description>
                <text>BGP-Peer-Node SID label value from static label pool</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="16 .. 1048575"/>
                </type>
              </type>
            </leaf>
          </container>
          <container name="egress-te-set">
            <description>
              <text>Configure as a member of a SET segment</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="set-name">
              <description>
                <text>Set name</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="weight">
              <description>
                <text>Weight for set segment</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 255"/>
                </type>
              </type>
            </leaf>
          </container>
          <container name="egress-te-backup-segment">
            <description>
              <text>Backup segment for FRR</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="label">
              <description>
                <text>Backup segment label from static label pool</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="label-value">
                <description>
                  <text>Backup segment label value from static label pool</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="16 .. 1048575"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="egress-te-backup-ip-forward">
            <presence value="enable egress-te-backup-ip-forward"/>
            <description>
              <text>Use IP-forward backup path for Egress TE</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="instance-name">
              <description>
                <text>Routing-instance to use as IP forward backup-path</text>
              </description>
              <type name="string"/>
            </leaf>
          </container>
        </container>
        <list name="egress-te-adj-segment">
          <key value="name"/>
          <description>
            <text>Configure BGP-Peer-Adj segment</text>
          </description>
          <leaf name="name">
            <description>
              <text>The BGP-Adj-Set segment name</text>
            </description>
            <type name="string"/>
          </leaf>
          <uses name="apply-advanced"/>
          <container name="label">
            <description>
              <text>BGP-Peer-Adj SID label from static label pool</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="label-value">
              <description>
                <text>BGP-Peer-Adj SID label value from static label pool</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="16 .. 1048575"/>
                </type>
              </type>
            </leaf>
          </container>
          <container name="next-hop">
            <description>
              <text>Address of directly connected next-hop to use</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="next-hop-addr">
              <description>
                <text>Address of directly connected next-hop</text>
              </description>
              <type name="jt:ipaddr"/>
            </leaf>
          </container>
          <container name="egress-te-set">
            <description>
              <text>Configure as a member of a SET segment</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="set-name">
              <description>
                <text>Set name</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="weight">
              <description>
                <text>Weight for set segment</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 255"/>
                </type>
              </type>
            </leaf>
          </container>
          <container name="egress-te-backup-segment">
            <description>
              <text>Backup segment for FRR</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="label">
              <description>
                <text>Backup segment label from static label pool</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="label-value">
                <description>
                  <text>Backup segment label value from static label pool</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="16 .. 1048575"/>
                  </type>
                </type>
              </leaf>
            </container>
          </container>
          <container name="egress-te-backup-ip-forward">
            <presence value="enable egress-te-backup-ip-forward"/>
            <description>
              <text>Use IP-forward backup path for Egress TE</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="instance-name">
              <description>
                <text>Routing-instance to use as IP forward backup-path</text>
              </description>
              <type name="string"/>
            </leaf>
          </container>
        </list>
        <leaf name="vpn-apply-export">
          <description>
            <text>Apply BGP export policy when exporting VPN routes</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="egress-te">
          <presence value="enable egress-te"/>
          <description>
            <text>Use Egress Peering traffic engineering</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="install-address">
            <description>
              <text>Address to use in egress-te created inet route</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
          <container name="rib">
            <description>
              <text>Select primary table for Egress-TE routes</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="inet.0">
              <description>
                <text>Install Egress-TE routes in inet.0</text>
              </description>
              <type name="empty"/>
            </leaf>
            <leaf name="inet6.0">
              <description>
                <text>Install Egress-TE routes in inet6.0</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <leaf name="no-install">
            <description>
              <text>Avoid installation to FIB or resolving over</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf-list name="import">
            <ordered-by value="user"/>
            <description>
              <text>Import policy to set attributes</text>
            </description>
            <type name="jt:policy-algebra"/>
          </leaf-list>
          <leaf name="backup-path">
            <description>
              <text>The 'egress-te-backup-paths template' to use for this peer</text>
            </description>
            <type name="string"/>
          </leaf>
        </container>
      </list>
      <leaf name="vpn-apply-export">
        <description>
          <text>Apply BGP export policy when exporting VPN routes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="egress-te">
        <presence value="enable egress-te"/>
        <description>
          <text>Use Egress Peering traffic engineering</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="install-address">
          <description>
            <text>Address to use in egress-te created inet route</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf>
        <container name="rib">
          <description>
            <text>Select primary table for Egress-TE routes</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="inet.0">
            <description>
              <text>Install Egress-TE routes in inet.0</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="inet6.0">
            <description>
              <text>Install Egress-TE routes in inet6.0</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="no-install">
          <description>
            <text>Avoid installation to FIB or resolving over</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf-list name="import">
          <ordered-by value="user"/>
          <description>
            <text>Import policy to set attributes</text>
          </description>
          <type name="jt:policy-algebra"/>
        </leaf-list>
        <leaf name="backup-path">
          <description>
            <text>The 'egress-te-backup-paths template' to use for this peer</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
    </list>
    <container name="traffic-statistics-labeled-path">
      <presence value="enable traffic-statistics-labeled-path"/>
      <description>
        <text>Collect periodic ingress labeled statistics for BGP label-switched paths </text>
      </description>
      <uses name="apply-advanced"/>
      <container name="file">
        <description>
          <text>Statistics file options</text>
        </description>
        <leaf name="filename">
          <description>
            <text>Name of file in which to write trace information</text>
          </description>
          <type name="string">
            <length value="1 .. 1024"/>
          </type>
        </leaf>
        <leaf name="replace">
          <description>
            <text>Replace trace file rather than appending to it</text>
          </description>
          <status value="deprecated"/>
          <type name="empty"/>
        </leaf>
        <leaf name="size">
          <description>
            <text>Maximum trace file size</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="files">
          <description>
            <text>Maximum number of trace files</text>
          </description>
          <default value="10"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="2 .. 1000"/>
            </type>
          </type>
        </leaf>
        <leaf name="no-stamp">
          <description>
            <text>Do not timestamp trace file</text>
          </description>
          <status value="deprecated"/>
          <type name="empty"/>
        </leaf>
        <choice name="world-readable-choice">
          <leaf name="world-readable">
            <description>
              <text>Allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-world-readable">
            <description>
              <text>Don't allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
      </container>
      <leaf name="interval">
        <description>
          <text>Time interval to collect statistics</text>
        </description>
        <units name="seconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="60 .. 65535"/>
          </type>
        </type>
      </leaf>
    </container>
    <choice name="enable-disable">
      <case name="case_1">
        <leaf name="disable">
          <description>
            <text>Disable BGP</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <choice name="precision-timers-choice">
      <leaf name="precision-timers">
        <description>
          <text>Use precision timers for scheduling keepalives</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="no-precision-timers">
        <description>
          <text>Don't use precision timers for scheduling keepalives</text>
        </description>
        <type name="empty"/>
      </leaf>
    </choice>
    <container name="snmp-options">
      <description>
        <text>Customize SNMP behaviors specifically for BGP MIBs</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="backward-traps-only-from-established">
        <description>
          <text>Limit traps for backward transitions to only those moving from Established state.</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="emit-inet-address-length-in-oid">
        <description>
          <text>Emit Length in OID for InetAddress MIB type.</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="prioritize-route-queueing">
      <description>
        <text>Let route-queue building happen without getting throttled</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="traceoptions">
      <description>
        <text>Trace options for BGP</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="file">
        <description>
          <text>Trace file options</text>
        </description>
        <leaf name="filename">
          <description>
            <text>Name of file in which to write trace information</text>
          </description>
          <type name="string">
            <length value="1 .. 1024"/>
          </type>
        </leaf>
        <leaf name="replace">
          <description>
            <text>Replace trace file rather than appending to it</text>
          </description>
          <status value="deprecated"/>
          <type name="empty"/>
        </leaf>
        <leaf name="size">
          <description>
            <text>Maximum trace file size</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="files">
          <description>
            <text>Maximum number of trace files</text>
          </description>
          <default value="10"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="2 .. 1000"/>
            </type>
          </type>
        </leaf>
        <leaf name="no-stamp">
          <description>
            <text>Do not timestamp trace file</text>
          </description>
          <status value="deprecated"/>
          <type name="empty"/>
        </leaf>
        <choice name="world-readable-choice">
          <leaf name="world-readable">
            <description>
              <text>Allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-world-readable">
            <description>
              <text>Don't allow any user to read the log file</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
      </container>
      <list name="flag">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Tracing parameters</text>
        </description>
        <leaf name="name">
          <type name="enumeration">
            <enum name="damping">
              <description>
                <text>Trace BGP damping information</text>
              </description>
            </enum>
            <enum name="packets">
              <description>
                <text>Trace all BGP protocol packets</text>
              </description>
            </enum>
            <enum name="open">
              <description>
                <text>Trace BGP open packets</text>
              </description>
            </enum>
            <enum name="update">
              <description>
                <text>Trace BGP update packets</text>
              </description>
            </enum>
            <enum name="keepalive">
              <description>
                <text>Trace BGP keepalive packets</text>
              </description>
            </enum>
            <enum name="refresh">
              <description>
                <text>Trace BGP refresh packets</text>
              </description>
            </enum>
            <enum name="nsr-synchronization">
              <description>
                <text>Trace NSR synchronization events</text>
              </description>
            </enum>
            <enum name="bfd">
              <description>
                <text>Trace BFD events</text>
              </description>
            </enum>
            <enum name="4byte-as">
              <description>
                <text>Trace 4 byte AS events</text>
              </description>
            </enum>
            <enum name="add-path">
              <description>
                <text>Trace add-path events</text>
              </description>
            </enum>
            <enum name="graceful-restart">
              <description>
                <text>Trace Graceful Restart events</text>
              </description>
            </enum>
            <enum name="egress-te">
              <description>
                <text>Egress Peering Traffic-Engineering events</text>
              </description>
            </enum>
            <enum name="thread-io">
              <description>
                <text>Trace threaded I/O processing</text>
              </description>
            </enum>
            <enum name="sharding">
              <description>
                <text>Trace BGP rib sharding</text>
              </description>
            </enum>
            <enum name="thread-update-io">
              <description>
                <text>Trace threaded update I/O processing</text>
              </description>
            </enum>
            <enum name="route">
              <description>
                <text>Trace routing information</text>
              </description>
            </enum>
            <enum name="normal">
              <description>
                <text>Trace normal events</text>
              </description>
            </enum>
            <enum name="general">
              <description>
                <text>Trace general events</text>
              </description>
            </enum>
            <enum name="state">
              <description>
                <text>Trace state transitions</text>
              </description>
            </enum>
            <enum name="policy">
              <description>
                <text>Trace policy processing</text>
              </description>
            </enum>
            <enum name="task">
              <description>
                <text>Trace routing protocol task processing</text>
              </description>
            </enum>
            <enum name="timer">
              <description>
                <text>Trace routing protocol timer processing</text>
              </description>
            </enum>
            <enum name="all">
              <description>
                <text>Trace everything</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="send">
          <description>
            <text>Trace transmitted packets</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="receive">
          <description>
            <text>Trace received packets</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="detail">
          <description>
            <text>Trace detailed information</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="disable">
          <description>
            <text>Disable this trace flag</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="filter">
          <description>
            <text>Filter to apply to this flag</text>
          </description>
          <presence value="enable filter"/>
          <uses name="bgp_filter_obj"/>
        </container>
      </list>
    </container>
    <leaf name="description">
      <description>
        <text>Text description</text>
      </description>
      <type name="string">
        <length value="1 .. 255"/>
      </type>
    </leaf>
    <container name="metric-out">
      <description>
        <text>Route metric sent in MED</text>
      </description>
      <choice name="metric_param">
        <case name="case_1">
          <leaf name="metric-value">
            <description>
              <text>Metric value</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 4294967295"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <container name="minimum-igp">
            <presence value="enable minimum-igp"/>
            <description>
              <text>Track the minimum IGP metric</text>
            </description>
            <leaf name="metric-offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_3">
          <container name="igp">
            <presence value="enable igp"/>
            <description>
              <text>Track the IGP metric</text>
            </description>
            <leaf name="metric-offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
            <leaf name="delay-med-update">
              <description>
                <text>Delay updating MED when IGP metric increases</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
        </case>
      </choice>
    </container>
    <container name="multihop">
      <presence value="enable multihop"/>
      <description>
        <text>Configure an EBGP multihop session</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="ttl">
        <description>
          <text>TTL value for the session</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint8">
            <range value="1 .. 255"/>
          </type>
        </type>
      </leaf>
      <leaf name="no-nexthop-change">
        <description>
          <text>Do not change next hop to self in advertisements</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="route-server-client">
      <description>
        <text>Enable route server client behavior</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="accept-remote-nexthop">
      <description>
        <text>Allow import policy to specify a non-directly connected next-hop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="preference">
      <description>
        <text>Preference value</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="local-preference">
      <description>
        <text>Value of LOCAL_PREF path attribute</text>
      </description>
      <type name="union">
        <type name="uint32"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="local-address">
      <description>
        <text>Address of local end of BGP session</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf>
    <leaf name="local-interface">
      <description>
        <text>Local interface for IPv6 link local EBGP peering</text>
      </description>
      <type name="union">
        <type name="jt:interface-name"/>
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
      </type>
    </leaf>
    <leaf name="forwarding-context">
      <description>
        <text>Routing-instance used for data-forwarding and transport-session</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="hold-time">
      <description>
        <text>Hold time used when negotiating with a peer</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 65535"/>
        </type>
      </type>
    </leaf>
    <leaf name="minimum-hold-time">
      <description>
        <text>Minimum hold time accepted from the peer</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="3 .. 65535"/>
        </type>
      </type>
    </leaf>
    <leaf name="passive">
      <description>
        <text>Do not send open messages to a peer</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="advertise-inactive">
      <description>
        <text>Advertise inactive routes</text>
      </description>
      <type name="empty"/>
    </leaf>
    <choice name="advertise-peer-as-choice">
      <leaf name="advertise-peer-as">
        <description>
          <text>Advertise routes received from the same autonomous system</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="no-advertise-peer-as">
        <description>
          <text>Don't advertise routes received from the same autonomous system</text>
        </description>
        <type name="empty"/>
      </leaf>
    </choice>
    <container name="advertise-external">
      <presence value="enable advertise-external"/>
      <description>
        <text>Advertise best external routes</text>
      </description>
      <leaf name="conditional">
        <description>
          <text>Route matches active route upto med-comparison rule</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="keep">
      <description>
        <text>How to retain routes in the routing table</text>
      </description>
      <type name="enumeration">
        <enum name="all">
          <description>
            <text>Retain all routes</text>
          </description>
        </enum>
        <enum name="none">
          <description>
            <text>Retain no routes</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="rfc6514-compliant-safi129">
      <description>
        <text>Compliant with RFC6514 SAFI129 format</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-aggregator-id">
      <description>
        <text>Set router ID in aggregator path attribute to 0</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="mtu-discovery">
      <description>
        <text>Enable TCP path MTU discovery</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="enforce-first-as">
      <description>
        <text>Enforce first AS in AS-path is the neighbor's AS</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="out-delay">
      <description>
        <text>How long before exporting routes from routing table</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 65535"/>
        </type>
      </type>
    </leaf>
    <leaf name="ttl">
      <description>
        <text>TTL value for the single-hop peer</text>
      </description>
      <type name="enumeration">
        <enum name="1"/>
        <enum name="255"/>
      </type>
    </leaf>
    <leaf name="log-updown">
      <description>
        <text>Log a message for peer state transitions</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf-list name="import">
      <ordered-by value="user"/>
      <description>
        <text>Import policy</text>
      </description>
      <type name="jt:policy-algebra"/>
    </leaf-list>
    <leaf-list name="nlri">
      <ordered-by value="user"/>
      <description>
        <text>NLRI type to include in updates</text>
      </description>
      <status value="deprecated"/>
      <type name="enumeration">
        <enum name="unicast">
          <description>
            <text>Include unicast NLRI</text>
          </description>
          <status value="deprecated"/>
        </enum>
        <enum name="multicast">
          <description>
            <text>Include multicast NLRI</text>
          </description>
          <status value="deprecated"/>
        </enum>
        <enum name="any">
          <description>
            <text>Include any kind of NLRI</text>
          </description>
          <status value="deprecated"/>
        </enum>
      </type>
    </leaf-list>
    <container name="bgp-error-tolerance">
      <presence value="enable bgp-error-tolerance"/>
      <description>
        <text>Handle BGP malformed updates softly</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="malformed-update-log-interval">
        <description>
          <text>Time used when logging malformed update</text>
        </description>
        <default value="300"/>
        <units name="seconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="10 .. 65535"/>
          </type>
        </type>
      </leaf>
      <choice name="malformed-routes-limit-choice">
        <case name="case_1">
          <leaf name="malformed-route-limit">
            <description>
              <text>Maximum number of malformed routes from a peer</text>
            </description>
            <default value="1000"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 4294967295"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="no-malformed-route-limit">
            <description>
              <text>No malformed route limit</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="authentication-key">
      <description>
        <text>MD5 authentication key</text>
      </description>
      <type name="string">
        <length value="1 .. 126"/>
      </type>
    </leaf>
    <leaf name="authentication-algorithm">
      <description>
        <text>Authentication algorithm name</text>
      </description>
      <default value="hmac-sha-1-96"/>
      <type name="enumeration">
        <enum name="md5">
          <description>
            <text>Message Digest 5</text>
          </description>
        </enum>
        <enum name="hmac-sha-1-96">
          <description>
            <text>Hash-based Message Authentication Code (SHA1) (96 bits)</text>
          </description>
        </enum>
        <enum name="aes-128-cmac-96">
          <description>
            <text>Cipher-based Message Authentication Code (AES128) (96 bits)</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="authentication-key-chain">
      <description>
        <text>Key chain name</text>
      </description>
      <type name="string">
        <length value="1 .. 128"/>
      </type>
    </leaf>
    <leaf-list name="export">
      <ordered-by value="user"/>
      <description>
        <text>Export policy</text>
      </description>
      <type name="jt:policy-algebra"/>
    </leaf-list>
    <container name="remove-private">
      <presence value="enable remove-private"/>
      <description>
        <text>Remove well-known private AS numbers</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="all">
        <presence value="enable all"/>
        <description>
          <text>Remove all private AS numbers and do not stop at the first public AS number</text>
        </description>
        <container name="replace">
          <presence value="enable replace"/>
          <description>
            <text>Replace private AS numbers with the BGP Group's local AS number</text>
          </description>
          <leaf name="nearest">
            <description>
              <text>Use closest public AS number to replace a private AS number</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
      </container>
      <leaf name="no-peer-loop-check">
        <description>
          <text>Remove peer loop-check</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="cluster">
      <description>
        <text>Cluster identifier</text>
      </description>
      <type name="jt:areaid"/>
    </leaf>
    <leaf name="no-client-reflect">
      <description>
        <text>Disable intracluster route redistribution</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="peer-as">
      <description>
        <text> Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' (asdot notation) format</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="local-as">
      <description>
        <text>Local autonomous system number</text>
      </description>
      <leaf name="as-number">
        <description>
          <text> Autonomous system number in plain number or 'higher 16bits'.'Lower 16 bits' (asdot notation) format</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="loops">
        <description>
          <text>Maximum number of times this AS can be in an AS path</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="1 .. 10"/>
          </type>
        </type>
      </leaf>
      <leaf name="private">
        <description>
          <text>Hide this local AS in paths learned from this peering</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="alias">
        <description>
          <text>Treat this AS as an alias to the system AS</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="no-prepend-global-as">
        <description>
          <text>Do not prepend global autonomous-system number in advertised paths</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="ipsec-sa">
      <description>
        <text>IPSec SA name</text>
      </description>
      <type name="string">
        <length value="1 .. 32"/>
      </type>
    </leaf>
    <container name="graceful-shutdown">
      <description>
        <text>BGP peer graceful shutdown option</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="receiver">
        <presence value="enable receiver"/>
        <description>
          <text>BGP peer graceful-shutdown receiver</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="disable">
          <description>
            <text>Disable graceful-shutdown receiver</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="local-preference">
          <description>
            <text>Value of receiver LOCAL_PREF path attribute</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="sender">
        <presence value="enable sender"/>
        <description>
          <text>BGP peer graceful-shutdown sender</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="local-preference">
          <description>
            <text>Value of sender LOCAL_PREF path attribute</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="shutdown">
      <presence value="enable shutdown"/>
      <description>
        <text>Shutdown</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="notify-message">
        <description>
          <text>Notification message</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <leaf name="unconfigured-peer-graceful-restart">
      <description>
        <text>BGP unconfigured peer graceful restart options</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="graceful-restart">
      <presence value="enable graceful-restart"/>
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="enable-disable">
        <case name="case_1">
          <leaf name="disable">
            <description>
              <text>Disable graceful restart</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <leaf name="restart-time">
        <description>
          <text>Restart time used when negotiating with a peer</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 1800"/>
          </type>
        </type>
      </leaf>
      <leaf name="stale-routes-time">
        <description>
          <text>Maximum time for which stale routes are kept</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 1800"/>
          </type>
        </type>
      </leaf>
      <container name="long-lived">
        <description>
          <text>Long-lived graceful restart options</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="receiver">
          <description>
            <text>Long-lived graceful restart receiver (helper) options</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="enable-disable">
            <case name="case_1">
              <leaf name="disable">
                <description>
                  <text>Disable receiver (helper) functionality</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="advertise-to-non-llgr-neighbor">
          <presence value="enable advertise-to-non-llgr-neighbor"/>
          <description>
            <text>Advertise stale routes to non-LLGR neighbors</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="omit-no-export">
            <description>
              <text>Do not attach no-export community to stale routes</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
      </container>
      <leaf name="disable-notification-extensions">
        <description>
          <text>Disable notification extensions</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="forwarding-state-bit">
        <description>
          <text>Control forwarding-state flag negotiation</text>
        </description>
        <type name="enumeration">
          <enum name="as-rr-client">
            <description>
              <text>As for a route reflector client</text>
            </description>
          </enum>
          <enum name="from-fib">
            <description>
              <text>Always use state of associated FIB(s)</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="dont-help-shared-fate-bfd-down">
        <description>
          <text>Honor BFD-Down(C=0) if GR-restart not in progress</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="include-mp-next-hop">
      <description>
        <text>Include NEXT-HOP attribute in multiprotocol updates</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="disable-4byte-as">
      <description>
        <text>Disable 4 byte AS capability advertisement</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="idle-after-switch-over">
      <description>
        <text>Stop peer session from coming up after nonstop-routing switch-over</text>
      </description>
      <choice name="idle-interval">
        <case name="case_1">
          <leaf name="forever">
            <description>
              <text>Idle the peer until the user intervenes</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="timeout">
            <description>
              <text>Timeout value, in seconds, for starting peer after switch over</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 4294967295"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="outbound-route-filter">
      <description>
        <text>Dynamically negotiated cooperative route filtering</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="bgp-orf-cisco-mode">
        <description>
          <text>Using BGP ORF capability code 130 and Prefix ORF type 128</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="extended-community">
        <description>
          <text>Extended community filtering</text>
        </description>
        <status value="deprecated"/>
        <uses name="apply-advanced"/>
        <choice name="accept-choice">
          <leaf name="accept">
            <description>
              <text>Honor remote requests for extended community ORF</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-accept">
            <description>
              <text>Don't honor remote requests for extended community ORF</text>
            </description>
            <type name="empty"/>
          </leaf>
        </choice>
        <leaf name="vrf-filter">
          <description>
            <text>Request remote filtering using locally configured VRF import targets</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <container name="prefix-based">
        <presence value="enable prefix-based"/>
        <description>
          <text>Prefix-based outbound route filtering</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="accept">
          <presence value="enable accept"/>
          <description>
            <text>Honor Prefix-based ORFs from remote peers</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="inet">
            <description>
              <text>Honor IPv4 prefix filters</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="inet6">
            <description>
              <text>Honor IPv6 prefix filters</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
      </container>
    </container>
    <container name="message-batching">
      <description>
        <text>DEPRECATED - Batching of outgoing messages</text>
      </description>
      <status value="deprecated"/>
      <uses name="apply-advanced"/>
      <choice name="enable-disable">
        <case name="case_1">
          <leaf name="enable">
            <description>
              <text>Enable parameter</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="disable">
            <description>
              <text>Disable parameter</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <leaf name="interval">
        <description>
          <text>DEPRECATED - Interval over which to batch messages</text>
        </description>
        <default value="250"/>
        <units name="milliseconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="100 .. 1000"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="multipath">
      <presence value="enable multipath"/>
      <description>
        <text>Allow load sharing among multiple BGP paths</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="disable">
        <description>
          <text>Disable Multipath</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="multiple-as">
        <description>
          <text>Use paths received from different ASs</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="allow-protection">
        <description>
          <text>Allow protection for multipath legs</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="tcp-mss">
      <description>
        <text>Maximum TCP segment size</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="1 .. 4096"/>
        </type>
      </type>
    </leaf>
    <leaf name="tcp-aggressive-transmission">
      <description>
        <text>Enable aggressive transmission of pure TCP ACKs and retransmissions</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="bmp">
      <description>
        <text>Specific settings to override the routing-options settings</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="monitor">
        <description>
          <text>Enable/Disable monitoring</text>
        </description>
        <type name="enumeration">
          <enum name="enable">
            <description>
              <text>Enable monitoring of BGP peer(s)</text>
            </description>
          </enum>
          <enum name="disable">
            <description>
              <text>Disable monitoring of BGP peer(s)</text>
            </description>
          </enum>
        </type>
      </leaf>
      <container name="route-monitoring">
        <description>
          <text>Control route monitoring settings</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="none">
          <description>
            <text>Do not send route monitoring messages</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="pre-policy">
          <presence value="enable pre-policy"/>
          <description>
            <text>Send pre-policy route monitoring messages</text>
          </description>
          <leaf name="exclude-non-feasible">
            <description>
              <text>Exclude looped routes, etc</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <container name="post-policy">
          <presence value="enable post-policy"/>
          <description>
            <text>Send post-policy route monitoring messages</text>
          </description>
          <leaf name="exclude-non-eligible">
            <description>
              <text>Exclude unresolved routes, etc.</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <container name="rib-out">
          <presence value="enable rib-out"/>
          <description>
            <text>Send adj-ribs-out route monitoring messages</text>
          </description>
          <leaf name="pre-policy">
            <description>
              <text>Send pre-policy adj-ribs-out route monitoring messages</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="post-policy">
            <description>
              <text>Send post-policy adj-ribs-out route monitoring messages</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
      </container>
    </container>
    <container name="advertise-bgp-static">
      <presence value="enable advertise-bgp-static"/>
      <description>
        <text>Advertise bgp-static routes</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf-list name="policy">
        <ordered-by value="user"/>
        <description>
          <text>Static route advertisement policy</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
    </container>
    <leaf name="add-path-display-ipv4-address">
      <description>
        <text>Display add-path path-id in IPv4 address format</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="bfd-liveness-detection">
      <description>
        <text>Bidirectional Forwarding Detection (BFD) options</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="version">
        <description>
          <text>BFD protocol version number</text>
        </description>
        <default value="automatic"/>
        <type name="enumeration">
          <enum name="0">
            <description>
              <text>BFD version 0 (deprecated)</text>
            </description>
          </enum>
          <enum name="1">
            <description>
              <text>BFD version 1</text>
            </description>
          </enum>
          <enum name="automatic">
            <description>
              <text>Choose BFD version automatically</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="minimum-interval">
        <description>
          <text>Minimum transmit and receive interval</text>
        </description>
        <units name="milliseconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 255000"/>
          </type>
        </type>
      </leaf>
      <leaf name="minimum-transmit-interval">
        <description>
          <text>Minimum transmit interval</text>
        </description>
        <status value="deprecated"/>
        <units name="milliseconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 255000"/>
          </type>
        </type>
      </leaf>
      <leaf name="minimum-receive-interval">
        <description>
          <text>Minimum receive interval</text>
        </description>
        <units name="milliseconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 255000"/>
          </type>
        </type>
      </leaf>
      <leaf name="multiplier">
        <description>
          <text>Detection time multiplier</text>
        </description>
        <default value="3"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 255"/>
          </type>
        </type>
      </leaf>
      <choice name="adaptation-choice">
        <case name="case_1">
          <leaf name="no-adaptation">
            <description>
              <text>Disable adaptation</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <container name="transmit-interval">
        <description>
          <text>Transmit-interval options</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="minimum-interval">
          <description>
            <text>Minimum transmit interval</text>
          </description>
          <units name="milliseconds"/>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255000"/>
            </type>
          </type>
        </leaf>
        <leaf name="threshold">
          <description>
            <text>High transmit interval triggering a trap</text>
          </description>
          <units name="milliseconds"/>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="detection-time">
        <description>
          <text>Detection-time options</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="threshold">
          <description>
            <text>High detection-time triggering a trap</text>
          </description>
          <units name="milliseconds"/>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="authentication">
        <description>
          <text>Authentication options</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="key-chain">
          <description>
            <text>Key chain name</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="algorithm">
          <description>
            <text>Algorithm name</text>
          </description>
          <type name="enumeration">
            <enum name="simple-password">
              <description>
                <text>Simple password</text>
              </description>
            </enum>
            <enum name="keyed-md5">
              <description>
                <text>Keyed message Digest 5</text>
              </description>
            </enum>
            <enum name="meticulous-keyed-md5">
              <description>
                <text>Meticulous keyed message Digest 5</text>
              </description>
            </enum>
            <enum name="keyed-sha-1">
              <description>
                <text>Keyed secure hash algorithm (SHA1) </text>
              </description>
            </enum>
            <enum name="meticulous-keyed-sha-1">
              <description>
                <text>Meticulous keyed secure hash algorithm (SHA1) </text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="loose-check">
          <description>
            <text>Verify authentication only if authentication is negotiated</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
      <leaf name="session-mode">
        <description>
          <text>BFD single-hop or multihop session-mode</text>
        </description>
        <default value="automatic"/>
        <type name="enumeration">
          <enum name="automatic">
            <description>
              <text>Choose session-mode automatically</text>
            </description>
          </enum>
          <enum name="single-hop">
            <description>
              <text>Use single-hop</text>
            </description>
          </enum>
          <enum name="multihop">
            <description>
              <text>Use multihop</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="holddown-interval">
        <description>
          <text>Time to hold the session-UP notification to the client</text>
        </description>
        <units name="milliseconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 255000"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="output-queue-priority">
      <description>
        <text>BGP output queue priority scheduler for updates</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="expedited">
        <presence value="enable expedited"/>
        <description>
          <text>Expedited queue; highest priority</text>
        </description>
        <leaf name="update-tokens">
          <description>
            <text>Number of tokens</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 100"/>
            </type>
          </type>
        </leaf>
      </container>
      <list name="priority">
        <key value="name"/>
        <description>
          <text>Output queue priority 1..16; higher is better</text>
        </description>
        <leaf name="name">
          <description>
            <text>Output queue priority; higher is better</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 16"/>
            </type>
          </type>
        </leaf>
        <leaf name="update-tokens">
          <description>
            <text>Number of tokens</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 100"/>
            </type>
          </type>
        </leaf>
      </list>
      <container name="defaults">
        <description>
          <text>Map policy's priority class and BGP output-queue</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="low">
          <description>
            <text>Assign the 'low' priority class to this output-queue</text>
          </description>
          <uses name="bgp-output-queue-priority-class"/>
        </container>
        <container name="medium">
          <description>
            <text>Assign the 'medium' priority class to this output-queue</text>
          </description>
          <uses name="bgp-output-queue-priority-class"/>
        </container>
        <container name="high">
          <description>
            <text>Assign the 'high' priority class to this output-queue</text>
          </description>
          <uses name="bgp-output-queue-priority-class"/>
        </container>
      </container>
    </container>
    <container name="multipath-build-priority">
      <description>
        <text>Configure the multipath build priority</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="multipath-priority">
        <case name="case_1">
          <leaf name="low">
            <description>
              <text>Do multipath build with low priority</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="medium">
            <description>
              <text>Do multipath build with medium priority</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="send-addpath-optimization">
      <description>
        <text>Enable BGP addpath advertisement optimization</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="bgp-af-gr">
    <uses name="apply-advanced"/>
    <container name="long-lived">
      <description>
        <text>Long-lived graceful restart options</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="restarter">
        <description>
          <text>Long-lived graceful restart restarter options</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="enable-disable">
          <case name="case_1">
            <leaf name="disable">
              <description>
                <text>Disable restarter functionality</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <leaf name="stale-time">
          <description>
            <text>Stale time in seconds or dhms notation (1..16777215)</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
    </container>
    <leaf name="forwarding-state-bit">
      <description>
        <text>Control forwarding-state flag negotiation</text>
      </description>
      <type name="enumeration">
        <enum name="set">
          <description>
            <text>Always set</text>
          </description>
        </enum>
        <enum name="from-fib">
          <description>
            <text>Use state of associated FIB(s)</text>
          </description>
        </enum>
      </type>
    </leaf>
  </grouping>
  <grouping name="bgp-afi-default">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
  </grouping>
  <grouping name="apath-options">
    <description>
      <text>Number of paths to advertise</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="receive">
      <description>
        <text>Receive multiple paths from peer</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="send">
      <presence value="enable send"/>
      <description>
        <text>Send multiple paths to peer</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="path-selection-mode">
        <description>
          <text>Configure how to select add-path routes</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="mode">
          <case name="case_1">
            <leaf name="all-paths">
              <description>
                <text>Advertise all paths allowed by path count</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="equal-cost-paths">
              <description>
                <text>Advertise equal cost paths</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
      </container>
      <leaf-list name="prefix-policy">
        <ordered-by value="user"/>
        <description>
          <text>Perform add-path only for prefixes that match policy</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
      <leaf name="path-count">
        <description>
          <text>Number of paths to advertise</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="2 .. 64"/>
          </type>
        </type>
      </leaf>
      <leaf name="include-backup-path">
        <description>
          <text>Number of backup paths to advertise</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="1 .. 2"/>
          </type>
        </type>
      </leaf>
      <leaf name="multipath">
        <description>
          <text>Include only multipath contributor routes</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-afi-flow">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <leaf-list name="no-validate">
      <ordered-by value="user"/>
      <description>
        <text>Bypass validation procedure for routes that match policy</text>
      </description>
      <type name="jt:policy-algebra"/>
    </leaf-list>
    <leaf name="strip-nexthop">
      <description>
        <text>Strip the next-hop from the outgoing flow update</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="allow-policy-add-nexthop">
      <description>
        <text>Allow policy to add nexthop to a route without nexthop</text>
      </description>
      <status value="deprecated"/>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="bgp-afi-flow-with-redirect-ip-action">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <leaf-list name="no-validate">
      <ordered-by value="user"/>
      <description>
        <text>Bypass validation procedure for routes that match policy</text>
      </description>
      <type name="jt:policy-algebra"/>
    </leaf-list>
    <leaf name="strip-nexthop">
      <description>
        <text>Strip the next-hop from the outgoing flow update</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="legacy-redirect-ip-action">
      <presence value="enable legacy-redirect-ip-action"/>
      <description>
        <text>Configure legacy redirect to IP support</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="receive">
        <description>
          <text>Accept legacy encoded redirect-to-ip action attribute</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="send">
        <description>
          <text>Advertise Redirect action as legacy redirect attribute</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="secondary-independent-resolution">
      <description>
        <text>Resolve FLOW routes in VRF table independent of VPN FLOW route</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="bgp-afi-inet6-labeled">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="aggregate-label">
      <presence value="enable aggregate-label"/>
      <description>
        <text>Aggregate labels of incoming routes with the same FEC</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="community">
        <description>
          <text>Community to identify the FEC of incoming routes</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <leaf name="per-group-label">
      <description>
        <text>Advertise prefixes with unique labels per group</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="traffic-statistics">
      <description>
        <text>Collect statistics for BGP label-switched paths</text>
      </description>
      <presence value="enable traffic-statistics"/>
      <uses name="bgpaf-traffic-statistics"/>
    </container>
    <container name="rib">
      <description>
        <text>Select table used by labeled unicast routes</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="inet6.3">
        <description>
          <text>Use inet6.3 to exchange labeled unicast routes</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="explicit-null">
      <presence value="enable explicit-null"/>
      <description>
        <text>Advertise explicit null</text>
      </description>
      <leaf name="connected-only">
        <description>
          <text>Advertise explicit null only for connected routes</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="protection">
      <presence value="enable protection"/>
      <description>
        <text>Compute backup path for active nexthop failure</text>
      </description>
    </container>
    <list name="topology">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Multi topology routing tables</text>
      </description>
      <leaf name="name">
        <description>
          <text>Topology name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="community">
        <description>
          <text>Community to identify multi topology routes</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
  </grouping>
  <grouping name="bgp-afi-l2vpn">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="egress-protection">
      <presence value="enable egress-protection"/>
      <description>
        <text>Egress router protection</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="context-identifier">
        <description>
          <text>Context identifier</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="context-id">
          <description>
            <text>IP address</text>
          </description>
          <type name="jt:ipv4addr"/>
        </leaf>
      </container>
      <leaf-list name="keep-import">
        <ordered-by value="user"/>
        <description>
          <text>Import policy</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
    </container>
  </grouping>
  <grouping name="bgp-afi-l3vpn">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="aggregate-label">
      <presence value="enable aggregate-label"/>
      <description>
        <text>Aggregate labels of incoming routes with the same FEC</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="community">
        <description>
          <text>Community to identify the FEC of incoming routes</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <container name="egress-protection">
      <presence value="enable egress-protection"/>
      <description>
        <text>Egress router protection</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="context-identifier">
        <description>
          <text>Context identifier</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="context-id">
          <description>
            <text>IP address</text>
          </description>
          <type name="jt:ipv4addr"/>
        </leaf>
      </container>
      <leaf-list name="keep-import">
        <ordered-by value="user"/>
        <description>
          <text>Import policy</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
    </container>
    <leaf name="accept-local-nexthop">
      <description>
        <text>Enable processing of routes with own nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="bgp-afi-labeled">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="aggregate-label">
      <presence value="enable aggregate-label"/>
      <description>
        <text>Aggregate labels of incoming routes with the same FEC</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="community">
        <description>
          <text>Community to identify the FEC of incoming routes</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <leaf name="per-prefix-label">
      <description>
        <text>Allocate a unique label to each advertised prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="per-group-label">
      <description>
        <text>Advertise prefixes with unique labels per group</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="traffic-statistics">
      <description>
        <text>Collect statistics for BGP label-switched paths</text>
      </description>
      <presence value="enable traffic-statistics"/>
      <uses name="bgpaf-traffic-statistics"/>
    </container>
    <list name="topology">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Multi topology routing tables</text>
      </description>
      <leaf name="name">
        <description>
          <text>Topology name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="community">
        <description>
          <text>Community to identify multi topology routes</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <container name="rib">
      <description>
        <text>Select table used by labeled unicast routes</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="inet.3">
        <description>
          <text>Use inet.3 to exchange labeled unicast routes</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="explicit-null">
      <presence value="enable explicit-null"/>
      <description>
        <text>Advertise explicit null</text>
      </description>
      <leaf name="connected-only">
        <description>
          <text>Advertise explicit null only for connected routes</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="protection">
      <presence value="enable protection"/>
      <description>
        <text>Compute backup path for active nexthop failure</text>
      </description>
      <uses name="apply-advanced"/>
    </container>
    <container name="egress-protection">
      <presence value="enable egress-protection"/>
      <description>
        <text>Egress router protection</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="context-identifier">
        <description>
          <text>Context identifier</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="context-id">
          <description>
            <text>IP address</text>
          </description>
          <type name="jt:ipv4addr"/>
        </leaf>
      </container>
      <leaf-list name="keep-import">
        <ordered-by value="user"/>
        <description>
          <text>Import policy</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
    </container>
    <leaf name="resolve-vpn">
      <description>
        <text>Install received NLRI in inet.3 also</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="entropy-label">
      <presence value="enable entropy-label"/>
      <description>
        <text>Use entropy label for entropy label capable BGP LSPs</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf-list name="import">
        <ordered-by value="user"/>
        <description>
          <text>Policy to select BGP LSPs to use entropy label</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
      <leaf name="no-next-hop-validation">
        <description>
          <text>Don't validate next hop field against route next hop</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-afi-srte">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
  </grouping>
  <grouping name="bgp-afi-topo">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="protection">
      <presence value="enable protection"/>
      <description>
        <text>Compute backup path for active nexthop failure</text>
      </description>
    </container>
    <list name="topology">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Multi topology routing tables</text>
      </description>
      <leaf name="name">
        <description>
          <text>Topology name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="community">
        <description>
          <text>Community to identify multi topology routes</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
  </grouping>
  <grouping name="bgp-afi-vpn">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="aggregate-label">
      <presence value="enable aggregate-label"/>
      <description>
        <text>Aggregate labels of incoming routes with the same FEC</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="community">
        <description>
          <text>Community to identify the FEC of incoming routes</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="bgp-afi-vpn-protection">
    <uses name="apply-advanced"/>
    <container name="prefix-limit">
      <description>
        <text>Limit maximum number of prefixes from a peer</text>
      </description>
      <uses name="bgpaf-prefix-limit"/>
    </container>
    <container name="accepted-prefix-limit">
      <description>
        <text>Limit maximum number of prefixes accepted from a peer</text>
      </description>
      <uses name="bgpaf-accepted-prefix-limit"/>
    </container>
    <container name="rib-group">
      <description>
        <text>Routing table group</text>
      </description>
      <uses name="rib_group_inet_type"/>
    </container>
    <container name="add-path">
      <description>
        <text>Advertise multiple paths to peer</text>
      </description>
      <uses name="apath-options"/>
    </container>
    <container name="aigp">
      <description>
        <text>Allow sending and receiving of AIGP attribute</text>
      </description>
      <presence value="enable aigp"/>
      <uses name="bgpaf-aigp-options"/>
    </container>
    <leaf name="damping">
      <description>
        <text>Enable route flap damping</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="local-ipv4-address">
      <description>
        <text>Local IPv4 address</text>
      </description>
      <type name="jt:ipv4addr"/>
    </leaf>
    <container name="loops">
      <description>
        <text>Allow local AS in received AS paths</text>
      </description>
      <uses name="bgpaf-loops"/>
    </container>
    <container name="delay-route-advertisements">
      <presence value="enable delay-route-advertisements"/>
      <description>
        <text>Delay route updates for this family until FIB-sync</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="always-wait-for-krt-drain">
        <description>
          <text>Wait for KRT-queue drain for more-specific prefixes</text>
        </description>
        <type name="empty"/>
      </leaf>
      <container name="minimum-delay">
        <description>
          <text>Minumum-delay to ensure KRT sees the route flash</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="routing-uptime">
          <description>
            <text>Min delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="inbound-convergence">
          <description>
            <text>Min delay(sec) advertisement after source-peer sent all routes</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
      <container name="maximum-delay">
        <description>
          <text>Maximum delay deferring routes</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="route-age">
          <description>
            <text>Max delay(sec) advertisement route age</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
        <leaf name="routing-uptime">
          <description>
            <text>Max delay(sec) advertisement after RPD start</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 36000"/>
            </type>
          </type>
        </leaf>
      </container>
    </container>
    <container name="nexthop-resolution">
      <description>
        <text>Configure nexthop resolution properties</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="no-resolution">
        <description>
          <text>Consider nexthop good without resolution attempt</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf name="preserve-nexthop-hierarchy">
        <description>
          <text>Attempt preserving resolved nexthop chain in forwarding</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="defer-initial-multipath-build">
      <presence value="enable defer-initial-multipath-build"/>
      <description>
        <text>Defer initial multipath build until EOR is received</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="maximum-delay">
        <description>
          <text>Max delay(sec) multipath build after peer is up</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 3600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="graceful-restart">
      <description>
        <text>BGP graceful restart options</text>
      </description>
      <uses name="bgp-af-gr"/>
    </container>
    <leaf name="extended-nexthop">
      <description>
        <text>Extended nexthop encoding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="extended-nexthop-color">
      <description>
        <text>Resolve using extended color nexthop</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-install">
      <description>
        <text>Dont install received routes in forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="route-age-bgp-view">
      <description>
        <text>Maintain BGP route's age based on Update messages only</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="output-queue-priority">
      <description>
        <text>Default output-queue to assign updates to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="route-refresh-priority">
      <description>
        <text>Default output-queue to assign route refreshes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="withdraw-priority">
      <description>
        <text>Default output-queue to assign withdrawn routes to</text>
      </description>
      <uses name="bgp-output-queue-priority-class"/>
    </container>
    <container name="aggregate-label">
      <presence value="enable aggregate-label"/>
      <description>
        <text>Aggregate labels of incoming routes with the same FEC</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="community">
        <description>
          <text>Community to identify the FEC of incoming routes</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <container name="egress-protection">
      <presence value="enable egress-protection"/>
      <description>
        <text>Egress router protection</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="context-identifier">
        <description>
          <text>Context identifier</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="context-id">
          <description>
            <text>IP address</text>
          </description>
          <type name="jt:ipv4addr"/>
        </leaf>
      </container>
      <leaf-list name="keep-import">
        <ordered-by value="user"/>
        <description>
          <text>Import policy</text>
        </description>
        <type name="jt:policy-algebra"/>
      </leaf-list>
    </container>
  </grouping>
  <grouping name="bgp-output-queue-priority-class">
    <choice name="class">
      <case name="case_1">
        <leaf name="priority">
          <description>
            <text>Output queue priority; higher is better</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 16"/>
            </type>
          </type>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="expedited">
          <description>
            <text>Expedited queue; highest priority</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
  </grouping>
  <grouping name="bgp_filter_obj">
    <description>
      <text>Filter to apply to tracing</text>
    </description>
    <leaf name="match-on">
      <description>
        <text>Argument on which to match</text>
      </description>
      <type name="enumeration">
        <enum name="prefix">
          <description>
            <text>Filter based on prefix</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf-list name="policy">
      <ordered-by value="user"/>
      <description>
        <text>Filter policy</text>
      </description>
      <type name="jt:policy-algebra"/>
    </leaf-list>
  </grouping>
  <grouping name="bgpaf-accepted-prefix-limit">
    <uses name="apply-advanced"/>
    <leaf name="maximum">
      <description>
        <text>Maximum number of prefixes accepted from a peer</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="1 .. 4294967295"/>
        </type>
      </type>
    </leaf>
    <container name="teardown">
      <presence value="enable teardown"/>
      <description>
        <text>Clear peer connection on reaching limit</text>
      </description>
      <leaf name="limit-threshold">
        <description>
          <text>Percentage of prefix-limit to start warnings</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 100"/>
          </type>
        </type>
      </leaf>
      <container name="idle-timeout">
        <presence value="enable idle-timeout"/>
        <description>
          <text>Timeout before attempting to restart peer</text>
        </description>
        <choice name="idle-parm">
          <case name="case_1">
            <leaf name="forever">
              <description>
                <text>Idle the peer until the user intervenes</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="timeout">
              <description>
                <text>Timeout value, in minutes, for restarting peer</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 2400"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
    </container>
  </grouping>
  <grouping name="bgpaf-aigp-options">
    <uses name="apply-advanced"/>
    <leaf name="disable">
      <description>
        <text>Disable sending and receiving of AIGP attribute</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="bgpaf-loops">
    <uses name="apply-advanced"/>
    <leaf name="loops">
      <description>
        <text>AS-Path loop count</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="int32">
          <range value="1 .. 10"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="bgpaf-prefix-limit">
    <uses name="apply-advanced"/>
    <leaf name="maximum">
      <description>
        <text>Maximum number of prefixes from a peer</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="1 .. 4294967295"/>
        </type>
      </type>
    </leaf>
    <container name="teardown">
      <presence value="enable teardown"/>
      <description>
        <text>Clear peer connection on reaching limit</text>
      </description>
      <leaf name="limit-threshold">
        <description>
          <text>Percentage of prefix-limit to start warnings</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 100"/>
          </type>
        </type>
      </leaf>
      <container name="idle-timeout">
        <presence value="enable idle-timeout"/>
        <description>
          <text>Timeout before attempting to restart peer</text>
        </description>
        <choice name="idle-parm">
          <case name="case_1">
            <leaf name="forever">
              <description>
                <text>Idle the peer until the user intervenes</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="timeout">
              <description>
                <text>Timeout value, in minutes, for restarting peer</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 2400"/>
                </type>
              </type>
            </leaf>
          </case>
        </choice>
      </container>
    </container>
  </grouping>
  <grouping name="bgpaf-traffic-statistics">
    <uses name="apply-advanced"/>
    <leaf name="labeled-path">
      <description>
        <text>Ingress labeled path statistics</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="file">
      <description>
        <text>Statistics file options</text>
      </description>
      <leaf name="filename">
        <description>
          <text>Name of file in which to write trace information</text>
        </description>
        <type name="string">
          <length value="1 .. 1024"/>
        </type>
      </leaf>
      <leaf name="replace">
        <description>
          <text>Replace trace file rather than appending to it</text>
        </description>
        <status value="deprecated"/>
        <type name="empty"/>
      </leaf>
      <leaf name="size">
        <description>
          <text>Maximum trace file size</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="files">
        <description>
          <text>Maximum number of trace files</text>
        </description>
        <default value="10"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="2 .. 1000"/>
          </type>
        </type>
      </leaf>
      <leaf name="no-stamp">
        <description>
          <text>Do not timestamp trace file</text>
        </description>
        <status value="deprecated"/>
        <type name="empty"/>
      </leaf>
      <choice name="world-readable-choice">
        <leaf name="world-readable">
          <description>
            <text>Allow any user to read the log file</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="no-world-readable">
          <description>
            <text>Don't allow any user to read the log file</text>
          </description>
          <type name="empty"/>
        </leaf>
      </choice>
    </container>
    <leaf name="interval">
      <description>
        <text>Time to collect statistics (seconds)</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="int32">
          <range value="60 .. 65535"/>
        </type>
      </type>
    </leaf>
  </grouping>
  <grouping name="macro-data-type">
    <leaf name="name">
      <description>
        <text>Keyword part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="value">
      <description>
        <text>Value part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="rib_group_inet_type">
    <description>
      <text>Routing table group</text>
    </description>
    <leaf name="ribgroup-name">
      <description>
        <text>Name of the routing table group</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
</module>
